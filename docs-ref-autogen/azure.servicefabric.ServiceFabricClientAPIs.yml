#YamlMime:PythonReference
api_name: []
items:
- _type: class
  children:
  - azure.servicefabric.ServiceFabricClientAPIs.cancel_operation
  - azure.servicefabric.ServiceFabricClientAPIs.copy_image_store_content
  - azure.servicefabric.ServiceFabricClientAPIs.create_application
  - azure.servicefabric.ServiceFabricClientAPIs.create_compose_application
  - azure.servicefabric.ServiceFabricClientAPIs.create_service
  - azure.servicefabric.ServiceFabricClientAPIs.create_service_from_template
  - azure.servicefabric.ServiceFabricClientAPIs.delete_application
  - azure.servicefabric.ServiceFabricClientAPIs.delete_image_store_content
  - azure.servicefabric.ServiceFabricClientAPIs.delete_service
  - azure.servicefabric.ServiceFabricClientAPIs.deployed_service_package_to_node
  - azure.servicefabric.ServiceFabricClientAPIs.disable_node
  - azure.servicefabric.ServiceFabricClientAPIs.enable_node
  - azure.servicefabric.ServiceFabricClientAPIs.get_aad_metadata
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_health
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_health_using_policy
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_manifest
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_name_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list_by_name
  - azure.servicefabric.ServiceFabricClientAPIs.get_application_upgrade
  - azure.servicefabric.ServiceFabricClientAPIs.get_chaos_report
  - azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health
  - azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk
  - azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk_using_policy_and_advanced_filters
  - azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_using_policy
  - azure.servicefabric.ServiceFabricClientAPIs.get_cluster_manifest
  - azure.servicefabric.ServiceFabricClientAPIs.get_cluster_upgrade_progress
  - azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status
  - azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_data_loss_progress
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health_using_policy
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_code_package_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health_using_policy
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list_by_name
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_detail_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_by_name
  - azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_fault_operation_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_image_store_content
  - azure.servicefabric.ServiceFabricClientAPIs.get_image_store_root_content
  - azure.servicefabric.ServiceFabricClientAPIs.get_node_health
  - azure.servicefabric.ServiceFabricClientAPIs.get_node_health_using_policy
  - azure.servicefabric.ServiceFabricClientAPIs.get_node_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_node_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_node_load_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_node_transition_progress
  - azure.servicefabric.ServiceFabricClientAPIs.get_partition_health
  - azure.servicefabric.ServiceFabricClientAPIs.get_partition_health_using_policy
  - azure.servicefabric.ServiceFabricClientAPIs.get_partition_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_partition_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_partition_load_information
  - azure.servicefabric.ServiceFabricClientAPIs.get_partition_restart_progress
  - azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_code_version_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_config_version_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_quorum_loss_progress
  - azure.servicefabric.ServiceFabricClientAPIs.get_replica_health
  - azure.servicefabric.ServiceFabricClientAPIs.get_replica_health_using_policy
  - azure.servicefabric.ServiceFabricClientAPIs.get_replica_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_replica_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_service_description
  - azure.servicefabric.ServiceFabricClientAPIs.get_service_health
  - azure.servicefabric.ServiceFabricClientAPIs.get_service_health_using_policy
  - azure.servicefabric.ServiceFabricClientAPIs.get_service_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_service_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.get_service_manifest
  - azure.servicefabric.ServiceFabricClientAPIs.get_service_name_info
  - azure.servicefabric.ServiceFabricClientAPIs.get_service_type_info_list
  - azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_command
  - azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_query
  - azure.servicefabric.ServiceFabricClientAPIs.provision_application_type
  - azure.servicefabric.ServiceFabricClientAPIs.recover_all_partitions
  - azure.servicefabric.ServiceFabricClientAPIs.recover_partition
  - azure.servicefabric.ServiceFabricClientAPIs.recover_service_partitions
  - azure.servicefabric.ServiceFabricClientAPIs.recover_system_partitions
  - azure.servicefabric.ServiceFabricClientAPIs.remove_compose_application
  - azure.servicefabric.ServiceFabricClientAPIs.remove_node_state
  - azure.servicefabric.ServiceFabricClientAPIs.remove_replica
  - azure.servicefabric.ServiceFabricClientAPIs.report_application_health
  - azure.servicefabric.ServiceFabricClientAPIs.report_cluster_health
  - azure.servicefabric.ServiceFabricClientAPIs.report_deployed_application_health
  - azure.servicefabric.ServiceFabricClientAPIs.report_deployed_service_package_health
  - azure.servicefabric.ServiceFabricClientAPIs.report_node_health
  - azure.servicefabric.ServiceFabricClientAPIs.report_partition_health
  - azure.servicefabric.ServiceFabricClientAPIs.report_replica_health
  - azure.servicefabric.ServiceFabricClientAPIs.report_service_health
  - azure.servicefabric.ServiceFabricClientAPIs.reset_partition_load
  - azure.servicefabric.ServiceFabricClientAPIs.resolve_service
  - azure.servicefabric.ServiceFabricClientAPIs.restart_deployed_code_package
  - azure.servicefabric.ServiceFabricClientAPIs.restart_node
  - azure.servicefabric.ServiceFabricClientAPIs.restart_replica
  - azure.servicefabric.ServiceFabricClientAPIs.resume_application_upgrade
  - azure.servicefabric.ServiceFabricClientAPIs.rollback_application_upgrade
  - azure.servicefabric.ServiceFabricClientAPIs.start_application_upgrade
  - azure.servicefabric.ServiceFabricClientAPIs.start_chaos
  - azure.servicefabric.ServiceFabricClientAPIs.start_data_loss
  - azure.servicefabric.ServiceFabricClientAPIs.start_node
  - azure.servicefabric.ServiceFabricClientAPIs.start_node_transition
  - azure.servicefabric.ServiceFabricClientAPIs.start_partition_restart
  - azure.servicefabric.ServiceFabricClientAPIs.start_quorum_loss
  - azure.servicefabric.ServiceFabricClientAPIs.stop_chaos
  - azure.servicefabric.ServiceFabricClientAPIs.stop_node
  - azure.servicefabric.ServiceFabricClientAPIs.unprovision_application_type
  - azure.servicefabric.ServiceFabricClientAPIs.update_application_upgrade
  - azure.servicefabric.ServiceFabricClientAPIs.update_service
  - azure.servicefabric.ServiceFabricClientAPIs.upload_file
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.servicefabric
  name: ServiceFabricClientAPIs
  source:
    id: ServiceFabricClientAPIs
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 47
  summary: 'Bases: `object`

    Service Fabric REST Client APIs allows management of Service Fabric clusters,
    applications and services.

















































































































    '
  syntax:
    content: ServiceFabricClientAPIs(self, credentials, base_url=None, filepath=None)
    parameters:
    - description: Subscription credentials which uniquely identify client subscription.
      id: credentials
      type:
      - 'A msrest Authentication

        object'
    - description: Service URL
      id: base_url
      type:
      - str
    - description: Existing config
      id: filepath
      type:
      - str
    variables:
    - description: Configuration for client.
      id: config
      type:
      - ServiceFabricClientAPIsConfiguration
  type: Class
  uid: azure.servicefabric.ServiceFabricClientAPIs
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.cancel_operation
  langs:
  - python
  module: azure.servicefabric
  name: cancel_operation
  source:
    id: cancel_operation
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 9156
  summary: 'Cancels a user-induced fault operation.

    The following is a list of APIs that start fault operations that may be cancelled
    using CancelOperation - - StartDataLoss - StartQuorumLoss - StartPartitionRestart
    - StartNodeTransition If force is false, then the specified user-induced operation
    will be gracefully stopped and cleaned up.  If force is true, the command will
    be aborted, and some internal state may be left behind.  Specifying force as true
    should be used with care.  Calling this API with force set to true is not allowed
    until this API has already been called on the same test command with force set
    to false first, or unless the test command already has an OperationState of OperationState.RollingBack.
    Clarification: OperationState.RollingBack means that the system will/is be cleaning
    up internal system state caused by executing the command.  It will not restore
    data if the test command was to cause data loss.  For example, if you call StartDataLoss
    then call this API, the system will only clean up internal state from

    running the command. It will not restore the target partition''s data, if the
    command progressed far enough to cause data loss. Important note:  if this API
    is invoked with force==true, internal state may be left behind. .'
  syntax:
    content: cancel_operation(self, operation_id, force=False, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: 'False'
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - description: Indicates whether to gracefully rollback and clean up internal
        system state modified by executing the user-induced operation.
      id: force
      type:
      - bool
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.cancel_operation
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.copy_image_store_content
  langs:
  - python
  module: azure.servicefabric
  name: copy_image_store_content
  source:
    id: copy_image_store_content
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8209
  summary: 'Copies image store content internally.

    Copies the image store content from the source image store relative path to the
    destination image store relative path.'
  syntax:
    content: copy_image_store_content(self, image_store_copy_description, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: Describes the copy description for the image store.
      id: image_store_copy_description
      type:
      - ImageStoreCopyDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.copy_image_store_content
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.create_application
  langs:
  - python
  module: azure.servicefabric
  name: create_application
  source:
    id: create_application
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2517
  summary: 'Creates a Service Fabric application.

    Creates a Service Fabric application using the specified description.'
  syntax:
    content: create_application(self, application_description, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: Describes the application to be created.
      id: application_description
      type:
      - ApplicationDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.create_application
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.create_compose_application
  langs:
  - python
  module: azure.servicefabric
  name: create_compose_application
  source:
    id: create_compose_application
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7487
  summary: 'Creates a Service Fabric compose application.

    Creates a Service Fabric compose application.'
  syntax:
    content: create_compose_application(self, create_compose_application_description,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: Describes the compose application that needs to be created.
      id: create_compose_application_description
      type:
      - CreateComposeApplicationDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.create_compose_application
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.create_service
  langs:
  - python
  module: azure.servicefabric
  name: create_service
  source:
    id: create_service
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4342
  summary: 'Creates the specified service.

    Creates the specified service.'
  syntax:
    content: create_service(self, application_id, service_description, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: The configuration for the service.
      id: service_description
      type:
      - ServiceDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.create_service
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.create_service_from_template
  langs:
  - python
  module: azure.servicefabric
  name: create_service_from_template
  source:
    id: create_service_from_template
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4407
  summary: 'Creates a Service Fabric service from the service template defined in
    the application manifest.

    Creates a Service Fabric service from the service template defined in the application
    manifest.'
  syntax:
    content: create_service_from_template(self, application_id, service_from_template_description,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: Describes the service that needs to be created from the template
        defined in the application manifest.
      id: service_from_template_description
      type:
      - ServiceFromTemplateDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.create_service_from_template
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.delete_application
  langs:
  - python
  module: azure.servicefabric
  name: delete_application
  source:
    id: delete_application
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2575
  summary: 'Deletes an existing Service Fabric application.

    Deletes an existing Service Fabric application. An application must be created
    before it can be deleted. Deleting an application will delete all services that
    are part of that application. By default Service Fabric will try to close service
    replicas in a graceful manner and then delete the service. However if service
    is having issues closing the replica gracefully, the delete operation may take
    a long time or get stuck. Use the optional ForceRemove flag to skip the graceful
    close sequence and forcefully delete the application and all of the its services.'
  syntax:
    content: delete_application(self, application_id, force_remove=None, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: Remove a Service Fabric application or service forcefully without
        going through the graceful shutdown sequence. This parameter can be used to
        forcefully delete an application or service for which delete is timing out
        due to issues in the service code that prevents graceful close of replicas.
      id: force_remove
      type:
      - bool
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.delete_application
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.delete_image_store_content
  langs:
  - python
  module: azure.servicefabric
  name: delete_image_store_content
  source:
    id: delete_image_store_content
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8091
  summary: 'Deletes existing image store content.

    Deletes existing image store content being found within the given image store
    relative path. This can be used to delete uploaded application packages once they
    are provisioned.'
  syntax:
    content: delete_image_store_content(self, content_path, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: Relative path to file or folder in the image store from its root.
      id: content_path
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.delete_image_store_content
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.delete_service
  langs:
  - python
  module: azure.servicefabric
  name: delete_service
  source:
    id: delete_service
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4477
  summary: 'Deletes an existing Service Fabric service.

    Deletes an existing Service Fabric service. A service must be created before it
    can be deleted. By default Service Fabric will try to close service replicas in
    a graceful manner and then delete the service. However if service is having issues
    closing the replica gracefully, the delete operation may take a long time or get
    stuck. Use the optional ForceRemove flag to skip the graceful close sequence and
    forcefully delete the service.'
  syntax:
    content: delete_service(self, service_id, force_remove=None, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: Remove a Service Fabric application or service forcefully without
        going through the graceful shutdown sequence. This parameter can be used to
        forcefully delete an application or service for which delete is timing out
        due to issues in the service code that prevents graceful close of replicas.
      id: force_remove
      type:
      - bool
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.delete_service
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.deployed_service_package_to_node
  langs:
  - python
  module: azure.servicefabric
  name: deployed_service_package_to_node
  source:
    id: deployed_service_package_to_node
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7264
  summary: 'Downloads packages associated with specified service manifest to image
    cache on specified node.

    Downloads packages associated with specified service manifest to image cache on
    specified node. .'
  syntax:
    content: deployed_service_package_to_node(self, node_name, deploy_service_package_to_node_description,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '60'
      description: Describes information for deploying a service package to a Service
        Fabric node.
      id: deploy_service_package_to_node_description
      type:
      - DeployServicePackageToNodeDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.deployed_service_package_to_node
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.disable_node
  langs:
  - python
  module: azure.servicefabric
  name: disable_node
  source:
    id: disable_node
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1456
  summary: 'Deactivate a Service Fabric cluster node with the specified deactivation
    intent.

    Deactivate a Service Fabric cluster node with the specified deactivation intent.
    Once the deactivation is in progress, the deactivation intent can be increased,
    but not decreased (for example, a node which is was deactivated with the Pause
    intent can be deactivated further with Restart, but not the other way around.
    Nodes may be reactivated using the Activate a node operation any time after they
    are deactivated. If the deactivation is not complete this will cancel the deactivation.
    A node which goes down and comes back up while deactivated will still need to
    be reactivated before services will be placed on that node.'
  syntax:
    content: disable_node(self, node_name, timeout=60, deactivation_intent=None, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: 'Describes the intent or reason for deactivating the node. The
        possible values are following. - Pause - Indicates that the node should be
        paused. The value is 1. - Restart - Indicates that the intent is for the node
        to be restarted after a short period of time. The value is 2. - RemoveData
        - Indicates the intent is for the node to remove data. The value is 3. . Possible
        values include: ''Pause'', ''Restart'', ''RemoveData'''
      id: deactivation_intent
      type:
      - str
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.disable_node
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.enable_node
  langs:
  - python
  module: azure.servicefabric
  name: enable_node
  source:
    id: enable_node
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1537
  summary: 'Activate a Service Fabric cluster node which is currently deactivated.

    Activates a Service Fabric cluster node which is currently deactivated. Once activated,
    the node will again become a viable target for placing new replicas, and any deactivated
    replicas remaining on the node will be reactivated.'
  syntax:
    content: enable_node(self, node_name, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.enable_node
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_aad_metadata
  langs:
  - python
  module: azure.servicefabric
  name: get_aad_metadata
  source:
    id: get_aad_metadata
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 888
  summary: 'Gets the Azure Active Directory metadata used for secured connection to
    cluster.

    Gets the Azure Active Directory metadata used for secured connection to cluster.
    This API is not supposed to be called separately. It provides information needed
    to set up an Azure Active Directory secured connection with a Service Fabric cluster.
    .'
  syntax:
    content: get_aad_metadata(self, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_aad_metadata
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_health
  langs:
  - python
  module: azure.servicefabric
  name: get_application_health
  source:
    id: get_application_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2811
  summary: 'Gets the health of the service fabric application.

    Returns the heath state of the service fabric application. The response reports
    either Ok, Error or Warning health state. If the entity is not found in the helath
    store, it will return Error.'
  syntax:
    content: get_application_health(self, application_id, events_health_state_filter=0,
      deployed_applications_health_state_filter=0, services_health_state_filter=0,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: 'Allows filtering of the deployed applications health state objects
        returned in the result of application health query based on their health state.
        The possible values for this parameter include integer value of one of the
        following health states. Only deployed applications that match the filter
        will be returned.All deployed applications are used to evaluate the aggregated
        health state. If not specified, all entries are returned. The state values
        are flag based enumeration, so the value could be a combination of these value
        obtained using bitwise ''OR'' operator. For example, if the provided value
        is 6 then health state of deployed applications with HealthState value of
        OK (2) and Warning (4) are returned. - Default - Default value. Matches any
        HealthState. The value is zero. - None - Filter that doesn''t match any HealthState
        value. Used in order to return no results on a given collection of states.
        The value is 1. - Ok - Filter that matches input with HealthState value Ok.
        The value is

        2. - Warning - Filter that matches input with HealthState value Warning. The
        value is 4. - Error - Filter that matches input with HealthState value Error.
        The value is 8. - All - Filter that matches input with any HealthState value.
        The value is 65535.'
      id: deployed_applications_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: "Allows filtering of the services health state objects returned\
        \ in the result of services health query based on their health state. The\
        \ possible values for this parameter include integer value of one of the following\
        \ health states. Only services that match the filter are returned. All services\
        \ are used to evaluate the aggregated health state. If not specified, all\
        \ entries are returned. The state values are flag based enumeration, so the\
        \ value could be a combination of these value obtained using bitwise 'OR'\
        \ operator. For example, if the provided value is 6 then health state of services\
        \ with HealthState value of OK (2) and Warning (4) will be returned. - Default\
        \ - Default value. Matches any HealthState. The value is zero. - None - Filter\
        \ that doesn\uFFFDt match any HealthState value. Used in order to return no\
        \ results on a given collection of states. The value is 1. - Ok - Filter that\
        \ matches input with HealthState value Ok. The value is 2. - Warning - Filter\
        \ that matches input with\nHealthState value Warning. The value is 4. - Error\
        \ - Filter that matches input with HealthState value Error. The value is 8.\
        \ - All - Filter that matches input with any HealthState value. The value\
        \ is 65535."
      id: services_health_state_filter
      type:
      - int
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '0'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '0'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_health_using_policy
  langs:
  - python
  module: azure.servicefabric
  name: get_application_health_using_policy
  source:
    id: get_application_health_using_policy
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2963
  summary: 'Gets the health of a Service Fabric application using the specified policy.

    Gets the health of a Service Fabric application. Use EventsHealthStateFilter to
    filter the collection of health events reported on the node based on the health
    state. Use ClusterHealthPolicies to override the health policies used to evaluate
    the health.'
  syntax:
    content: get_application_health_using_policy(self, application_id, events_health_state_filter=0,
      deployed_applications_health_state_filter=0, services_health_state_filter=0,
      application_health_policy=None, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: 'Allows filtering of the deployed applications health state objects
        returned in the result of application health query based on their health state.
        The possible values for this parameter include integer value of one of the
        following health states. Only deployed applications that match the filter
        will be returned.All deployed applications are used to evaluate the aggregated
        health state. If not specified, all entries are returned. The state values
        are flag based enumeration, so the value could be a combination of these value
        obtained using bitwise ''OR'' operator. For example, if the provided value
        is 6 then health state of deployed applications with HealthState value of
        OK (2) and Warning (4) are returned. - Default - Default value. Matches any
        HealthState. The value is zero. - None - Filter that doesn''t match any HealthState
        value. Used in order to return no results on a given collection of states.
        The value is 1. - Ok - Filter that matches input with HealthState value Ok.
        The value is

        2. - Warning - Filter that matches input with HealthState value Warning. The
        value is 4. - Error - Filter that matches input with HealthState value Error.
        The value is 8. - All - Filter that matches input with any HealthState value.
        The value is 65535.'
      id: deployed_applications_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: "Allows filtering of the services health state objects returned\
        \ in the result of services health query based on their health state. The\
        \ possible values for this parameter include integer value of one of the following\
        \ health states. Only services that match the filter are returned. All services\
        \ are used to evaluate the aggregated health state. If not specified, all\
        \ entries are returned. The state values are flag based enumeration, so the\
        \ value could be a combination of these value obtained using bitwise 'OR'\
        \ operator. For example, if the provided value is 6 then health state of services\
        \ with HealthState value of OK (2) and Warning (4) will be returned. - Default\
        \ - Default value. Matches any HealthState. The value is zero. - None - Filter\
        \ that doesn\uFFFDt match any HealthState value. Used in order to return no\
        \ results on a given collection of states. The value is 1. - Ok - Filter that\
        \ matches input with HealthState value Ok. The value is 2. - Warning - Filter\
        \ that matches input with\nHealthState value Warning. The value is 4. - Error\
        \ - Filter that matches input with HealthState value Error. The value is 8.\
        \ - All - Filter that matches input with any HealthState value. The value\
        \ is 65535."
      id: services_health_state_filter
      type:
      - int
    - defaultValue: None
      description: Describes the health policies used to evaluate the health of an
        application or one of its children. If not present, the health evaluation
        uses the health policy from application manifest or the default health policy.
      id: application_health_policy
      type:
      - ApplicationHealthPolicy
    - defaultValue: '60'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '0'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '0'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_health_using_policy
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_info
  langs:
  - python
  module: azure.servicefabric
  name: get_application_info
  source:
    id: get_application_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2736
  summary: 'Gets information about a Service Fabric application.

    Returns the information about the application that was created or in the process
    of being created in the Service Fabric cluster and whose name matches the one
    specified as the parameter. The response includes the name, type, status, parameters
    and other details about the application.'
  syntax:
    content: get_application_info(self, application_id, exclude_application_parameters=False,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The flag that specifies whether application parameters will be
        excluded from the result.
      id: exclude_application_parameters
      type:
      - bool
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_application_info_list
  source:
    id: get_application_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2649
  summary: 'Gets the list of applications created in the Service Fabric cluster that
    match filters specified as the parameter.

    Gets the information about the applications that were created or in the process
    of being created in the Service Fabric cluster and match filters specified as
    the parameter. The response includes the name, type, status, parameters and other
    details about the application. If the applications do not fit in a page, one page
    of results is returned as well as a continuation token which can be used to get
    the next page.'
  syntax:
    content: get_application_info_list(self, application_type_name=None, exclude_application_parameters=False,
      continuation_token=None, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The application type name used to filter the applications to query
        for. This value should not contain the application type version.
      id: application_type_name
      type:
      - str
    - defaultValue: 'False'
      description: The flag that specifies whether application parameters will be
        excluded from the result.
      id: exclude_application_parameters
      type:
      - bool
    - defaultValue: None
      description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - defaultValue: '60'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_manifest
  langs:
  - python
  module: azure.servicefabric
  name: get_application_manifest
  source:
    id: get_application_manifest
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4053
  summary: 'Gets the manifest describing an application type.

    Gets the manifest describing an application type. The response contains the application
    manifest XML as a string.'
  syntax:
    content: get_application_manifest(self, application_type_name, application_type_version,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the application type.
      id: application_type_name
      type:
      - str
    - defaultValue: '60'
      description: The version of the application type.
      id: application_type_version
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_manifest
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_name_info
  langs:
  - python
  module: azure.servicefabric
  name: get_application_name_info
  source:
    id: get_application_name_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4276
  summary: 'Gets the name of the Service Fabric application for a service.

    The GetApplicationName endpoint returns the name of the application for the specified
    service.'
  syntax:
    content: get_application_name_info(self, service_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_name_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_application_type_info_list
  source:
    id: get_application_type_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1870
  summary: 'Gets the list of application types in the Service Fabric cluster.

    Returns the information about the application types that are provisioned or in
    the process of being provisioned in the Service Fabric cluster. Each version of
    an application type is returned as one application type. The response includes
    the name, version, status and other details about the application type. This is
    a paged query, meaning that if not all of the application types fit in a page,
    one page of results is returned as well as a continuation token which can be used
    to get the next page. For example, if there are 10 application types but a page
    only fits the first 3 application types, or if max results is set to 3, then 3
    is returned. To access the rest of the results, retrieve subsequent pages by using
    the returned continuation token in the next query. An empty continuation token
    is returned if there are no subsequent pages.'
  syntax:
    content: get_application_type_info_list(self, exclude_application_parameters=False,
      continuation_token=None, max_results=0, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The flag that specifies whether application parameters will be
        excluded from the result.
      id: exclude_application_parameters
      type:
      - bool
    - defaultValue: 'False'
      description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - defaultValue: None
      description: The maximum number of results to be returned as part of the paged
        queries. This parameter defines the upper bound on the number of results returned.
        The results returned can be less than the specified maximum results if they
        do not fit in the message as per the max message size restrictions defined
        in the configuration. If this parameter is zero or not specified, the paged
        queries includes as much results as possible that fit in the return message.
      id: max_results
      type:
      - long
    - defaultValue: '60'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '0'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list_by_name
  langs:
  - python
  module: azure.servicefabric
  name: get_application_type_info_list_by_name
  source:
    id: get_application_type_info_list_by_name
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1967
  summary: 'Gets the list of application types in the Service Fabric cluster matching
    exactly the specified name.

    Returns the information about the application types that are provisioned or in
    the process of being provisioned in the Service Fabric cluster. These results
    are of application types whose name match exactly the one specified as the parameter,
    and which comply with the given query parameters. All versions of the application
    type matching the application type name are returned, with each version returned
    as one application type. The response includes the name, version, status and other
    details about the application type. This is a paged query, meaning that if not
    all of the application types fit in a page, one page of results is returned as
    well as a continuation token which can be used to get the next page. For example,
    if there are 10 application types but a page only fits the first 3 application
    types, or if max results is set to 3, then 3 is returned. To access the rest of
    the results, retrieve subsequent pages by using the returned continuation token
    in the next query. An empty

    continuation token is returned if there are no subsequent pages.'
  syntax:
    content: get_application_type_info_list_by_name(self, application_type_name, exclude_application_parameters=False,
      continuation_token=None, max_results=0, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the application type.
      id: application_type_name
      type:
      - str
    - description: The flag that specifies whether application parameters will be
        excluded from the result.
      id: exclude_application_parameters
      type:
      - bool
    - description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - defaultValue: 'False'
      description: The maximum number of results to be returned as part of the paged
        queries. This parameter defines the upper bound on the number of results returned.
        The results returned can be less than the specified maximum results if they
        do not fit in the message as per the max message size restrictions defined
        in the configuration. If this parameter is zero or not specified, the paged
        queries includes as much results as possible that fit in the return message.
      id: max_results
      type:
      - long
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '0'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list_by_name
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_upgrade
  langs:
  - python
  module: azure.servicefabric
  name: get_application_upgrade
  source:
    id: get_application_upgrade
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3278
  summary: 'Gets details for the latest upgrade performed on this application.

    Returns information about the state of the latest application upgrade along with
    details to aid debugging application health issues.'
  syntax:
    content: get_application_upgrade(self, application_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_upgrade
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_chaos_report
  langs:
  - python
  module: azure.servicefabric
  name: get_chaos_report
  source:
    id: get_chaos_report
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7877
  summary: 'Gets the next segment of the Chaos report based on the passed-in continuation
    token or the passed-in time-range.

    You can either specify the ContinuationTokenOptionalQueryParam to get the next
    segment of the Chaos report or you can specify the time-range through StartTimeUtcOptionalQueryParam
    and EndTimeUtcOptionalQueryParam, but you cannot specify both the ContinuationTokenOptionalQueryParam
    and the time-range at the same time. When the Chaos report contains more than
    100 Chaos events, the Chaos report is returned in segments where a segment contains
    no more than 100 Chaos events. .'
  syntax:
    content: get_chaos_report(self, continuation_token=None, start_time_utc=None,
      end_time_utc=None, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - defaultValue: 'False'
      description: Start of the time range for which a Chaos report is to be generated.
      id: start_time_utc
      type:
      - str
    - defaultValue: None
      description: End of the time range for which a Chaos report is to be generated.
      id: end_time_utc
      type:
      - str
    - defaultValue: '60'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_chaos_report
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health
  langs:
  - python
  module: azure.servicefabric
  name: get_cluster_health
  source:
    id: get_cluster_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 142
  summary: 'Gets the health of a Service Fabric cluster.

    Gets the health of a Service Fabric cluster. Use EventsHealthStateFilter to filter
    the collection of health events reported on the cluster based on the health state.
    Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter
    the collection of nodes and applications returned based on their aggregated health
    state. .'
  syntax:
    content: get_cluster_health(self, nodes_health_state_filter=0, applications_health_state_filter=0,
      events_health_state_filter=0, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: "Allows filtering of the node health state objects returned in\
        \ the result of cluster health query based on their health state. The possible\
        \ values for this parameter include integer value of one of the following\
        \ health states. Only nodes that match the filter are returned. All nodes\
        \ are used to evaluate the aggregated health state. If not specified, all\
        \ entries are returned. The state values are flag based enumeration, so the\
        \ value could be a combination of these values obtained using bitwise 'OR'\
        \ operator. For example, if the provided value is 6 then health state of nodes\
        \ with HealthState value of OK (2) and Warning (4) are returned. - Default\
        \ - Default value. Matches any HealthState. The value is zero. - None - Filter\
        \ that doesn\u2019t match any HealthState value. Used in order to return no\
        \ results on a given collection of states. The value is 1. - Ok - Filter that\
        \ matches input with HealthState value Ok. The value is 2. - Warning - Filter\
        \ that matches input with HealthState value\nWarning. The value is 4. - Error\
        \ - Filter that matches input with HealthState value Error. The value is 8.\
        \ - All - Filter that matches input with any HealthState value. The value\
        \ is 65535."
      id: nodes_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: "Allows filtering of the application health state objects returned\
        \ in the result of cluster health query based on their health state. The possible\
        \ values for this parameter include integer value obtained from members or\
        \ bitwise operations on members of HealthStateFilter enumeration. Only applications\
        \ that match the filter are returned. All applications are used to evaluate\
        \ the aggregated health state. If not specified, all entries are returned.\
        \ The state values are flag based enumeration, so the value could be a combination\
        \ of these values obtained using bitwise 'OR' operator. For example, if the\
        \ provided value is 6 then health state of applications with HealthState value\
        \ of OK (2) and Warning (4) are returned. - Default - Default value. Matches\
        \ any HealthState. The value is zero. - None - Filter that doesn\u2019t match\
        \ any HealthState value. Used in order to return no results on a given collection\
        \ of states. The value is 1. - Ok - Filter that matches input with HealthState\
        \ value Ok. The\nvalue is 2. - Warning - Filter that matches input with HealthState\
        \ value Warning. The value is 4. - Error - Filter that matches input with\
        \ HealthState value Error. The value is 8. - All - Filter that matches input\
        \ with any HealthState value. The value is 65535."
      id: applications_health_state_filter
      type:
      - int
    - defaultValue: None
      description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - defaultValue: '60'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '0'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '0'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '0'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk
  langs:
  - python
  module: azure.servicefabric
  name: get_cluster_health_chunk
  source:
    id: get_cluster_health_chunk
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 461
  summary: 'Gets the health of a Service Fabric cluster using health chunks.

    Gets the health of a Service Fabric cluster using health chunks. Includes the
    aggregated health state of the cluster, but none of the cluster entities. To expand
    the cluster health and get the health state of all or some of the entities, use
    the POST URI and specify the cluster health chunk query description. .'
  syntax:
    content: get_cluster_health_chunk(self, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk_using_policy_and_advanced_filters
  langs:
  - python
  module: azure.servicefabric
  name: get_cluster_health_chunk_using_policy_and_advanced_filters
  source:
    id: get_cluster_health_chunk_using_policy_and_advanced_filters
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 525
  summary: 'Gets the health of a Service Fabric cluster using health chunks.

    Gets the health of a Service Fabric cluster using health chunks. The health evaluation
    is done based on the input cluster health chunk query description. The query description
    allows users to specify health policies for evaluating the cluster and its children.
    Users can specify very flexible filters to select which cluster entities to return.
    The selection can be done based on the entities health state and based on the
    hierarchy. The query can return multi-level children of the entities based on
    the specified filters. For example, it can return one application with a specified
    name, and for this application, return only services that are in Error or Warning,
    and all partitions and replicas for one of these services. .'
  syntax:
    content: get_cluster_health_chunk_using_policy_and_advanced_filters(self, cluster_health_chunk_query_description=None,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: 'Describes the cluster and application health policies used to
        evaluate the cluster health and the filters to select which cluster entities
        to be returned. If the cluster health policy is present, it is used to evaluate
        the cluster events and the cluster nodes. If not present, the health evaluation
        uses the cluster health policy defined in the cluster manifest or the default
        cluster health policy. By default, each application is evaluated using its
        specific application health policy, defined in the application manifest, or
        the default health policy, if no policy is defined in manifest. If the application
        health policy map is specified, and it has an entry for an application, the
        specified application health policy is used to evaluate the application health.
        Users can specify very flexible filters to select which cluster entities to
        include in response. The selection can be done based on the entities health
        state and based on the hierarchy. The query can return multi-level children
        of

        the entities based on the specified filters. For example, it can return one
        application with a specified name, and for this application, return only services
        that are in Error or Warning, and all partitions and replicas for one of these
        services.'
      id: cluster_health_chunk_query_description
      type:
      - ClusterHealthChunkQueryDescription
    - defaultValue: 'False'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '60'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk_using_policy_and_advanced_filters
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_using_policy
  langs:
  - python
  module: azure.servicefabric
  name: get_cluster_health_using_policy
  source:
    id: get_cluster_health_using_policy
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 291
  summary: 'Gets the health of a Service Fabric cluster using the specified policy.

    Gets the health of a Service Fabric cluster. Use EventsHealthStateFilter to filter
    the collection of health events reported on the cluster based on the health state.
    Similarly, use NodesHealthStateFilter and ApplicationsHealthStateFilter to filter
    the collection of nodes and applications returned based on their aggregated health
    state. Use ClusterHealthPolicies to override the health policies used to evaluate
    the health. .'
  syntax:
    content: get_cluster_health_using_policy(self, nodes_health_state_filter=0, applications_health_state_filter=0,
      events_health_state_filter=0, timeout=60, application_health_policy_map=None,
      cluster_health_policy=None, custom_headers=None, raw=False)
    parameters:
    - description: "Allows filtering of the node health state objects returned in\
        \ the result of cluster health query based on their health state. The possible\
        \ values for this parameter include integer value of one of the following\
        \ health states. Only nodes that match the filter are returned. All nodes\
        \ are used to evaluate the aggregated health state. If not specified, all\
        \ entries are returned. The state values are flag based enumeration, so the\
        \ value could be a combination of these values obtained using bitwise 'OR'\
        \ operator. For example, if the provided value is 6 then health state of nodes\
        \ with HealthState value of OK (2) and Warning (4) are returned. - Default\
        \ - Default value. Matches any HealthState. The value is zero. - None - Filter\
        \ that doesn\u2019t match any HealthState value. Used in order to return no\
        \ results on a given collection of states. The value is 1. - Ok - Filter that\
        \ matches input with HealthState value Ok. The value is 2. - Warning - Filter\
        \ that matches input with HealthState value\nWarning. The value is 4. - Error\
        \ - Filter that matches input with HealthState value Error. The value is 8.\
        \ - All - Filter that matches input with any HealthState value. The value\
        \ is 65535."
      id: nodes_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: "Allows filtering of the application health state objects returned\
        \ in the result of cluster health query based on their health state. The possible\
        \ values for this parameter include integer value obtained from members or\
        \ bitwise operations on members of HealthStateFilter enumeration. Only applications\
        \ that match the filter are returned. All applications are used to evaluate\
        \ the aggregated health state. If not specified, all entries are returned.\
        \ The state values are flag based enumeration, so the value could be a combination\
        \ of these values obtained using bitwise 'OR' operator. For example, if the\
        \ provided value is 6 then health state of applications with HealthState value\
        \ of OK (2) and Warning (4) are returned. - Default - Default value. Matches\
        \ any HealthState. The value is zero. - None - Filter that doesn\u2019t match\
        \ any HealthState value. Used in order to return no results on a given collection\
        \ of states. The value is 1. - Ok - Filter that matches input with HealthState\
        \ value Ok. The\nvalue is 2. - Warning - Filter that matches input with HealthState\
        \ value Warning. The value is 4. - Error - Filter that matches input with\
        \ HealthState value Error. The value is 8. - All - Filter that matches input\
        \ with any HealthState value. The value is 65535."
      id: applications_health_state_filter
      type:
      - int
    - defaultValue: None
      description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: ''
      id: application_health_policy_map
      type:
      - 'list of

        ApplicationHealthPolicyMapItem'
    - defaultValue: '60'
      description: ''
      id: cluster_health_policy
      type:
      - ClusterHealthPolicy
    - defaultValue: '0'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '0'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '0'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_using_policy
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_manifest
  langs:
  - python
  module: azure.servicefabric
  name: get_cluster_manifest
  source:
    id: get_cluster_manifest
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 72
  summary: 'Get the Service Fabric cluster manifest.

    Get the Service Fabric cluster manifest. The cluster manifest contains properties
    of the cluster that include different node types on the cluster, security configurations,
    fault and upgrade domain topologies etc. These properties are specified as part
    of the ClusterConfig.JSON file while deploying a stand alone cluster. However,
    most of the information in the cluster manifest is generated internally by service
    fabric during cluster deployment in other deployment scenarios (for e.g when using
    azuer portal). The contents of the cluster manifest are for informational purposes
    only and users are not expected to take a dependency on the format of the file
    contents or its interpretation. .'
  syntax:
    content: get_cluster_manifest(self, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_manifest
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_upgrade_progress
  langs:
  - python
  module: azure.servicefabric
  name: get_cluster_upgrade_progress
  source:
    id: get_cluster_upgrade_progress
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 828
  summary: 'Gets the progress of the current cluster upgrade.

    Gets the current progress of the ongoing cluster upgrade. If no upgrade is currently
    in progress, gets the last state of the previous cluster upgrade.'
  syntax:
    content: get_cluster_upgrade_progress(self, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_upgrade_progress
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status
  langs:
  - python
  module: azure.servicefabric
  name: get_compose_application_status
  source:
    id: get_compose_application_status
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7546
  summary: 'Gets information about a Service Fabric compose application.

    Returns the status of compose application that was created or in the process of
    being created in the Service Fabric cluster and whose name matches the one specified
    as the parameter. The response includes the name, status and other details about
    the application.'
  syntax:
    content: get_compose_application_status(self, application_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status_list
  langs:
  - python
  module: azure.servicefabric
  name: get_compose_application_status_list
  source:
    id: get_compose_application_status_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7615
  summary: 'Gets the list of compose applications created in the Service Fabric cluster.

    Gets the status about the compose applications that were created or in the process
    of being created in the Service Fabric cluster. The response includes the name,
    status and other details about the compose application. If the applications do
    not fit in a page, one page of results is returned as well as a continuation token
    which can be used to get the next page.'
  syntax:
    content: get_compose_application_status_list(self, continuation_token=None, max_results=0,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - defaultValue: 'False'
      description: The maximum number of results to be returned as part of the paged
        queries. This parameter defines the upper bound on the number of results returned.
        The results returned can be less than the specified maximum results if they
        do not fit in the message as per the max message size restrictions defined
        in the configuration. If this parameter is zero or not specified, the paged
        queries includes as much results as possible that fit in the return message.
      id: max_results
      type:
      - long
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '0'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_data_loss_progress
  langs:
  - python
  module: azure.servicefabric
  name: get_data_loss_progress
  source:
    id: get_data_loss_progress
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8530
  summary: 'Gets the progress of a partition data loss operation started using the
    StartDataLoss API.

    Gets the progress of a data loss operation started with StartDataLoss, using the
    OperationId. .'
  syntax:
    content: get_data_loss_progress(self, service_id, partition_id, operation_id,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '60'
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_data_loss_progress
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_application_health
  source:
    id: get_deployed_application_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3685
  summary: 'Gets the information about health of an application deployed on a Service
    Fabric node.

    Gets the information about health of an application deployed on a Service Fabric
    node. Use EventsHealthStateFilter to optionally filter for the collection of HealthEvent
    objects reported on the deployed application based on health state. Use DeployedServicePackagesHealthStateFilter
    to optionally filter for DeployedServicePackageHealth children based on health
    state.'
  syntax:
    content: get_deployed_application_health(self, node_name, application_id, events_health_state_filter=0,
      deployed_service_packages_health_state_filter=0, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '0'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '0'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: "Allows filtering of the deployed service package health state\
        \ objects returned in the result of deployed application health query based\
        \ on their health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only deployed service packages\
        \ that match the filter are returned. All deployed service packages are used\
        \ to evaluate the aggregated health state of the deployed application. If\
        \ not specified, all entries are returned. The state values are flag based\
        \ enumeration, so the value can be a combination of these value obtained using\
        \ bitwise 'OR' operator. For example, if the provided value is 6 then health\
        \ state of service packages with HealthState value of OK (2) and Warning (4)\
        \ are returned. - Default - Default value. Matches any HealthState. The value\
        \ is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input\nwith HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that matches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: deployed_service_packages_health_state_filter
      type:
      - int
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health_using_policy
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_application_health_using_policy
  source:
    id: get_deployed_application_health_using_policy
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3818
  summary: 'Gets the information about health of an application deployed on a Service
    Fabric node. using the specified policy.

    Gets the information about health of an application deployed on a Service Fabric
    node using the specified policy. Use EventsHealthStateFilter to optionally filter
    for the collection of HealthEvent objects reported on the deployed application
    based on health state. Use DeployedServicePackagesHealthStateFilter to optionally
    filter for DeployedServicePackageHealth children based on health state. Use ApplicationHealthPolicy
    to optionally override the health policies used to evaluate the health. This API
    only uses ''ConsiderWarningAsError'' field of the ApplicationHealthPolicy. The
    rest of the fields are ignored while evaluating the health of the deployed application.
    .'
  syntax:
    content: get_deployed_application_health_using_policy(self, node_name, application_id,
      events_health_state_filter=0, deployed_service_packages_health_state_filter=0,
      application_health_policy=None, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '0'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: "Allows filtering of the deployed service package health state\
        \ objects returned in the result of deployed application health query based\
        \ on their health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only deployed service packages\
        \ that match the filter are returned. All deployed service packages are used\
        \ to evaluate the aggregated health state of the deployed application. If\
        \ not specified, all entries are returned. The state values are flag based\
        \ enumeration, so the value can be a combination of these value obtained using\
        \ bitwise 'OR' operator. For example, if the provided value is 6 then health\
        \ state of service packages with HealthState value of OK (2) and Warning (4)\
        \ are returned. - Default - Default value. Matches any HealthState. The value\
        \ is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input\nwith HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that matches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: deployed_service_packages_health_state_filter
      type:
      - int
    - description: Describes the health policies used to evaluate the health of an
        application or one of its children. If not present, the health evaluation
        uses the health policy from application manifest or the default health policy.
      id: application_health_policy
      type:
      - ApplicationHealthPolicy
    - defaultValue: 'False'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '60'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health_using_policy
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_application_info
  source:
    id: get_deployed_application_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3614
  summary: 'Gets the information about an application deployed on a Service Fabric
    node.

    Gets the information about an application deployed on a Service Fabric node.'
  syntax:
    content: get_deployed_application_info(self, node_name, application_id, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '60'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_application_info_list
  source:
    id: get_deployed_application_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3550
  summary: 'Gets the list of applications deployed on a Service Fabric node.

    Gets the list of applications deployed on a Service Fabric node.'
  syntax:
    content: get_deployed_application_info_list(self, node_name, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_code_package_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_code_package_info_list
  source:
    id: get_deployed_code_package_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7332
  summary: 'Gets the list of code packages deployed on a Service Fabric node.

    Gets the list of code packages deployed on a Service Fabric node for the given
    application.'
  syntax:
    content: get_deployed_code_package_info_list(self, node_name, application_id,
      service_manifest_name=None, code_package_name=None, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The name of a service manifest registered as part of an application
        type in a Service Fabric cluster.
      id: service_manifest_name
      type:
      - str
    - description: The name of code package specified in service manifest registered
        as part of an application type in a Service Fabric cluster.
      id: code_package_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_code_package_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_service_package_health
  source:
    id: get_deployed_service_package_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6951
  summary: 'Gets the information about health of an service package for a specific
    application deployed for a Service Fabric node and application.

    Gets the information about health of service package for a specific application
    deployed on a Service Fabric node. Use EventsHealthStateFilter to optionally filter
    for the collection of HealthEvent objects reported on the deployed service package
    based on health state.'
  syntax:
    content: get_deployed_service_package_health(self, node_name, application_id,
      service_package_name, events_health_state_filter=0, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '60'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '0'
      description: The name of the service package.
      id: service_package_name
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health_using_policy
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_service_package_health_using_policy
  source:
    id: get_deployed_service_package_health_using_policy
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7055
  summary: 'Gets the information about health of service package for a specific application
    deployed on a Service Fabric node using the specified policy.

    Gets the information about health of an service package for a specific application
    deployed on a Service Fabric node. using the specified policy. Use EventsHealthStateFilter
    to optionally filter for the collection of HealthEvent objects reported on the
    deployed service package based on health state. Use ApplicationHealthPolicy to
    optionally override the health policies used to evaluate the health. This API
    only uses ''ConsiderWarningAsError'' field of the ApplicationHealthPolicy. The
    rest of the fields are ignored while evaluating the health of the deployed service
    package. .'
  syntax:
    content: get_deployed_service_package_health_using_policy(self, node_name, application_id,
      service_package_name, events_health_state_filter=0, application_health_policy=None,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '0'
      description: The name of the service package.
      id: service_package_name
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: Describes the health policies used to evaluate the health of an
        application or one of its children. If not present, the health evaluation
        uses the health policy from application manifest or the default health policy.
      id: application_health_policy
      type:
      - ApplicationHealthPolicy
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health_using_policy
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_service_package_info_list
  source:
    id: get_deployed_service_package_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6805
  summary: 'Gets the list of service packages deployed on a Service Fabric node.

    Returns the information about the service packages deployed on a Service Fabric
    node for the given application.'
  syntax:
    content: get_deployed_service_package_info_list(self, node_name, application_id,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '60'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list_by_name
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_service_package_info_list_by_name
  source:
    id: get_deployed_service_package_info_list_by_name
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6875
  summary: 'Gets the list of service packages deployed on a Service Fabric node matching
    exactly the specified name.

    Returns the information about the service packages deployed on a Service Fabric
    node for the given application. These results are of service packages whose name
    match exactly the service package name specified as the parameter.'
  syntax:
    content: get_deployed_service_package_info_list_by_name(self, node_name, application_id,
      service_package_name, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: The name of the service package.
      id: service_package_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list_by_name
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_detail_info
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_service_replica_detail_info
  source:
    id: get_deployed_service_replica_detail_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6588
  summary: 'Gets the details of replica deployed on a Service Fabric node.

    Gets the details of the replica deployed on a Service Fabric node. The information
    include service kind, service name, current service operation, current service
    operation start date time, partition id, replica/instance id, reported load and
    other information.'
  syntax:
    content: get_deployed_service_replica_detail_info(self, node_name, partition_id,
      replica_id, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '60'
      description: The identifier of the replica.
      id: replica_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_detail_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_service_replica_info_list
  source:
    id: get_deployed_service_replica_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6504
  summary: 'Gets the list of replicas deployed on a Service Fabric node.

    Gets the list containing the information about replicas deployed on a Service
    Fabric node. The information include partition id, replica id, status of the replica,
    name of the service, name of the service type and other information. Use PartitionId
    or ServiceManifestName query parameters to return information about the deployed
    replicas matching the specified values for those parameters.'
  syntax:
    content: get_deployed_service_replica_info_list(self, node_name, application_id,
      partition_id=None, service_manifest_name=None, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: The name of a service manifest registered as part of an application
        type in a Service Fabric cluster.
      id: service_manifest_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_by_name
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_service_type_info_by_name
  source:
    id: get_deployed_service_type_info_by_name
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2433
  summary: 'Gets the information about a specified service type of the application
    deployed on a node in a Service Fabric cluster.

    Gets the information about a specified service type of the application deployed
    on a node in a Service Fabric cluster. The response includes the name of the service
    type, its registration status, the code package that registered it and activation
    id of the service package.'
  syntax:
    content: get_deployed_service_type_info_by_name(self, node_name, application_id,
      service_type_name, service_manifest_name=None, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '60'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: None
      description: Specifies the name of a Service Fabric service type.
      id: service_type_name
      type:
      - str
    - description: The name of the service manifest to filter the list of deployed
        service type information. If specified, the response will only contain the
        information about service types that are defined in this service manifest.
      id: service_manifest_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_by_name
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_deployed_service_type_info_list
  source:
    id: get_deployed_service_type_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2352
  summary: 'Gets the list containing the information about service types from the
    applications deployed on a node in a Service Fabric cluster.

    Gets the list containing the information about service types from the applications
    deployed on a node in a Service Fabric cluster. The response includes the name
    of the service type, its registration status, the code package that registered
    it and activation id of the service package.'
  syntax:
    content: get_deployed_service_type_info_list(self, node_name, application_id,
      service_manifest_name=None, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The name of the service manifest to filter the list of deployed
        service type information. If specified, the response will only contain the
        information about service types that are defined in this service manifest.
      id: service_manifest_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_fault_operation_list
  langs:
  - python
  module: azure.servicefabric
  name: get_fault_operation_list
  source:
    id: get_fault_operation_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 9076
  summary: 'Gets a list of user-induced fault operations filtered by provided input.

    Gets the a list of user-induced fault operations filtered by provided input.'
  syntax:
    content: get_fault_operation_list(self, type_filter=65535, state_filter=65535,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: Used to filter on OperationType for user-induced operations. 65535
        - select all 1     - select PartitionDataLoss. 2     - select PartitionQuorumLoss.
        4     - select PartitionRestart. 8     - select NodeTransition.
      id: type_filter
      type:
      - int
    - defaultValue: 'False'
      description: Used to filter on OperationState's for user-induced operations.
        65535 - select All 1     - select Running 2     - select RollingBack 8     -
        select Completed 16    - select Faulted 32    - select Cancelled 64    - select
        ForceCancelled
      id: state_filter
      type:
      - int
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '65535'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '65535'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_fault_operation_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_image_store_content
  langs:
  - python
  module: azure.servicefabric
  name: get_image_store_content
  source:
    id: get_image_store_content
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8025
  summary: 'Gets the image store content information.

    Returns the information about the image store content at the specified contentPath
    relative to the root of the image store.'
  syntax:
    content: get_image_store_content(self, content_path, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: Relative path to file or folder in the image store from its root.
      id: content_path
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_image_store_content
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_image_store_root_content
  langs:
  - python
  module: azure.servicefabric
  name: get_image_store_root_content
  source:
    id: get_image_store_root_content
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8150
  summary: 'Gets the content information at the root of the image store.

    Returns the information about the image store content at the root of the image
    store.'
  syntax:
    content: get_image_store_root_content(self, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_image_store_root_content
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_health
  langs:
  - python
  module: azure.servicefabric
  name: get_node_health
  source:
    id: get_node_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1113
  summary: 'Gets the health of a Service Fabric node.

    Gets the health of a Service Fabric node. Use EventsHealthStateFilter to filter
    the collection of health events reported on the node based on the health state.
    If the node that you specify by name does not exist in the health store, this
    returns an error.'
  syntax:
    content: get_node_health(self, node_name, events_health_state_filter=0, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_health_using_policy
  langs:
  - python
  module: azure.servicefabric
  name: get_node_health_using_policy
  source:
    id: get_node_health_using_policy
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1206
  summary: 'Gets the health of a Service Fabric node, by using the specified health
    policy.

    Gets the health of a Service Fabric node. Use EventsHealthStateFilter to filter
    the collection of health events reported on the node based on the health state.
    Use ClusterHealthPolicy in the POST body to override the health policies used
    to evaluate the health. If the node that you specify by name does not exist in
    the health store, this returns an error.'
  syntax:
    content: get_node_health_using_policy(self, node_name, events_health_state_filter=0,
      cluster_health_policy=None, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: Describes the health policies used to evaluate the health of a
        cluster or node. If not present, the health evaluation uses the health policy
        from cluster manifest or the default health policy.
      id: cluster_health_policy
      type:
      - ClusterHealthPolicy
    - defaultValue: 'False'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '60'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_health_using_policy
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_info
  langs:
  - python
  module: azure.servicefabric
  name: get_node_info
  source:
    id: get_node_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1048
  summary: 'Gets the list of nodes in the Service Fabric cluster.

    Gets the information about a specific node in the Service Fabric Cluster.The respons
    include the name, status, id, health, uptime and other details about the node.'
  syntax:
    content: get_node_info(self, node_name, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_node_info_list
  source:
    id: get_node_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 952
  summary: 'Gets the list of nodes in the Service Fabric cluster.

    The Nodes endpoint returns information about the nodes in the Service Fabric Cluster.
    The respons include the name, status, id, health, uptime and other details about
    the node.'
  syntax:
    content: get_node_info_list(self, continuation_token=None, node_status_filter="default",
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - defaultValue: 'False'
      description: 'Allows filtering the nodes based on the NodeStatus. Only the nodes
        that are matching the specified filter value will be returned. The filter
        value can be one of the following. - default - This filter value will match
        all of the nodes excepts the ones with with status as Unknown or Removed.
        - all - This filter value will match all of the nodes. - up - This filter
        value will match nodes that are Up. - down - This filter value will match
        nodes that are Down. - enabling - This filter value will match nodes that
        are in the process of being enabled with status as Enabling. - disabling -
        This filter value will match nodes that are in the process of being disabled
        with status as Disabling. - disabled - This filter value will match nodes
        that are Disabled. - unknown - This filter value will match nodes whose status
        is Unknown. A node would be in Unknown state if Service Fabric does not have
        authoritative information about that node. This can happen if the system learns
        about a node at runtime.

        - removed - This filter value will match nodes whose status is Removed. These
        are the nodes that are removed from the cluster using the RemoveNodeState
        API. . Possible values include: ''default'', ''all'', ''up'', ''down'', ''enabling'',
        ''disabling'', ''disabled'', ''unknown'', ''removed'''
      id: node_status_filter
      type:
      - str
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: default
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_load_info
  langs:
  - python
  module: azure.servicefabric
  name: get_node_load_info
  source:
    id: get_node_load_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1392
  summary: 'Gets the load information of a Service Fabric node.

    Gets the load information of a Service Fabric node.'
  syntax:
    content: get_node_load_info(self, node_name, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_load_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_transition_progress
  langs:
  - python
  module: azure.servicefabric
  name: get_node_transition_progress
  source:
    id: get_node_transition_progress
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 9006
  summary: 'Gets the progress of an operation started using StartNodeTransition.

    Gets the progress of an operation started with StartNodeTransition using the provided
    OperationId. .'
  syntax:
    content: get_node_transition_progress(self, node_name, operation_id, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '60'
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_transition_progress
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_health
  langs:
  - python
  module: azure.servicefabric
  name: get_partition_health
  source:
    id: get_partition_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5333
  summary: 'Gets the health of the specified Service Fabric partition.

    Gets the health information of the specified partition. Use EventsHealthStateFilter
    to filter the collection of health events reported on the service based on the
    health state. Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState
    objects on the partition. If you specify a partition that does not exist in the
    health store, this cmdlet returns an error. .'
  syntax:
    content: get_partition_health(self, partition_id, events_health_state_filter=0,
      replicas_health_state_filter=0, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: "Allows filtering the collection of ReplicaHealthState objects\
        \ on the partition. The value can be obtained from members or bitwise operations\
        \ on members of HealthStateFilter. Only replicas that match the filter will\
        \ be returned. All replicas will be used to evaluate the aggregated health\
        \ state. If not specified, all entries will be returned.The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) will be returned. The possible values for this parameter include integer\
        \ value of one of the following health states. - Default - Default value.\
        \ Matches any HealthState. The value is zero. - None - Filter that doesn\u2019\
        t match any HealthState value. Used in order to return no results on a given\
        \ collection of states. The value is 1. - Ok - Filter that matches input with\
        \ HealthState value Ok. The value is 2. -\nWarning - Filter that matches input\
        \ with HealthState value Warning. The value is 4. - Error - Filter that matches\
        \ input with HealthState value Error. The value is 8. - All - Filter that\
        \ matches input with any HealthState value. The value is 65535."
      id: replicas_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '60'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '0'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_health_using_policy
  langs:
  - python
  module: azure.servicefabric
  name: get_partition_health_using_policy
  source:
    id: get_partition_health_using_policy
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5459
  summary: 'Gets the health of the specified Service Fabric partition, by using the
    specified health policy.

    Gets the health information of the specified partition. If the application health
    policy is specified, the health evaluation uses it to get the aggregated health
    state. If the policy is not specified, the health evaluation uses the application
    health policy defined in the application manifest, or the default health policy,
    if no policy is defined in the manifest. Use EventsHealthStateFilter to filter
    the collection of health events reported on the partition based on the health
    state. Use ReplicasHealthStateFilter to filter the collection of ReplicaHealthState
    objects on the partition. Use ApplicationHealthPolicy in the POST body to override
    the health policies used to evaluate the health. If you specify a partition that
    does not exist in the health store, this cmdlet returns an error. .'
  syntax:
    content: get_partition_health_using_policy(self, partition_id, events_health_state_filter=0,
      replicas_health_state_filter=0, application_health_policy=None, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: "Allows filtering the collection of ReplicaHealthState objects\
        \ on the partition. The value can be obtained from members or bitwise operations\
        \ on members of HealthStateFilter. Only replicas that match the filter will\
        \ be returned. All replicas will be used to evaluate the aggregated health\
        \ state. If not specified, all entries will be returned.The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) will be returned. The possible values for this parameter include integer\
        \ value of one of the following health states. - Default - Default value.\
        \ Matches any HealthState. The value is zero. - None - Filter that doesn\u2019\
        t match any HealthState value. Used in order to return no results on a given\
        \ collection of states. The value is 1. - Ok - Filter that matches input with\
        \ HealthState value Ok. The value is 2. -\nWarning - Filter that matches input\
        \ with HealthState value Warning. The value is 4. - Error - Filter that matches\
        \ input with HealthState value Error. The value is 8. - All - Filter that\
        \ matches input with any HealthState value. The value is 65535."
      id: replicas_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: Describes the health policies used to evaluate the health of an
        application or one of its children. If not present, the health evaluation
        uses the health policy from application manifest or the default health policy.
      id: application_health_policy
      type:
      - ApplicationHealthPolicy
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '0'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_health_using_policy
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_info
  langs:
  - python
  module: azure.servicefabric
  name: get_partition_info
  source:
    id: get_partition_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5201
  summary: 'Gets the information about a Service Fabric partition.

    The Partitions endpoint returns information about the specified partition. The
    response include the partition id, partitioning scheme information, keys supported
    by the partition, status, health and other details about the partition.'
  syntax:
    content: get_partition_info(self, partition_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_partition_info_list
  source:
    id: get_partition_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5122
  summary: 'Gets the list of partitions of a Service Fabric service.

    Gets the list of partitions of a Service Fabric service. The response include
    the partition id, partitioning scheme information, keys supported by the partition,
    status, health and other details about the partition.'
  syntax:
    content: get_partition_info_list(self, service_id, continuation_token=None, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_load_information
  langs:
  - python
  module: azure.servicefabric
  name: get_partition_load_information
  source:
    id: get_partition_load_information
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5683
  summary: 'Gets the load of the specified Service Fabric partition.

    Returns information about the specified partition. The response includes a list
    of load information. Each information includes load metric name, value and last
    reported time in UTC. .'
  syntax:
    content: get_partition_load_information(self, partition_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_load_information
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_restart_progress
  langs:
  - python
  module: azure.servicefabric
  name: get_partition_restart_progress
  source:
    id: get_partition_restart_progress
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8845
  summary: 'Gets the progress of a PartitionRestart operation started using StartPartitionRestart.

    Gets the progress of a PartitionRestart started with StartPartitionRestart using
    the provided OperationId. .'
  syntax:
    content: get_partition_restart_progress(self, service_id, partition_id, operation_id,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '60'
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_restart_progress
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_code_version_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_provisioned_fabric_code_version_info_list
  source:
    id: get_provisioned_fabric_code_version_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 698
  summary: 'Gets a list of fabric code versions that are provisioned in a Service
    Fabric cluster.

    Gets a list of information about fabric code versions that are provisioned in
    the cluster. The parameter CodeVersion can be used to optionally filter the output
    to only that particular version.'
  syntax:
    content: get_provisioned_fabric_code_version_info_list(self, code_version=None,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The product version of Service Fabric.
      id: code_version
      type:
      - str
    - defaultValue: 'False'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '60'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_code_version_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_config_version_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_provisioned_fabric_config_version_info_list
  source:
    id: get_provisioned_fabric_config_version_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 763
  summary: 'Gets a list of fabric config versions that are provisioned in a Service
    Fabric cluster.

    Gets a list of information about fabric config versions that are provisioned in
    the cluster. The parameter ConfigVersion can be used to optionally filter the
    output to only that particular version.'
  syntax:
    content: get_provisioned_fabric_config_version_info_list(self, config_version=None,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The config version of Service Fabric.
      id: config_version
      type:
      - str
    - defaultValue: 'False'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '60'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_config_version_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_quorum_loss_progress
  langs:
  - python
  module: azure.servicefabric
  name: get_quorum_loss_progress
  source:
    id: get_quorum_loss_progress
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8691
  summary: 'Gets the progress of a quorum loss operation on a partition started using
    the StartQuorumLoss API.

    Gets the progress of a quorum loss operation started with StartQuorumLoss, using
    the provided OperationId. .'
  syntax:
    content: get_quorum_loss_progress(self, service_id, partition_id, operation_id,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '60'
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_quorum_loss_progress
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_replica_health
  langs:
  - python
  module: azure.servicefabric
  name: get_replica_health
  source:
    id: get_replica_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6199
  summary: 'Gets the health of a Service Fabric stateful service replica or stateless
    service instance.

    Gets the health of a Service Fabric replica. Use EventsHealthStateFilter to filter
    the collection of health events reported on the replica based on the health state.
    .'
  syntax:
    content: get_replica_health(self, partition_id, replica_id, events_health_state_filter=0,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '0'
      description: The identifier of the replica.
      id: replica_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_replica_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_replica_health_using_policy
  langs:
  - python
  module: azure.servicefabric
  name: get_replica_health_using_policy
  source:
    id: get_replica_health_using_policy
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6297
  summary: 'Gets the health of a Service Fabric stateful service replica or stateless
    service instance using the specified policy.

    Gets the health of a Service Fabric stateful service replica or stateless service
    instance. Use EventsHealthStateFilter to filter the collection of health events
    reported on the cluster based on the health state. Use ApplicationHealthPolicy
    to optionally override the health policies used to evaluate the health. This API
    only uses ''ConsiderWarningAsError'' field of the ApplicationHealthPolicy. The
    rest of the fields are ignored while evaluating the health of the replica. .'
  syntax:
    content: get_replica_health_using_policy(self, partition_id, replica_id, events_health_state_filter=0,
      application_health_policy=None, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '0'
      description: The identifier of the replica.
      id: replica_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: Describes the health policies used to evaluate the health of an
        application or one of its children. If not present, the health evaluation
        uses the health policy from application manifest or the default health policy.
      id: application_health_policy
      type:
      - ApplicationHealthPolicy
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_replica_health_using_policy
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_replica_info
  langs:
  - python
  module: azure.servicefabric
  name: get_replica_info
  source:
    id: get_replica_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6121
  summary: 'Gets the information about a replica of a Service Fabric partition.

    The respons include the id, role, status, health, node name, uptime, and other
    details about the replica.'
  syntax:
    content: get_replica_info(self, partition_id, replica_id, continuation_token=None,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: None
      description: The identifier of the replica.
      id: replica_id
      type:
      - str
    - description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_replica_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_replica_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_replica_info_list
  source:
    id: get_replica_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6043
  summary: 'Gets the information about replicas of a Service Fabric service partition.

    The GetReplicas endpoint returns information about the replicas of the specified
    partition. The respons include the id, role, status, health, node name, uptime,
    and other details about the replica.'
  syntax:
    content: get_replica_info_list(self, partition_id, continuation_token=None, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_replica_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_description
  langs:
  - python
  module: azure.servicefabric
  name: get_service_description
  source:
    id: get_service_description
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4613
  summary: 'Gets the description of an existing Service Fabric service.

    Gets the description of an existing Service Fabric service. A service must be
    created before its description can be obtained.'
  syntax:
    content: get_service_description(self, service_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_description
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_health
  langs:
  - python
  module: azure.servicefabric
  name: get_service_health
  source:
    id: get_service_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4679
  summary: 'Gets the health of the specified Service Fabric service.

    Gets the health information of the specified service. Use EventsHealthStateFilter
    to filter the collection of health events reported on the service based on the
    health state. Use PartitionsHealthStateFilter to filter the collection of partitions
    returned. If you specify a service that does not exist in the health store, this
    cmdlet returns an error. .'
  syntax:
    content: get_service_health(self, service_id, events_health_state_filter=0, partitions_health_state_filter=0,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: 'Allows filtering of the partitions health state objects returned
        in the result of service health query based on their health state. The possible
        values for this parameter include integer value of one of the following health
        states. Only partitions that match the filter are returned. All partitions
        are used to evaluate the aggregated health state. If not specified, all entries
        are returned. The state values are flag based enumeration, so the value could
        be a combination of these value obtained using bitwise ''OR'' operator. For
        example, if the provided value is 6 then health state of partitions with HealthState
        value of OK (2) and Warning (4) will be returned. - Default - Default value.
        Matches any HealthState. The value is zero. - None - Filter that doesn''t
        match any HealthState value. Used in order to return no results on a given
        collection of states. The value is 1. - Ok - Filter that matches input with
        HealthState value Ok. The value is 2. - Warning - Filter that matches input
        with

        HealthState value Warning. The value is 4. - Error - Filter that matches input
        with HealthState value Error. The value is 8. - All - Filter that matches
        input with any HealthState value. The value is 65535.'
      id: partitions_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '60'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '0'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_health_using_policy
  langs:
  - python
  module: azure.servicefabric
  name: get_service_health_using_policy
  source:
    id: get_service_health_using_policy
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4806
  summary: 'Gets the health of the specified Service Fabric service, by using the
    specified health policy.

    Gets the health information of the specified service. If the application health
    policy is specified, the health evaluation uses it to get the aggregated health
    state. If the policy is not specified, the health evaluation uses the application
    health policy defined in the application manifest, or the default health policy,
    if no policy is defined in the manifest. Use EventsHealthStateFilter to filter
    the collection of health events reported on the service based on the health state.
    Use PartitionsHealthStateFilter to filter the collection of partitions returned.
    If you specify a service that does not exist in the health store, this cmdlet
    returns an error. .'
  syntax:
    content: get_service_health_using_policy(self, service_id, events_health_state_filter=0,
      partitions_health_state_filter=0, application_health_policy=None, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: "Allows filtering the collection of HealthEvent objects returned\
        \ based on health state. The possible values for this parameter include integer\
        \ value of one of the following health states. Only events that match the\
        \ filter are returned. All events are used to evaluate the aggregated health\
        \ state. If not specified, all entries are returned. The state values are\
        \ flag based enumeration, so the value could be a combination of these value\
        \ obtained using bitwise 'OR' operator. For example, If the provided value\
        \ is 6 then all of the events with HealthState value of OK (2) and Warning\
        \ (4) are returned. - Default - Default value. Matches any HealthState. The\
        \ value is zero. - None - Filter that doesn\u2019t match any HealthState value.\
        \ Used in order to return no results on a given collection of states. The\
        \ value is 1. - Ok - Filter that matches input with HealthState value Ok.\
        \ The value is 2. - Warning - Filter that matches input with HealthState value\
        \ Warning. The value is 4. - Error - Filter that\nmatches input with HealthState\
        \ value Error. The value is 8. - All - Filter that matches input with any\
        \ HealthState value. The value is 65535."
      id: events_health_state_filter
      type:
      - int
    - description: 'Allows filtering of the partitions health state objects returned
        in the result of service health query based on their health state. The possible
        values for this parameter include integer value of one of the following health
        states. Only partitions that match the filter are returned. All partitions
        are used to evaluate the aggregated health state. If not specified, all entries
        are returned. The state values are flag based enumeration, so the value could
        be a combination of these value obtained using bitwise ''OR'' operator. For
        example, if the provided value is 6 then health state of partitions with HealthState
        value of OK (2) and Warning (4) will be returned. - Default - Default value.
        Matches any HealthState. The value is zero. - None - Filter that doesn''t
        match any HealthState value. Used in order to return no results on a given
        collection of states. The value is 1. - Ok - Filter that matches input with
        HealthState value Ok. The value is 2. - Warning - Filter that matches input
        with

        HealthState value Warning. The value is 4. - Error - Filter that matches input
        with HealthState value Error. The value is 8. - All - Filter that matches
        input with any HealthState value. The value is 65535.'
      id: partitions_health_state_filter
      type:
      - int
    - defaultValue: 'False'
      description: Describes the health policies used to evaluate the health of an
        application or one of its children. If not present, the health evaluation
        uses the health policy from application manifest or the default health policy.
      id: application_health_policy
      type:
      - ApplicationHealthPolicy
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '0'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_health_using_policy
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_info
  langs:
  - python
  module: azure.servicefabric
  name: get_service_info
  source:
    id: get_service_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4205
  summary: 'Gets the information about the specific service belonging to a Service
    Fabric application.

    Returns the information about specified service belonging to the specified Service
    Fabric application.'
  syntax:
    content: get_service_info(self, application_id, service_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_service_info_list
  source:
    id: get_service_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4121
  summary: 'Gets the information about all services belonging to the application specified
    by the application id.

    Returns the information about all services belonging to the application specified
    by the application id.'
  syntax:
    content: get_service_info_list(self, application_id, service_type_name=None, continuation_token=None,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The service type name used to filter the services to query for.
      id: service_type_name
      type:
      - str
    - description: The continuation token parameter is used to obtain next set of
        results. A continuation token with a non empty value is included in the response
        of the API when the results from the system do not fit in a single response.
        When this value is passed to the next API call, the API returns next set of
        results. If there are no further results then the continuation token does
        not contain a value. The value of this parameter should not be URL encoded.
      id: continuation_token
      type:
      - str
    - defaultValue: 'False'
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: '60'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_manifest
  langs:
  - python
  module: azure.servicefabric
  name: get_service_manifest
  source:
    id: get_service_manifest
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2279
  summary: 'Gets the manifest describing a service type.

    Gets the manifest describing a service type. The response contains the service
    manifest XML as a string.'
  syntax:
    content: get_service_manifest(self, application_type_name, application_type_version,
      service_manifest_name, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the application type.
      id: application_type_name
      type:
      - str
    - defaultValue: None
      description: The version of the application type.
      id: application_type_version
      type:
      - str
    - defaultValue: '60'
      description: The name of a service manifest registered as part of an application
        type in a Service Fabric cluster.
      id: service_manifest_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_manifest
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_name_info
  langs:
  - python
  module: azure.servicefabric
  name: get_service_name_info
  source:
    id: get_service_name_info
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5268
  summary: 'Gets the name of the Service Fabric service for a partition.

    The GetServiceName endpoint returns the name of the service for the specified
    partition.'
  syntax:
    content: get_service_name_info(self, partition_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_name_info
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_type_info_list
  langs:
  - python
  module: azure.servicefabric
  name: get_service_type_info_list
  source:
    id: get_service_type_info_list
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2205
  summary: 'Gets the list containing the information about service types that are
    supported by a provisioned application type in a Service Fabric cluster.

    Gets the list containing the information about service types that are supported
    by a provisioned application type in a Service Fabric cluster. The response includes
    the name of the service type, the name and version of the service manifest the
    type is defined in, kind (stateless or stateless) of the service type and other
    information about it.'
  syntax:
    content: get_service_type_info_list(self, application_type_name, application_type_version,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the application type.
      id: application_type_name
      type:
      - str
    - defaultValue: '60'
      description: The version of the application type.
      id: application_type_version
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_type_info_list
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_command
  langs:
  - python
  module: azure.servicefabric
  name: invoke_infrastructure_command
  source:
    id: invoke_infrastructure_command
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8268
  summary: 'Invokes an administrative command on the given Infrastructure Service
    instance.

    For clusters that have one or more instances of the Infrastructure Service configured,
    this API provides a way to send infrastructure-specific commands to a particular
    instance of the Infrastructure Service. Available commands and their corresponding
    response formats vary depending upon the infrastructure on which the cluster is
    running. This API supports the Service Fabric platform; it is not meant to be
    used directly from your code. .'
  syntax:
    content: invoke_infrastructure_command(self, command, service_id=None, timeout=60,
      custom_headers=None, raw=False, callback=None)
    parameters:
    - defaultValue: None
      description: The text of the command to be invoked. The content of the command
        is infrastructure-specific.
      id: command
      type:
      - str
    - description: The identity of the infrastructure service. This is  the full name
        of the infrastructure service without the 'fabric:' URI scheme. This parameter
        required only for the cluster that have more than one instance of infrastructure
        service running.
      id: service_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: When specified, will be called with each chunk of data that is
        streamed. The callback should take two arguments, the bytes of the current
        chunk of data and the response object. If the data is uploading, response
        will be None.
      id: callback
      type:
      - Callable[Bytes, response=None]
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_command
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_query
  langs:
  - python
  module: azure.servicefabric
  name: invoke_infrastructure_query
  source:
    id: invoke_infrastructure_query
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8352
  summary: 'Invokes a read-only query on the given infrastructure service instance.

    For clusters that have one or more instances of the Infrastructure Service configured,
    this API provides a way to send infrastructure-specific queries to a particular
    instance of the Infrastructure Service. Available commands and their corresponding
    response formats vary depending upon the infrastructure on which the cluster is
    running. This API supports the Service Fabric platform; it is not meant to be
    used directly from your code. .'
  syntax:
    content: invoke_infrastructure_query(self, command, service_id=None, timeout=60,
      custom_headers=None, raw=False, callback=None)
    parameters:
    - defaultValue: None
      description: The text of the command to be invoked. The content of the command
        is infrastructure-specific.
      id: command
      type:
      - str
    - description: The identity of the infrastructure service. This is  the full name
        of the infrastructure service without the 'fabric:' URI scheme. This parameter
        required only for the cluster that have more than one instance of infrastructure
        service running.
      id: service_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: When specified, will be called with each chunk of data that is
        streamed. The callback should take two arguments, the bytes of the current
        chunk of data and the response object. If the data is uploading, response
        will be None.
      id: callback
      type:
      - Callable[Bytes, response=None]
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_query
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.provision_application_type
  langs:
  - python
  module: azure.servicefabric
  name: provision_application_type
  source:
    id: provision_application_type
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2074
  summary: 'Provisions or registers a Service Fabric application type with the cluster.

    Provisions or registers a Service Fabric application type with the cluster. This
    is required before any new applications can be instantiated.'
  syntax:
    content: provision_application_type(self, application_type_build_path, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: The relative image store path to the application package.
      id: application_type_build_path
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.provision_application_type
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.recover_all_partitions
  langs:
  - python
  module: azure.servicefabric
  name: recover_all_partitions
  source:
    id: recover_all_partitions
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5987
  summary: 'Indicates to the Service Fabric cluster that it should attempt to recover
    any services (including system services) which are currently stuck in quorum loss.

    Indicates to the Service Fabric cluster that it should attempt to recover any
    services (including system services) which are currently stuck in quorum loss.
    This operation should only be performed if it is known that the replicas that
    are down cannot be recovered. Incorrect use of this API can cause potential data
    loss.'
  syntax:
    content: recover_all_partitions(self, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.recover_all_partitions
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.recover_partition
  langs:
  - python
  module: azure.servicefabric
  name: recover_partition
  source:
    id: recover_partition
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5808
  summary: 'Indicates to the Service Fabric cluster that it should attempt to recover
    a specific partition which is currently stuck in quorum loss.

    Indicates to the Service Fabric cluster that it should attempt to recover a specific
    partition which is currently stuck in quorum loss. This operation should only
    be performed if it is known that the replicas that are down cannot be recovered.
    Incorrect use of this API can cause potential data loss.'
  syntax:
    content: recover_partition(self, partition_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.recover_partition
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.recover_service_partitions
  langs:
  - python
  module: azure.servicefabric
  name: recover_service_partitions
  source:
    id: recover_service_partitions
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5869
  summary: 'Indicates to the Service Fabric cluster that it should attempt to recover
    the specified service which is currently stuck in quorum loss.

    Indicates to the Service Fabric cluster that it should attempt to recover the
    specified service which is currently stuck in quorum loss. This operation should
    only be performed if it is known that the replicas that are down cannot be recovered.
    Incorrect use of this API can cause potential data loss.'
  syntax:
    content: recover_service_partitions(self, service_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.recover_service_partitions
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.recover_system_partitions
  langs:
  - python
  module: azure.servicefabric
  name: recover_system_partitions
  source:
    id: recover_system_partitions
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5932
  summary: 'Indicates to the Service Fabric cluster that it should attempt to recover
    the system services which are currently stuck in quorum loss.

    Indicates to the Service Fabric cluster that it should attempt to recover the
    system services which are currently stuck in quorum loss. This operation should
    only be performed if it is known that the replicas that are down cannot be recovered.
    Incorrect use of this API can cause potential data loss.'
  syntax:
    content: recover_system_partitions(self, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.recover_system_partitions
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.remove_compose_application
  langs:
  - python
  module: azure.servicefabric
  name: remove_compose_application
  source:
    id: remove_compose_application
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7701
  summary: 'Deletes an existing Service Fabric compose application from cluster.

    Deletes an existing Service Fabric compose application. An application must be
    created before it can be deleted.'
  syntax:
    content: remove_compose_application(self, application_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.remove_compose_application
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.remove_node_state
  langs:
  - python
  module: azure.servicefabric
  name: remove_node_state
  source:
    id: remove_node_state
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1596
  summary: 'Notifies Service Fabric that the persisted state on a node has been permanently
    removed or lost.

    Notifies Service Fabric that the persisted state on a node has been permanently
    removed or lost.  This implies that it is not possible to recover the persisted
    state of that node. This generally happens if a hard disk has been wiped clean,
    or if a hard disk crashes. The node has to be down for this operation to be successful.
    This operation lets Service Fabric know that the replicas on that node no longer
    exist, and that Service Fabric should stop waiting for those replicas to come
    back up. Do not run this cmdlet if the state on the node has not been removed
    and the node can comes back up with its state intact.'
  syntax:
    content: remove_node_state(self, node_name, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.remove_node_state
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.remove_replica
  langs:
  - python
  module: azure.servicefabric
  name: remove_replica
  source:
    id: remove_replica
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6726
  summary: 'Removes a service replica running on a node.

    This API simulates a Service Fabric replica failure by removing a replica from
    a Service Fabric cluster. The removal closes the replica, transitions the replica
    to the role None, and then removes all of the state information of the replica
    from the cluster. This API tests the replica state removal path, and simulates
    the report fault permanent path through client APIs. Warning - There are no safety
    checks performed when this API is used. Incorrect use of this API can lead to
    data loss for stateful services.In addition, the forceRemove flag impacts all
    other replicas hosted in the same process.'
  syntax:
    content: remove_replica(self, node_name, partition_id, replica_id, force_remove=None,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '60'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: None
      description: The identifier of the replica.
      id: replica_id
      type:
      - str
    - description: Remove a Service Fabric application or service forcefully without
        going through the graceful shutdown sequence. This parameter can be used to
        forcefully delete an application or service for which delete is timing out
        due to issues in the service code that prevents graceful close of replicas.
      id: force_remove
      type:
      - bool
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.remove_replica
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.report_application_health
  langs:
  - python
  module: azure.servicefabric
  name: report_application_health
  source:
    id: report_application_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3131
  summary: 'Sends a health report on the Service Fabric application.

    Reports health state of the specified Service Fabric application. The report must
    contain the information about the source of the health report and property on
    which it is reported. The report is sent to a Service Fabric gateway Application,
    which forwards to the health store. The report may be accepted by the gateway,
    but rejected by the health store after extra validation. For example, the health
    store may reject the report because of an invalid parameter, like a stale sequence
    number. To see whether the report was applied in the health store, run GetApplicationHealth
    and check that the report appears in the HealthEvents section. .'
  syntax:
    content: report_application_health(self, application_id, health_information, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      id: health_information
      type:
      - HealthInformation
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_application_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.report_cluster_health
  langs:
  - python
  module: azure.servicefabric
  name: report_cluster_health
  source:
    id: report_cluster_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 627
  summary: 'Sends a health report on the Service Fabric cluster.

    Sends a health report on a Service Fabric cluster. The report must contain the
    information about the source of the health report and property on which it is
    reported. The report is sent to a Service Fabric gateway node, which forwards
    to the health store. The report may be accepted by the gateway, but rejected by
    the health store after extra validation. For example, the health store may reject
    the report because of an invalid parameter, like a stale sequence number. To see
    whether the report was applied in the health store, run GetClusterHealth and check
    that the report appears in the HealthEvents section. .'
  syntax:
    content: report_cluster_health(self, health_information, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      id: health_information
      type:
      - HealthInformation
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_cluster_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.report_deployed_application_health
  langs:
  - python
  module: azure.servicefabric
  name: report_deployed_application_health
  source:
    id: report_deployed_application_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3970
  summary: 'Sends a health report on the Service Fabric application deployed on a
    Service Fabric node.

    Reports health state of the application deployed on a Service Fabric node. The
    report must contain the information about the source of the health report and
    property on which it is reported. The report is sent to a Service Fabric gateway
    Service, which forwards to the health store. The report may be accepted by the
    gateway, but rejected by the health store after extra validation. For example,
    the health store may reject the report because of an invalid parameter, like a
    stale sequence number. To see whether the report was applied in the health store,
    get deployed application health and check that the report appears in the HealthEvents
    section. .'
  syntax:
    content: report_deployed_application_health(self, node_name, application_id, health_information,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      id: health_information
      type:
      - HealthInformation
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_deployed_application_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.report_deployed_service_package_health
  langs:
  - python
  module: azure.servicefabric
  name: report_deployed_service_package_health
  source:
    id: report_deployed_service_package_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7178
  summary: 'Sends a health report on the Service Fabric deployed service package.

    Reports health state of the service package of the application deployed on a Service
    Fabric node. The report must contain the information about the source of the health
    report and property on which it is reported. The report is sent to a Service Fabric
    gateway Service, which forwards to the health store. The report may be accepted
    by the gateway, but rejected by the health store after extra validation. For example,
    the health store may reject the report because of an invalid parameter, like a
    stale sequence number. To see whether the report was applied in the health store,
    get deployed service package health and check that the report appears in the HealthEvents
    section. .'
  syntax:
    content: report_deployed_service_package_health(self, node_name, application_id,
      service_package_name, health_information, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: 'False'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: None
      description: The name of the service package.
      id: service_package_name
      type:
      - str
    - defaultValue: '60'
      description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      id: health_information
      type:
      - HealthInformation
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_deployed_service_package_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.report_node_health
  langs:
  - python
  module: azure.servicefabric
  name: report_node_health
  source:
    id: report_node_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1315
  summary: 'Sends a health report on the Service Fabric node.

    Reports health state of the specified Service Fabric node. The report must contain
    the information about the source of the health report and property on which it
    is reported. The report is sent to a Service Fabric gateway node, which forwards
    to the health store. The report may be accepted by the gateway, but rejected by
    the health store after extra validation. For example, the health store may reject
    the report because of an invalid parameter, like a stale sequence number. To see
    whether the report was applied in the health store, run GetNodeHealth and check
    that the report appears in the HealthEvents section. .'
  syntax:
    content: report_node_health(self, node_name, health_information, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: None
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: '60'
      description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      id: health_information
      type:
      - HealthInformation
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_node_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.report_partition_health
  langs:
  - python
  module: azure.servicefabric
  name: report_partition_health
  source:
    id: report_partition_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5606
  summary: 'Sends a health report on the Service Fabric partition.

    Reports health state of the specified Service Fabric partition. The report must
    contain the information about the source of the health report and property on
    which it is reported. The report is sent to a Service Fabric gateway Partition,
    which forwards to the health store. The report may be accepted by the gateway,
    but rejected by the health store after extra validation. For example, the health
    store may reject the report because of an invalid parameter, like a stale sequence
    number. To see whether the report was applied in the health store, run GetPartitionHealth
    and check that the report appears in the HealthEvents section. .'
  syntax:
    content: report_partition_health(self, partition_id, health_information, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '60'
      description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      id: health_information
      type:
      - HealthInformation
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_partition_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.report_replica_health
  langs:
  - python
  module: azure.servicefabric
  name: report_replica_health
  source:
    id: report_replica_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6414
  summary: 'Sends a health report on the Service Fabric replica.

    Reports health state of the specified Service Fabric replica. The report must
    contain the information about the source of the health report and property on
    which it is reported. The report is sent to a Service Fabric gateway Replica,
    which forwards to the health store. The report may be accepted by the gateway,
    but rejected by the health store after extra validation. For example, the health
    store may reject the report because of an invalid parameter, like a stale sequence
    number. To see whether the report was applied in the health store, run GetReplicaHealth
    and check that the report appears in the HealthEvents section. .'
  syntax:
    content: report_replica_health(self, partition_id, replica_id, health_information,
      service_kind="Stateful", timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '60'
      description: The identifier of the replica.
      id: replica_id
      type:
      - str
    - defaultValue: Stateful
      description: 'The kind of service replica (Stateless or Stateful) for which
        the health is being reported. Following are the possible values. - Stateless
        - Does not use Service Fabric to make its state highly available or reliable.
        The value is 1 - Stateful - Uses Service Fabric to make its state or part
        of its state highly available and reliable. The value is 2. . Possible values
        include: ''Stateless'', ''Stateful'''
      id: service_kind
      type:
      - str
    - description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      id: health_information
      type:
      - HealthInformation
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_replica_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.report_service_health
  langs:
  - python
  module: azure.servicefabric
  name: report_service_health
  source:
    id: report_service_health
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4952
  summary: 'Sends a health report on the Service Fabric service.

    Reports health state of the specified Service Fabric service. The report must
    contain the information about the source of the health report and property on
    which it is reported. The report is sent to a Service Fabric gateway Service,
    which forwards to the health store. The report may be accepted by the gateway,
    but rejected by the health store after extra validation. For example, the health
    store may reject the report because of an invalid parameter, like a stale sequence
    number. To see whether the report was applied in the health store, run GetServiceHealth
    and check that the report appears in the HealthEvents section. .'
  syntax:
    content: report_service_health(self, service_id, health_information, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - defaultValue: '60'
      description: Describes the health information for the health report. This information
        needs to be present in all of the health reports sent to the health manager.
      id: health_information
      type:
      - HealthInformation
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_service_health
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.reset_partition_load
  langs:
  - python
  module: azure.servicefabric
  name: reset_partition_load
  source:
    id: reset_partition_load
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5751
  summary: 'Resets the current load of a Service Fabric partition.

    Resets the current load of a Service Fabric partition to the default load for
    the service.'
  syntax:
    content: reset_partition_load(self, partition_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.reset_partition_load
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.resolve_service
  langs:
  - python
  module: azure.servicefabric
  name: resolve_service
  source:
    id: resolve_service
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 5030
  summary: 'Resolve a Service Fabric partition.

    Resolve a Service Fabric service partition, to get the endpoints of the service
    replicas.'
  syntax:
    content: resolve_service(self, service_id, partition_key_type=None, partition_key_value=None,
      previous_rsp_version=None, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: Key type for the partition. This parameter is required if the partition
        scheme for the service is Int64Range or Named. The possible values are following.
        - None (1) - Indicates that the the PartitionKeyValue parameter is not specified.
        This is valid for the partitions with partitioning scheme as Singleton. This
        is the default value. The value is 1. - Int64Range (2) - Indicates that the
        the PartitionKeyValue parameter is an int64 partition key. This is valid for
        the partitions with partitioning scheme as Int64Range. The value is 2. - Named
        (3) - Indicates that the the PartitionKeyValue parameter is a name of the
        partition. This is valid for the partitions with partitioning scheme as Named.
        The value is 3.
      id: partition_key_type
      type:
      - int
    - description: Partition key. This is required if the partition scheme for the
        service is Int64Range or Named.
      id: partition_key_value
      type:
      - str
    - defaultValue: 'False'
      description: The value in the Version field of the response that was received
        previously. This is required if the user knows that the result that was got
        previously is stale.
      id: previous_rsp_version
      type:
      - str
    - defaultValue: None
      description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: '60'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.resolve_service
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.restart_deployed_code_package
  langs:
  - python
  module: azure.servicefabric
  name: restart_deployed_code_package
  source:
    id: restart_deployed_code_package
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7414
  summary: 'Restarts a code package deployed on a Service Fabric node in a cluster.

    Restarts a code package deployed on a Service Fabric node in a cluster. This aborts
    the code package process, which will restart all the user service replicas hosted
    in that process.'
  syntax:
    content: restart_deployed_code_package(self, node_name, application_id, restart_deployed_code_package_description,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: Describes the deployed code package on Service Fabric node to restart.
      id: restart_deployed_code_package_description
      type:
      - RestartDeployedCodePackageDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.restart_deployed_code_package
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.restart_node
  langs:
  - python
  module: azure.servicefabric
  name: restart_node
  source:
    id: restart_node
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1798
  summary: 'Restarts a Service Fabric cluster node.

    Restarts a Service Fabric cluster node that is already started.'
  syntax:
    content: restart_node(self, node_name, node_instance_id="0", timeout=60, create_fabric_dump="False",
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: '0'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The instance id of the target node. If instance id is specified
        the node is restarted only if it matches with the current instance of the
        node. A default value of "0" would match any instance id. The instance id
        can be obtained using get node query.
      id: node_instance_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: 'Specify True to create a dump of the fabric node process. This
        is case sensitive. Possible values include: ''False'', ''True'''
      id: create_fabric_dump
      type:
      - str
    - defaultValue: None
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.restart_node
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.restart_replica
  langs:
  - python
  module: azure.servicefabric
  name: restart_replica
  source:
    id: restart_replica
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 6661
  summary: 'Restarts a service replica of a persisted service running on a node.

    Restarts a service replica of a persisted service running on a node. Warning -
    There are no safety checks performed when this API is used. Incorrect use of this
    API can lead to availability loss for stateful services.'
  syntax:
    content: restart_replica(self, node_name, partition_id, replica_id, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the node.
      id: node_name
      type:
      - str
    - defaultValue: None
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: '60'
      description: The identifier of the replica.
      id: replica_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.restart_replica
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.resume_application_upgrade
  langs:
  - python
  module: azure.servicefabric
  name: resume_application_upgrade
  source:
    id: resume_application_upgrade
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3415
  summary: 'Resumes upgrading an application in the Service Fabric cluster.

    Resumes an unmonitored manual Service Fabric application upgrade. Service Fabric
    upgrades one upgrade domain at a time. For unmonitored manual upgrades, after
    Service Fabric finishes an upgrade domain, it waits for you to call this API before
    proceeding to the next upgrade domain.'
  syntax:
    content: resume_application_upgrade(self, application_id, upgrade_domain_name,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: The name of the upgrade domain in which to resume the upgrade.
      id: upgrade_domain_name
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.resume_application_upgrade
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.rollback_application_upgrade
  langs:
  - python
  module: azure.servicefabric
  name: rollback_application_upgrade
  source:
    id: rollback_application_upgrade
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3486
  summary: 'Starts rolling back the currently on-going upgrade of an application in
    the Service Fabric cluster.

    Starts rolling back the current application upgrade to the previous version. This
    API can only be used to rollback the current in-progress upgrade that is rolling
    forward to new version. If the application is not currently being upgraded use
    StartApplicationUpgrade API to upgrade it to desired version including rolling
    back to a previous version.'
  syntax:
    content: rollback_application_upgrade(self, application_id, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.rollback_application_upgrade
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.start_application_upgrade
  langs:
  - python
  module: azure.servicefabric
  name: start_application_upgrade
  source:
    id: start_application_upgrade
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3210
  summary: 'Starts upgrading an application in the Service Fabric cluster.

    Validates the supplied application upgrade parameters and starts upgrading the
    application if the parameters are valid.'
  syntax:
    content: start_application_upgrade(self, application_id, application_upgrade_description,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: Describes the parameters for an application upgrade.
      id: application_upgrade_description
      type:
      - ApplicationUpgradeDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_application_upgrade
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.start_chaos
  langs:
  - python
  module: azure.servicefabric
  name: start_chaos
  source:
    id: start_chaos
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7760
  summary: 'Starts Chaos in the cluster.

    If Chaos is not already running in the cluster, it starts Chaos with the passed
    in Chaos parameters. If Chaos is already running when this call is made, the call
    fails with the error code FABRIC_E_CHAOS_ALREADY_RUNNING. Please refer to the
    article [Induce controlled Chaos in Service Fabric clusters]([https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-controlled-chaos](https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-controlled-chaos))
    for more details. .'
  syntax:
    content: start_chaos(self, chaos_parameters, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '60'
      description: Describes all the parameters to configure a Chaos run.
      id: chaos_parameters
      type:
      - ChaosParameters
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_chaos
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.start_data_loss
  langs:
  - python
  module: azure.servicefabric
  name: start_data_loss
  source:
    id: start_data_loss
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8436
  summary: 'This API will induce data loss for the specified partition. It will trigger
    a call to the OnDataLossAsync API of the partition.

    This API will induce data loss for the specified partition. It will trigger a
    call to the OnDataLoss API of the partition. Actual data loss will depend on the
    specified DataLossMode PartialDataLoss - Only a quorum of replicas are removed
    and OnDataLoss is triggered for the partition but actual data loss depends on
    the presence of in-flight replication. FullDataLoss - All replicas are removed
    hence all data is lost and OnDataLoss is triggered. This API should only be called
    with a stateful service as the target. Calling this API with a system service
    as the target is not advised. Note:  Once this API has been called, it cannot
    be reversed. Calling CancelOperation will only stop execution and clean up internal
    system state. It will not restore data if the command has progressed far enough
    to cause data loss. Call the GetDataLossProgress API with the same OperationId
    to return information on the operation started with this API. .'
  syntax:
    content: start_data_loss(self, service_id, partition_id, operation_id, data_loss_mode,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - defaultValue: 'False'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: None
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - defaultValue: '60'
      description: 'This enum is passed to the StartDataLoss API to indicate what
        type of data loss to induce. - Invalid - Reserved.  Do not pass into API.
        - PartialDataLoss - PartialDataLoss option will cause a quorum of replicas
        to go down, triggering an OnDataLoss event in the system for the given partition.
        - FullDataLoss - FullDataLoss option will drop all the replicas which means
        that all the data will be lost. . Possible values include: ''Invalid'', ''PartialDataLoss'',
        ''FullDataLoss'''
      id: data_loss_mode
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_data_loss
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.start_node
  langs:
  - python
  module: azure.servicefabric
  name: start_node
  source:
    id: start_node
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1661
  summary: 'Starts a Service Fabric cluster node.

    Starts a Service Fabric cluster node that is already stopped.'
  syntax:
    content: start_node(self, node_name, node_instance_id="0", timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '0'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The instance id of the node that is stopped. If instance id is
        specified the node is started only if it matches with the current instance
        of the stopped node. A default value of "0" would match any instance id. The
        instance id can be obtained using get node query.
      id: node_instance_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_node
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.start_node_transition
  langs:
  - python
  module: azure.servicefabric
  name: start_node_transition
  source:
    id: start_node_transition
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8920
  summary: 'Starts or stops a cluster node.

    Starts or stops a cluster node.  A cluster node is a process, not the OS instance
    itself.  To start a node, pass in "Start" for the NodeTransitionType parameter.
    To stop a node, pass in "Stop" for the NodeTransitionType parameter. This API
    starts the operation - when the API returns the node may not have finished transitioning
    yet. Call GetNodeTransitionProgress with the same OperationId to get the progress
    of the operation. .'
  syntax:
    content: start_node_transition(self, node_name, operation_id, node_transition_type,
      node_instance_id, stop_duration_in_seconds, timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - description: The name of the node.
      id: node_name
      type:
      - str
    - description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - defaultValue: 'False'
      description: 'Indicates the type of transition to perform.  NodeTransitionType.Start
        will start a stopped node. NodeTransitionType.Stop will stop a node that is
        up. - Invalid - Reserved.  Do not pass into API. - Start - Transition a stopped
        node to up. - Stop - Transition an up node to stopped. . Possible values include:
        ''Invalid'', ''Start'', ''Stop'''
      id: node_transition_type
      type:
      - str
    - defaultValue: None
      description: The node instance ID of the target node. This can be determined
        through GetNodeInfo API.
      id: node_instance_id
      type:
      - str
    - defaultValue: '60'
      description: The duration, in seconds, to keep the node stopped.  The minimum
        value is 600, the maximum is 14400. After this time expires, the node will
        automatically come back up.
      id: stop_duration_in_seconds
      type:
      - int
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_node_transition
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.start_partition_restart
  langs:
  - python
  module: azure.servicefabric
  name: start_partition_restart
  source:
    id: start_partition_restart
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8766
  summary: 'This API will restart some or all replicas or instances of the specified
    partition.

    This API is useful for testing failover. If used to target a stateless service
    partition, RestartPartitionMode must be AllReplicasOrInstances. Call the GetPartitionRestartProgress
    API using the same OperationId to get the progress. .'
  syntax:
    content: start_partition_restart(self, service_id, partition_id, operation_id,
      restart_partition_mode, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - defaultValue: 'False'
      description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: None
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - defaultValue: '60'
      description: '* Invalid - Reserved.  Do not pass


        <SYSTEM MESSAGE: c:\python35\lib\site-packages\azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\__init__.py:docstring
        of azure.servicefabric.ServiceFabricClientAPIs.start_partition_restart:20:
        (WARNING/2) Bullet list ends without a blank line; unexpected unindent.>


        into API. - AllReplicasOrInstances - All replicas or instances in the partition
        are restarted at once. - OnlyActiveSecondaries - Only the secondary replicas
        are restarted. . Possible values include: ''Invalid'', ''AllReplicasOrInstances'',
        ''OnlyActiveSecondaries'''
      id: restart_partition_mode
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_partition_restart
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.start_quorum_loss
  langs:
  - python
  module: azure.servicefabric
  name: start_quorum_loss
  source:
    id: start_quorum_loss
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 8605
  summary: 'Induces quorum loss for a given stateful service partition.

    Induces quorum loss for a given stateful service partition.  This API is useful
    for a temporary quorum loss situation on your service. Call the GetQuorumLossProgress
    API with the same OperationId to return information on the operation started with
    this API. This can only be called on stateful persisted (HasPersistedState==true)
    services.  Do not use this API on stateless services or stateful in-memory only
    services. .'
  syntax:
    content: start_quorum_loss(self, service_id, partition_id, operation_id, quorum_loss_mode,
      quorum_loss_duration, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - description: The identity of the partition.
      id: partition_id
      type:
      - str
    - defaultValue: 'False'
      description: A GUID that identifies a call of this API.  This is passed into
        the corresponding GetProgress API
      id: operation_id
      type:
      - str
    - defaultValue: None
      description: 'This enum is passed to the StartQuorumLoss API to indicate what
        type of quorum loss to induce. - Invalid - Reserved.  Do not pass into API.
        - QuorumReplicas - Partial Quorum loss mode : Minimum number of replicas for
        a partition will be down that will cause a quorum loss. - AllReplicas- Full
        Quorum loss mode : All replicas for a partition will be down that will cause
        a quorum loss. . Possible values include: ''Invalid'', ''QuorumReplicas'',
        ''AllReplicas'''
      id: quorum_loss_mode
      type:
      - str
    - defaultValue: '60'
      description: The amount of time for which the partition will be kept in quorum
        loss.  This must be specified in seconds.
      id: quorum_loss_duration
      type:
      - int
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_quorum_loss
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.stop_chaos
  langs:
  - python
  module: azure.servicefabric
  name: stop_chaos
  source:
    id: stop_chaos
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7825
  summary: 'Stops Chaos in the cluster if it is already running, otherwise it does
    nothing.

    Stops Chaos from scheduling further faults; but, the in-flight faults are not
    affected.'
  syntax:
    content: stop_chaos(self, timeout=60, custom_headers=None, raw=False)
    parameters:
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.stop_chaos
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.stop_node
  langs:
  - python
  module: azure.servicefabric
  name: stop_node
  source:
    id: stop_node
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1729
  summary: 'Stops a Service Fabric cluster node.

    Stops a Service Fabric cluster node that is in a started state. The node will
    stay down until start node is called.'
  syntax:
    content: stop_node(self, node_name, node_instance_id="0", timeout=60, custom_headers=None,
      raw=False)
    parameters:
    - defaultValue: '0'
      description: The name of the node.
      id: node_name
      type:
      - str
    - description: The instance id of the target node. If instance id is specified
        the node is stopped only if it matches with the current instance of the node.
        A default value of "0" would match any instance id. The instance id can be
        obtained using get node query.
      id: node_instance_id
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - defaultValue: 'False'
      description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: None
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: '60'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.stop_node
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.unprovision_application_type
  langs:
  - python
  module: azure.servicefabric
  name: unprovision_application_type
  source:
    id: unprovision_application_type
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2136
  summary: 'Removes or unregisters a Service Fabric application type from the cluster.

    Removes or unregisters a Service Fabric application type from the cluster. This
    operation can only be performed if all application instance of the application
    type has been deleted. Once the application type is unregistered, no new application
    instance can be created for this particular application type.'
  syntax:
    content: unprovision_application_type(self, application_type_name, application_type_version,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the application type.
      id: application_type_name
      type:
      - str
    - defaultValue: '60'
      description: The application type version.
      id: application_type_version
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.unprovision_application_type
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.update_application_upgrade
  langs:
  - python
  module: azure.servicefabric
  name: update_application_upgrade
  source:
    id: update_application_upgrade
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 3345
  summary: 'Updates an ongoing application upgrade in the Service Fabric cluster.

    Updates the parameters of an ongoing application upgrade from the ones specified
    at the time of starting the application upgrade. This may be required to mitigate
    stuck application upgrades due to incorrect parameters or issues in the application
    to make progress.'
  syntax:
    content: update_application_upgrade(self, application_id, application_upgrade_update_description,
      timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the application. This is typically the full name
        of the application without the 'fabric:' URI scheme.
      id: application_id
      type:
      - str
    - defaultValue: '60'
      description: Describes the parameters for updating an existing application upgrade.
      id: application_upgrade_update_description
      type:
      - ApplicationUpgradeUpdateDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.update_application_upgrade
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.update_service
  langs:
  - python
  module: azure.servicefabric
  name: update_service
  source:
    id: update_service
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 4548
  summary: 'Updates the specified service using the given update description.

    Updates the specified service using the given update description.'
  syntax:
    content: update_service(self, service_id, service_update_description, timeout=60,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The identity of the service. This is typically the full name of
        the service without the 'fabric:' URI scheme.
      id: service_id
      type:
      - str
    - defaultValue: '60'
      description: The updated configuration for the service.
      id: service_update_description
      type:
      - ServiceUpdateDescription
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: 'False'
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.update_service
- _type: method
  class: azure.servicefabric.ServiceFabricClientAPIs
  fullName: azure.servicefabric.ServiceFabricClientAPIs.upload_file
  langs:
  - python
  module: azure.servicefabric
  name: upload_file
  source:
    id: upload_file
    path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
    remote:
      branch: master
      path: \azure_servicefabric-5.6.130-py3.5.egg\azure\servicefabric\service_fabric_client_ap_is.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 7965
  summary: 'Uploads contents of the file to the image store.

    Uploads contents of the file to the image store. Use this API if the file is small
    enough to upload again if the connection fails. The file''s data needs to be added
    to the request body. The contents will be uploaded to the specified path.'
  syntax:
    content: upload_file(self, content_path, timeout=60, custom_headers=None, raw=False)
    parameters:
    - defaultValue: '60'
      description: Relative path to file or folder in the image store from its root.
      id: content_path
      type:
      - str
    - description: The server timeout for performing the operation in seconds. This
        specifies the time duration that the client is willing to wait for the requested
        operation to complete. The default value for this parameter is 60 seconds.
      id: timeout
      type:
      - long
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.servicefabric.ServiceFabricClientAPIs.upload_file
references:
- fullName: azure.servicefabric.ServiceFabricClientAPIs.cancel_operation
  isExternal: false
  name: cancel_operation
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.cancel_operation
- fullName: azure.servicefabric.ServiceFabricClientAPIs.copy_image_store_content
  isExternal: false
  name: copy_image_store_content
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.copy_image_store_content
- fullName: azure.servicefabric.ServiceFabricClientAPIs.create_application
  isExternal: false
  name: create_application
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.create_application
- fullName: azure.servicefabric.ServiceFabricClientAPIs.create_compose_application
  isExternal: false
  name: create_compose_application
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.create_compose_application
- fullName: azure.servicefabric.ServiceFabricClientAPIs.create_service
  isExternal: false
  name: create_service
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.create_service
- fullName: azure.servicefabric.ServiceFabricClientAPIs.create_service_from_template
  isExternal: false
  name: create_service_from_template
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.create_service_from_template
- fullName: azure.servicefabric.ServiceFabricClientAPIs.delete_application
  isExternal: false
  name: delete_application
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.delete_application
- fullName: azure.servicefabric.ServiceFabricClientAPIs.delete_image_store_content
  isExternal: false
  name: delete_image_store_content
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.delete_image_store_content
- fullName: azure.servicefabric.ServiceFabricClientAPIs.delete_service
  isExternal: false
  name: delete_service
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.delete_service
- fullName: azure.servicefabric.ServiceFabricClientAPIs.deployed_service_package_to_node
  isExternal: false
  name: deployed_service_package_to_node
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.deployed_service_package_to_node
- fullName: azure.servicefabric.ServiceFabricClientAPIs.disable_node
  isExternal: false
  name: disable_node
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.disable_node
- fullName: azure.servicefabric.ServiceFabricClientAPIs.enable_node
  isExternal: false
  name: enable_node
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.enable_node
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_aad_metadata
  isExternal: false
  name: get_aad_metadata
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_aad_metadata
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_health
  isExternal: false
  name: get_application_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_health_using_policy
  isExternal: false
  name: get_application_health_using_policy
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_health_using_policy
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_info
  isExternal: false
  name: get_application_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_info_list
  isExternal: false
  name: get_application_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_manifest
  isExternal: false
  name: get_application_manifest
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_manifest
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_name_info
  isExternal: false
  name: get_application_name_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_name_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list
  isExternal: false
  name: get_application_type_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list_by_name
  isExternal: false
  name: get_application_type_info_list_by_name
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_type_info_list_by_name
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_application_upgrade
  isExternal: false
  name: get_application_upgrade
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_application_upgrade
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_chaos_report
  isExternal: false
  name: get_chaos_report
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_chaos_report
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health
  isExternal: false
  name: get_cluster_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk
  isExternal: false
  name: get_cluster_health_chunk
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk_using_policy_and_advanced_filters
  isExternal: false
  name: get_cluster_health_chunk_using_policy_and_advanced_filters
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_chunk_using_policy_and_advanced_filters
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_using_policy
  isExternal: false
  name: get_cluster_health_using_policy
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_health_using_policy
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_manifest
  isExternal: false
  name: get_cluster_manifest
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_manifest
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_upgrade_progress
  isExternal: false
  name: get_cluster_upgrade_progress
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_cluster_upgrade_progress
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status
  isExternal: false
  name: get_compose_application_status
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status_list
  isExternal: false
  name: get_compose_application_status_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_compose_application_status_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_data_loss_progress
  isExternal: false
  name: get_data_loss_progress
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_data_loss_progress
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health
  isExternal: false
  name: get_deployed_application_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health_using_policy
  isExternal: false
  name: get_deployed_application_health_using_policy
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_health_using_policy
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info
  isExternal: false
  name: get_deployed_application_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info_list
  isExternal: false
  name: get_deployed_application_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_application_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_code_package_info_list
  isExternal: false
  name: get_deployed_code_package_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_code_package_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health
  isExternal: false
  name: get_deployed_service_package_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health_using_policy
  isExternal: false
  name: get_deployed_service_package_health_using_policy
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_health_using_policy
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list
  isExternal: false
  name: get_deployed_service_package_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list_by_name
  isExternal: false
  name: get_deployed_service_package_info_list_by_name
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_package_info_list_by_name
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_detail_info
  isExternal: false
  name: get_deployed_service_replica_detail_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_detail_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_info_list
  isExternal: false
  name: get_deployed_service_replica_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_replica_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_by_name
  isExternal: false
  name: get_deployed_service_type_info_by_name
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_by_name
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_list
  isExternal: false
  name: get_deployed_service_type_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_deployed_service_type_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_fault_operation_list
  isExternal: false
  name: get_fault_operation_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_fault_operation_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_image_store_content
  isExternal: false
  name: get_image_store_content
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_image_store_content
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_image_store_root_content
  isExternal: false
  name: get_image_store_root_content
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_image_store_root_content
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_health
  isExternal: false
  name: get_node_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_health_using_policy
  isExternal: false
  name: get_node_health_using_policy
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_health_using_policy
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_info
  isExternal: false
  name: get_node_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_info_list
  isExternal: false
  name: get_node_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_load_info
  isExternal: false
  name: get_node_load_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_load_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_node_transition_progress
  isExternal: false
  name: get_node_transition_progress
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_node_transition_progress
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_health
  isExternal: false
  name: get_partition_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_health_using_policy
  isExternal: false
  name: get_partition_health_using_policy
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_health_using_policy
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_info
  isExternal: false
  name: get_partition_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_info_list
  isExternal: false
  name: get_partition_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_load_information
  isExternal: false
  name: get_partition_load_information
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_load_information
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_partition_restart_progress
  isExternal: false
  name: get_partition_restart_progress
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_partition_restart_progress
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_code_version_info_list
  isExternal: false
  name: get_provisioned_fabric_code_version_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_code_version_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_config_version_info_list
  isExternal: false
  name: get_provisioned_fabric_config_version_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_provisioned_fabric_config_version_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_quorum_loss_progress
  isExternal: false
  name: get_quorum_loss_progress
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_quorum_loss_progress
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_replica_health
  isExternal: false
  name: get_replica_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_replica_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_replica_health_using_policy
  isExternal: false
  name: get_replica_health_using_policy
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_replica_health_using_policy
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_replica_info
  isExternal: false
  name: get_replica_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_replica_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_replica_info_list
  isExternal: false
  name: get_replica_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_replica_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_description
  isExternal: false
  name: get_service_description
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_description
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_health
  isExternal: false
  name: get_service_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_health_using_policy
  isExternal: false
  name: get_service_health_using_policy
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_health_using_policy
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_info
  isExternal: false
  name: get_service_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_info_list
  isExternal: false
  name: get_service_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_manifest
  isExternal: false
  name: get_service_manifest
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_manifest
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_name_info
  isExternal: false
  name: get_service_name_info
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_name_info
- fullName: azure.servicefabric.ServiceFabricClientAPIs.get_service_type_info_list
  isExternal: false
  name: get_service_type_info_list
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.get_service_type_info_list
- fullName: azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_command
  isExternal: false
  name: invoke_infrastructure_command
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_command
- fullName: azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_query
  isExternal: false
  name: invoke_infrastructure_query
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.invoke_infrastructure_query
- fullName: azure.servicefabric.ServiceFabricClientAPIs.provision_application_type
  isExternal: false
  name: provision_application_type
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.provision_application_type
- fullName: azure.servicefabric.ServiceFabricClientAPIs.recover_all_partitions
  isExternal: false
  name: recover_all_partitions
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.recover_all_partitions
- fullName: azure.servicefabric.ServiceFabricClientAPIs.recover_partition
  isExternal: false
  name: recover_partition
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.recover_partition
- fullName: azure.servicefabric.ServiceFabricClientAPIs.recover_service_partitions
  isExternal: false
  name: recover_service_partitions
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.recover_service_partitions
- fullName: azure.servicefabric.ServiceFabricClientAPIs.recover_system_partitions
  isExternal: false
  name: recover_system_partitions
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.recover_system_partitions
- fullName: azure.servicefabric.ServiceFabricClientAPIs.remove_compose_application
  isExternal: false
  name: remove_compose_application
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.remove_compose_application
- fullName: azure.servicefabric.ServiceFabricClientAPIs.remove_node_state
  isExternal: false
  name: remove_node_state
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.remove_node_state
- fullName: azure.servicefabric.ServiceFabricClientAPIs.remove_replica
  isExternal: false
  name: remove_replica
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.remove_replica
- fullName: azure.servicefabric.ServiceFabricClientAPIs.report_application_health
  isExternal: false
  name: report_application_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_application_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.report_cluster_health
  isExternal: false
  name: report_cluster_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_cluster_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.report_deployed_application_health
  isExternal: false
  name: report_deployed_application_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_deployed_application_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.report_deployed_service_package_health
  isExternal: false
  name: report_deployed_service_package_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_deployed_service_package_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.report_node_health
  isExternal: false
  name: report_node_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_node_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.report_partition_health
  isExternal: false
  name: report_partition_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_partition_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.report_replica_health
  isExternal: false
  name: report_replica_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_replica_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.report_service_health
  isExternal: false
  name: report_service_health
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.report_service_health
- fullName: azure.servicefabric.ServiceFabricClientAPIs.reset_partition_load
  isExternal: false
  name: reset_partition_load
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.reset_partition_load
- fullName: azure.servicefabric.ServiceFabricClientAPIs.resolve_service
  isExternal: false
  name: resolve_service
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.resolve_service
- fullName: azure.servicefabric.ServiceFabricClientAPIs.restart_deployed_code_package
  isExternal: false
  name: restart_deployed_code_package
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.restart_deployed_code_package
- fullName: azure.servicefabric.ServiceFabricClientAPIs.restart_node
  isExternal: false
  name: restart_node
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.restart_node
- fullName: azure.servicefabric.ServiceFabricClientAPIs.restart_replica
  isExternal: false
  name: restart_replica
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.restart_replica
- fullName: azure.servicefabric.ServiceFabricClientAPIs.resume_application_upgrade
  isExternal: false
  name: resume_application_upgrade
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.resume_application_upgrade
- fullName: azure.servicefabric.ServiceFabricClientAPIs.rollback_application_upgrade
  isExternal: false
  name: rollback_application_upgrade
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.rollback_application_upgrade
- fullName: azure.servicefabric.ServiceFabricClientAPIs.start_application_upgrade
  isExternal: false
  name: start_application_upgrade
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_application_upgrade
- fullName: azure.servicefabric.ServiceFabricClientAPIs.start_chaos
  isExternal: false
  name: start_chaos
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_chaos
- fullName: azure.servicefabric.ServiceFabricClientAPIs.start_data_loss
  isExternal: false
  name: start_data_loss
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_data_loss
- fullName: azure.servicefabric.ServiceFabricClientAPIs.start_node
  isExternal: false
  name: start_node
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_node
- fullName: azure.servicefabric.ServiceFabricClientAPIs.start_node_transition
  isExternal: false
  name: start_node_transition
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_node_transition
- fullName: azure.servicefabric.ServiceFabricClientAPIs.start_partition_restart
  isExternal: false
  name: start_partition_restart
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_partition_restart
- fullName: azure.servicefabric.ServiceFabricClientAPIs.start_quorum_loss
  isExternal: false
  name: start_quorum_loss
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.start_quorum_loss
- fullName: azure.servicefabric.ServiceFabricClientAPIs.stop_chaos
  isExternal: false
  name: stop_chaos
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.stop_chaos
- fullName: azure.servicefabric.ServiceFabricClientAPIs.stop_node
  isExternal: false
  name: stop_node
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.stop_node
- fullName: azure.servicefabric.ServiceFabricClientAPIs.unprovision_application_type
  isExternal: false
  name: unprovision_application_type
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.unprovision_application_type
- fullName: azure.servicefabric.ServiceFabricClientAPIs.update_application_upgrade
  isExternal: false
  name: update_application_upgrade
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.update_application_upgrade
- fullName: azure.servicefabric.ServiceFabricClientAPIs.update_service
  isExternal: false
  name: update_service
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.update_service
- fullName: azure.servicefabric.ServiceFabricClientAPIs.upload_file
  isExternal: false
  name: upload_file
  parent: azure.servicefabric.ServiceFabricClientAPIs
  uid: azure.servicefabric.ServiceFabricClientAPIs.upload_file
