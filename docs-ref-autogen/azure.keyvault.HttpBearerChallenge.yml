#YamlMime:PythonReference
api_name: []
items:
- _type: class
  children:
  - azure.keyvault.HttpBearerChallenge.get_authorization_server
  - azure.keyvault.HttpBearerChallenge.get_resource
  - azure.keyvault.HttpBearerChallenge.get_scope
  - azure.keyvault.HttpBearerChallenge.get_value
  - azure.keyvault.HttpBearerChallenge.is_bearer_challenge
  class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.keyvault
  name: HttpBearerChallenge
  source:
    id: HttpBearerChallenge
    path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
    remote:
      branch: master
      path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 12
  summary: 'Bases: `object`





    '
  syntax:
    content: HttpBearerChallenge(self, request_uri, challenge)
  type: Class
  uid: azure.keyvault.HttpBearerChallenge
- _type: method
  class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.get_authorization_server
  langs:
  - python
  module: azure.keyvault
  name: get_authorization_server
  source:
    id: get_authorization_server
    path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
    remote:
      branch: master
      path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 55
  summary: Returns the URI for the authorization server if present, otherwise empty
    string.
  syntax:
    content: get_authorization_server(self)
    parameters:
    - id: self
  type: Method
  uid: azure.keyvault.HttpBearerChallenge.get_authorization_server
- _type: method
  class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.get_resource
  langs:
  - python
  module: azure.keyvault
  name: get_resource
  source:
    id: get_resource
    path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
    remote:
      branch: master
      path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 64
  summary: Returns the resource if present, otherwise empty string.
  syntax:
    content: get_resource(self)
    parameters:
    - id: self
  type: Method
  uid: azure.keyvault.HttpBearerChallenge.get_resource
- _type: method
  class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.get_scope
  langs:
  - python
  module: azure.keyvault
  name: get_scope
  source:
    id: get_scope
    path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
    remote:
      branch: master
      path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 68
  summary: Returns the scope if present, otherwise empty string.
  syntax:
    content: get_scope(self)
    parameters:
    - id: self
  type: Method
  uid: azure.keyvault.HttpBearerChallenge.get_scope
- _type: method
  class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.get_value
  langs:
  - python
  module: azure.keyvault
  name: get_value
  source:
    id: get_value
    path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
    remote:
      branch: master
      path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 52
  syntax:
    content: get_value(self, key)
    parameters:
    - id: self
    - id: key
  type: Method
  uid: azure.keyvault.HttpBearerChallenge.get_value
- _type: method
  class: azure.keyvault.HttpBearerChallenge
  fullName: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
  langs:
  - python
  module: azure.keyvault
  name: is_bearer_challenge
  source:
    id: is_bearer_challenge
    path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
    remote:
      branch: master
      path: \azure_keyvault-0.3.4-py3.5.egg\azure\keyvault\custom\http_bearer_challenge.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 42
  summary: 'Tests whether an authentication header is a Bearer challenge. :param authentication_header:
    the authentication header to test rtype: bool'
  syntax:
    content: is_bearer_challenge(authentication_header)
    parameters:
    - id: authentication_header
  type: Method
  uid: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
references:
- fullName: azure.keyvault.HttpBearerChallenge.get_authorization_server
  isExternal: false
  name: get_authorization_server
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.get_authorization_server
- fullName: azure.keyvault.HttpBearerChallenge.get_resource
  isExternal: false
  name: get_resource
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.get_resource
- fullName: azure.keyvault.HttpBearerChallenge.get_scope
  isExternal: false
  name: get_scope
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.get_scope
- fullName: azure.keyvault.HttpBearerChallenge.get_value
  isExternal: false
  name: get_value
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.get_value
- fullName: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
  isExternal: false
  name: is_bearer_challenge
  parent: azure.keyvault.HttpBearerChallenge
  uid: azure.keyvault.HttpBearerChallenge.is_bearer_challenge
