#YamlMime:PythonReference
api_name: []
items:
- _type: class
  children:
  - azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
  - azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
  - azure.mgmt.sql.operations.DatabasesOperations.delete
  - azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
  - azure.mgmt.sql.operations.DatabasesOperations.export
  - azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
  - azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
  - azure.mgmt.sql.operations.DatabasesOperations.get
  - azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
  - azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
  - azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
  - azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
  - azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
  - azure.mgmt.sql.operations.DatabasesOperations.import_method
  - azure.mgmt.sql.operations.DatabasesOperations.list_by_server
  - azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
  - azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
  - azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
  - azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
  - azure.mgmt.sql.operations.DatabasesOperations.list_usages
  - azure.mgmt.sql.operations.DatabasesOperations.pause
  - azure.mgmt.sql.operations.DatabasesOperations.resume
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations
  inheritance:
  - type: builtins.object
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: DatabasesOperations
  source:
    id: DatabasesOperations
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 20
  summary: 'Bases: `object`

    DatabasesOperations operations.

























    '
  syntax:
    content: DatabasesOperations(self, client, config, serializer, deserializer)
    parameters:
    - description: Client for service requests.
      id: client
    - description: Configuration of service client.
      id: config
    - description: An object model serializer.
      id: serializer
    - description: An objec model deserializer.
      id: deserializer
  type: Class
  uid: azure.mgmt.sql.operations.DatabasesOperations
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_import_operation
  source:
    id: create_import_operation
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 211
  summary: Creates an import operation that imports a bacpac into an existing database.
    The existing database must be empty.
  syntax:
    content: create_import_operation(self, resource_group_name, server_name, database_name,
      parameters, custom_headers=None, raw=False)
    parameters:
    - id: self
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database to import into
      id: database_name
      type:
      - str
    - description: The required parameters for importing a Bacpac into a database.
      id: parameters
      type:
      - ImportExtensionRequest
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update
  source:
    id: create_or_update
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 970
  summary: Creates a new database or updates an existing database. Location is a required
    property in the request body, and it must be the same as the location of the SQL
    server.
  syntax:
    content: create_or_update(self, resource_group_name, server_name, database_name,
      parameters, custom_headers=None, raw=False)
    parameters:
    - id: self
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database to be operated on (updated or created).
      id: database_name
      type:
      - str
    - description: The required parameters for creating or updating a database.
      id: parameters
      type:
      - Database
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_blob_auditing_policy
  source:
    id: create_or_update_blob_auditing_policy
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1965
  summary: Creates or updates a database's blob auditing policy.
  syntax:
    content: create_or_update_blob_auditing_policy(self, resource_group_name, server_name,
      database_name, parameters, custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the database for which database blob audit policy will
        be defined.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: The database blob auditing policy.
      id: parameters
      type:
      - DatabaseBlobAuditingPolicy
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_threat_detection_policy
  source:
    id: create_or_update_threat_detection_policy
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1816
  summary: Creates or updates a database's threat detection policy.
  syntax:
    content: create_or_update_threat_detection_policy(self, resource_group_name, server_name,
      database_name, parameters, custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the database for which database Threat Detection policy
        is defined.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: The database Threat Detection policy.
      id: parameters
      type:
      - DatabaseSecurityAlertPolicy
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: create_or_update_transparent_data_encryption_configuration
  source:
    id: create_or_update_transparent_data_encryption_configuration
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1516
  summary: Creates or updates a database's transparent data encryption configuration.
  syntax:
    content: create_or_update_transparent_data_encryption_configuration(self, resource_group_name,
      server_name, database_name, status=None, custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database for which setting the transparent data
        encryption applies.
      id: database_name
      type:
      - str
    - description: 'The status of the database transparent data encryption. Possible
        values include: ''Enabled'', ''Disabled'''
      id: status
      type:
      - str or TransparentDataEncryptionStatus
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.delete
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: delete
  source:
    id: delete
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1074
  summary: Deletes a database.
  syntax:
    content: delete(self, resource_group_name, server_name, database_name, custom_headers=None,
      raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database to be deleted.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.delete
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: delete_replication_link
  source:
    id: delete_replication_link
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 411
  summary: Deletes a database replication link. Cannot be done during failover.
  syntax:
    content: delete_replication_link(self, resource_group_name, server_name, database_name,
      link_id, custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the database that has the replication link to be dropped.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: The ID of the replication link to be deleted.
      id: link_id
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.export
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: export
  source:
    id: export
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 312
  summary: Exports a database to a bacpac.
  syntax:
    content: export(self, resource_group_name, server_name, database_name, parameters,
      custom_headers=None, raw=False)
    parameters:
    - id: self
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database to be exported.
      id: database_name
      type:
      - str
    - description: The required parameters for exporting a database.
      id: parameters
      type:
      - ExportRequest
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.export
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: failover_replication_link
  source:
    id: failover_replication_link
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 548
  summary: Sets which replica database is primary by failing over from the current
    primary replica database.
  syntax:
    content: failover_replication_link(self, resource_group_name, server_name, database_name,
      link_id, custom_headers=None, raw=False)
    parameters:
    - id: self
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database that has the replication link to be failed
        over.
      id: database_name
      type:
      - str
    - description: The ID of the replication link to be failed over.
      id: link_id
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: failover_replication_link_allow_data_loss
  source:
    id: failover_replication_link_allow_data_loss
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 637
  summary: Sets which replica database is primary by failing over from the current
    primary replica database. This operation might result in data loss.
  syntax:
    content: failover_replication_link_allow_data_loss(self, resource_group_name,
      server_name, database_name, link_id, custom_headers=None, raw=False)
    parameters:
    - id: self
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database that has the replication link to be failed
        over.
      id: database_name
      type:
      - str
    - description: The ID of the replication link to be failed over.
      id: link_id
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get
  source:
    id: get
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1135
  summary: Gets a database.
  syntax:
    content: get(self, resource_group_name, server_name, database_name, expand=None,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: 'False'
      description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database to be retrieved.
      id: database_name
      type:
      - str
    - description: 'A comma separated list of child objects to expand in the response.
        Possible properties: serviceTierAdvisors, transparentDataEncryption.'
      id: expand
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_blob_auditing_policy
  source:
    id: get_blob_auditing_policy
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1895
  summary: Gets a database's blob auditing policy.
  syntax:
    content: get_blob_auditing_policy(self, resource_group_name, server_name, database_name,
      custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database for which database blob audit policy is
        defined.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_replication_link
  source:
    id: get_replication_link
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 476
  summary: Gets a database replication link.
  syntax:
    content: get_replication_link(self, resource_group_name, server_name, database_name,
      link_id, custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the database to get the link for.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: The replication link ID to be retrieved.
      id: link_id
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_service_tier_advisor
  source:
    id: get_service_tier_advisor
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1368
  summary: Gets a service tier advisor.
  syntax:
    content: get_service_tier_advisor(self, resource_group_name, server_name, database_name,
      service_tier_advisor_name, custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of database.
      id: database_name
      type:
      - str
    - defaultValue: None
      description: The name of service tier advisor.
      id: service_tier_advisor_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_threat_detection_policy
  source:
    id: get_threat_detection_policy
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1746
  summary: Gets a database's threat detection policy.
  syntax:
    content: get_threat_detection_policy(self, resource_group_name, server_name, database_name,
      custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database for which database Threat Detection policy
        is defined.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: get_transparent_data_encryption_configuration
  source:
    id: get_transparent_data_encryption_configuration
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1599
  summary: Gets a database's transparent data encryption configuration.
  syntax:
    content: get_transparent_data_encryption_configuration(self, resource_group_name,
      server_name, database_name, custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database for which the transparent data encryption
        applies.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.import_method
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: import_method
  source:
    id: import_method
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 114
  summary: Imports a bacpac into a new database. .
  syntax:
    content: import_method(self, resource_group_name, server_name, parameters, custom_headers=None,
      raw=False)
    parameters:
    - id: self
    - defaultValue: 'False'
      description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: The name of the server.
      id: server_name
      type:
      - str
    - description: The required parameters for importing a Bacpac into a database.
      id: parameters
      type:
      - ImportRequest
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.import_method
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_by_server
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_by_server
  source:
    id: list_by_server
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1209
  summary: Returns a list of databases in a server.
  syntax:
    content: list_by_server(self, resource_group_name, server_name, expand=None, filter=None,
      custom_headers=None, raw=False)
    parameters:
    - defaultValue: None
      description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: The name of the server.
      id: server_name
      type:
      - str
    - description: 'A comma separated list of child objects to expand in the response.
        Possible properties: serviceTierAdvisors, transparentDataEncryption.'
      id: expand
      type:
      - str
    - description: An OData filter expression that describes a subset of databases
        to return.
      id: filter
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - defaultValue: 'False'
      description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - defaultValue: None
      description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - DatabasePaged
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_by_server
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_replication_links
  source:
    id: list_replication_links
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 726
  summary: Lists a database's replication links.
  syntax:
    content: list_replication_links(self, resource_group_name, server_name, database_name,
      custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database to retrieve links for.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - ReplicationLinkPaged
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_restore_points
  source:
    id: list_restore_points
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 37
  summary: Returns a list of database restore points.
  syntax:
    content: list_restore_points(self, resource_group_name, server_name, database_name,
      custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database from which to retrieve available restore
        points.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - RestorePointPaged
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_service_tier_advisors
  source:
    id: list_service_tier_advisors
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1440
  summary: Returns service tier advisors for specified database.
  syntax:
    content: list_service_tier_advisors(self, resource_group_name, server_name, database_name,
      custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of database.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - ServiceTierAdvisorPaged
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_transparent_data_encryption_activity
  source:
    id: list_transparent_data_encryption_activity
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1669
  summary: Returns a database's transparent data encryption operation result.
  syntax:
    content: list_transparent_data_encryption_activity(self, resource_group_name,
      server_name, database_name, custom_headers=None, raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database for which the transparent data encryption
        applies.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - TransparentDataEncryptionActivityPaged
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.list_usages
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: list_usages
  source:
    id: list_usages
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1292
  summary: Returns database usages.
  syntax:
    content: list_usages(self, resource_group_name, server_name, database_name, custom_headers=None,
      raw=False)
    parameters:
    - description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: 'False'
      description: The name of the server.
      id: server_name
      type:
      - str
    - defaultValue: None
      description: The name of the database.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    - description: '*Operation configuration overrides*.'
      id: operation_config
    return:
      type:
      - DatabaseMetricPaged
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_usages
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.pause
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: pause
  source:
    id: pause
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 802
  summary: Pauses a data warehouse.
  syntax:
    content: pause(self, resource_group_name, server_name, database_name, custom_headers=None,
      raw=False)
    parameters:
    - id: self
    - defaultValue: 'False'
      description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: The name of the server.
      id: server_name
      type:
      - str
    - description: The name of the data warehouse to pause.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.pause
- _type: method
  class: azure.mgmt.sql.operations.DatabasesOperations
  fullName: azure.mgmt.sql.operations.DatabasesOperations.resume
  langs:
  - python
  module: azure.mgmt.sql.operations
  name: resume
  source:
    id: resume
    path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
    remote:
      branch: master
      path: \azure_mgmt_sql-0.5.1-py3.5.egg\azure\mgmt\sql\operations\databases_operations.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 886
  summary: Resumes a data warehouse.
  syntax:
    content: resume(self, resource_group_name, server_name, database_name, custom_headers=None,
      raw=False)
    parameters:
    - id: self
    - defaultValue: 'False'
      description: The name of the resource group that contains the resource. You
        can obtain this value from the Azure Resource Manager API or the portal.
      id: resource_group_name
      type:
      - str
    - defaultValue: None
      description: The name of the server.
      id: server_name
      type:
      - str
    - description: The name of the data warehouse to resume.
      id: database_name
      type:
      - str
    - description: headers that will be added to the request
      id: custom_headers
      type:
      - dict
    - description: returns the direct response alongside the deserialized response
      id: raw
      type:
      - bool
    return:
      type:
      - 'ClientRawResponse

        if raw=true'
  type: Method
  uid: azure.mgmt.sql.operations.DatabasesOperations.resume
references:
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
  isExternal: false
  name: create_import_operation
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_import_operation
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update
  isExternal: false
  name: create_or_update
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
  isExternal: false
  name: create_or_update_blob_auditing_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_blob_auditing_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
  isExternal: false
  name: create_or_update_threat_detection_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_threat_detection_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
  isExternal: false
  name: create_or_update_transparent_data_encryption_configuration
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.create_or_update_transparent_data_encryption_configuration
- fullName: azure.mgmt.sql.operations.DatabasesOperations.delete
  isExternal: false
  name: delete
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.delete
- fullName: azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
  isExternal: false
  name: delete_replication_link
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.delete_replication_link
- fullName: azure.mgmt.sql.operations.DatabasesOperations.export
  isExternal: false
  name: export
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.export
- fullName: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
  isExternal: false
  name: failover_replication_link
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link
- fullName: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
  isExternal: false
  name: failover_replication_link_allow_data_loss
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.failover_replication_link_allow_data_loss
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get
  isExternal: false
  name: get
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
  isExternal: false
  name: get_blob_auditing_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_blob_auditing_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
  isExternal: false
  name: get_replication_link
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_replication_link
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
  isExternal: false
  name: get_service_tier_advisor
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_service_tier_advisor
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
  isExternal: false
  name: get_threat_detection_policy
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_threat_detection_policy
- fullName: azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
  isExternal: false
  name: get_transparent_data_encryption_configuration
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.get_transparent_data_encryption_configuration
- fullName: azure.mgmt.sql.operations.DatabasesOperations.import_method
  isExternal: false
  name: import_method
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.import_method
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_by_server
  isExternal: false
  name: list_by_server
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_by_server
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
  isExternal: false
  name: list_replication_links
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_replication_links
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
  isExternal: false
  name: list_restore_points
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_restore_points
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
  isExternal: false
  name: list_service_tier_advisors
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_service_tier_advisors
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
  isExternal: false
  name: list_transparent_data_encryption_activity
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_transparent_data_encryption_activity
- fullName: azure.mgmt.sql.operations.DatabasesOperations.list_usages
  isExternal: false
  name: list_usages
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.list_usages
- fullName: azure.mgmt.sql.operations.DatabasesOperations.pause
  isExternal: false
  name: pause
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.pause
- fullName: azure.mgmt.sql.operations.DatabasesOperations.resume
  isExternal: false
  name: resume
  parent: azure.mgmt.sql.operations.DatabasesOperations
  uid: azure.mgmt.sql.operations.DatabasesOperations.resume
