#YamlMime:PythonReference
api_name: []
items:
- _type: class
  children:
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_data_disk
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_disk
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_dns_server
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_management_certificate
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_os_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_role
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_service_certificate
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.associate_reserved_ip_address
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_role
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_vm_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.change_deployment_configuration
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_hosted_service_name_availability
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_storage_account_name_availability
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_affinity_group
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_deployment
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_hosted_service
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_reserved_ip_address
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_storage_account
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_virtual_machine_deployment
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_affinity_group
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_data_disk
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_deployment
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_disk
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_dns_server
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_hosted_service
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_management_certificate
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_os_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_reserved_ip_address
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role_instances
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_service_certificate
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_storage_account
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_vm_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.disassociate_reserved_ip_address
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_affinity_group_properties
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_data_disk
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_name
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_slot
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_disk
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_hosted_service_properties
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_management_certificate
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image_details
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_reserved_ip_address
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_role
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_service_certificate
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_keys
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_properties
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_subscription
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_affinity_groups
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_disks
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_hosted_services
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_locations
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_management_certificates
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_system_families
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_systems
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_os_images
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_reserved_ip_addresses
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extension_versions
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extensions
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_role_sizes
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_service_certificates
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_storage_accounts
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscription_operations
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscriptions
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_virtual_network_sites
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_vm_images
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.reboot_role_instance
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.rebuild_role_instance
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.regenerate_storage_account_keys
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.reimage_role_instance
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.replicate_vm_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.restart_role
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.rollback_update_or_upgrade
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.share_vm_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_role
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_roles
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_role
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_roles
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.swap_deployment
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.unreplicate_vm_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_affinity_group
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_data_disk
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_deployment_status
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_disk
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_dns_server
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_hosted_service
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_role
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_storage_account
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.upgrade_deployment
  - azure.servicemanagement.servicemanagementservice.ServiceManagementService.walk_upgrade_domain
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  inheritance:
  - inheritance:
    - type: builtins.object
    type: azure.servicemanagement.servicemanagementclient._ServiceManagementClient
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: ServiceManagementService
  source:
    id: ServiceManagementService
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 68
  summary: 'Bases: `azure.servicemanagement.servicemanagementclient._ServiceManagementClient`































































































    '
  syntax:
    content: ServiceManagementService(self, subscription_id=None, cert_file=None,
      host="management.core.windows.net", request_session=None, timeout=65)
  type: Class
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_data_disk
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: add_data_disk
  source:
    id: add_data_disk
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2380
  summary: "Adds a data disk to a virtual machine.\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role.\n\nlun:\n   Specifies the Logical Unit Number (LUN)\
    \ for the disk. The LUN specifies the slot in which the data drive appears when\
    \ mounted for usage by the virtual machine. Valid LUN values are 0 through 15.\n\
    \nhost_caching:\n   Specifies the platform caching behavior of data disk blob\
    \ for read/write efficiency. The default vault is ReadOnly. Possible values are:\
    \ None, ReadOnly, ReadWrite\n\nmedia_link:\n   Specifies the location of the blob\
    \ in Windows Azure blob store where the media for the disk is located. The blob\
    \ location must belong to the storage account in the subscription specified by\
    \ the <subscription-id> value in the operation call. Example: [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \ndisk_label:\n   Specifies the description of the data disk. When you attach\
    \ a disk, either by directly referencing a media using the MediaLink element or\
    \ specifying the target disk size, you can use the DiskLabel element to customize\
    \ the name property of the target data disk.\n\ndisk_name:\n   Specifies the name\
    \ of the disk. Windows Azure uses the specified disk to create the data disk for\
    \ the machine and populates this field with the disk name.\n\nlogical_disk_size_in_gb:\n\
    \   Specifies the size, in GB, of an empty disk to be attached to the role. The\
    \ disk can be created as part of disk attach or create VM role call by specifying\
    \ the value for this property. Windows Azure creates the empty disk based on size\
    \ preference and attaches the newly created disk to the Role.\n\nsource_media_link:\n\
    \   Specifies the location of a blob in account storage which is mounted as a\
    \ data disk when the virtual machine is created."
  syntax:
    content: add_data_disk(self, service_name, deployment_name, role_name, lun, host_caching=None,
      media_link=None, disk_label=None, disk_name=None, logical_disk_size_in_gb=None,
      source_media_link=None)
    parameters:
    - defaultValue: None
      id: self
    - defaultValue: None
      id: service_name
    - defaultValue: None
      id: deployment_name
    - defaultValue: None
      id: role_name
    - id: lun
    - id: host_caching
    - id: media_link
    - id: disk_label
    - id: disk_name
    - defaultValue: None
      id: logical_disk_size_in_gb
    - defaultValue: None
      id: source_media_link
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_data_disk
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_disk
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: add_disk
  source:
    id: add_disk
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2547
  summary: "Adds a disk to the user image repository. The disk can be an OS disk or\
    \ a data disk.\nhas_operating_system:\n   Deprecated.\n\nlabel:\n   Specifies\
    \ the description of the disk.\n\nmedia_link:\n   Specifies the location of the\
    \ blob in Windows Azure blob store where the media for the disk is located. The\
    \ blob location must belong to the storage account in the current subscription\
    \ specified by the <subscription-id> value in the operation call. Example: [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nname:\n   Specifies a name for the disk. Windows Azure uses the name to identify\
    \ the disk when creating virtual machines from the disk.\n\nos:\n   The OS type\
    \ of the disk. Possible values are: Linux, Windows"
  syntax:
    content: add_disk(self, has_operating_system, label, media_link, name, os)
    parameters:
    - id: self
    - id: has_operating_system
    - id: label
    - id: media_link
    - id: name
    - id: os
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_disk
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_dns_server
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: add_dns_server
  source:
    id: add_dns_server
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1791
  summary: "Adds a DNS server definition to an existing deployment.\nservice_name:\n\
    \   The name of the service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \ndns_server_name:\n   Specifies the name of the DNS server.\n\naddress:\n   Specifies\
    \ the IP address of the DNS server."
  syntax:
    content: add_dns_server(self, service_name, deployment_name, dns_server_name,
      address)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: dns_server_name
    - id: address
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_dns_server
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_management_certificate
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: add_management_certificate
  source:
    id: add_management_certificate
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1001
  summary: "The Add Management Certificate operation adds a certificate to the list\
    \ of management certificates. Management certificates, which are also known as\
    \ subscription certificates, authenticate clients attempting to connect to resources\
    \ associated with your Windows Azure subscription.\npublic_key:\n   A base64 representation\
    \ of the management certificate public key.\n\nthumbprint:\n   The thumb print\
    \ that uniquely identifies the management certificate.\n\ndata:\n   The certificate's\
    \ raw data in base-64 encoded .cer format."
  syntax:
    content: add_management_certificate(self, public_key, thumbprint, data)
    parameters:
    - id: self
    - id: public_key
    - id: thumbprint
    - id: data
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_management_certificate
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_os_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: add_os_image
  source:
    id: add_os_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2228
  summary: "Adds an OS image that is currently stored in a storage account in your\
    \ subscription to the image repository.\nlabel:\n   Specifies the friendly name\
    \ of the image.\n\nmedia_link:\n   Specifies the location of the blob in Windows\
    \ Azure blob store where the media for the image is located. The blob location\
    \ must belong to a storage account in the subscription specified by the <subscription-id>\
    \ value in the operation call. Example: [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nname:\n   Specifies a name for the OS image that Windows Azure uses to identify\
    \ the image when creating one or more virtual machines.\n\nos:\n   The operating\
    \ system type of the OS image. Possible values are: Linux, Windows"
  syntax:
    content: add_os_image(self, label, media_link, name, os)
    parameters:
    - id: self
    - id: label
    - id: media_link
    - id: name
    - id: os
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_os_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_role
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: add_role
  source:
    id: add_role
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1446
  summary: "Adds a virtual machine to an existing deployment.\nservice_name:\n   The\
    \ name of the service.\n\ndeployment_name:\n   The name of the deployment.\n\n\
    role_name:\n   The name of the role.\n\nsystem_config:\n   Contains the metadata\
    \ required to provision a virtual machine from a Windows or Linux OS image.  Use\
    \ an instance of WindowsConfigurationSet or LinuxConfigurationSet.\n\nos_virtual_hard_disk:\n\
    \   Contains the parameters Windows Azure uses to create the operating system\
    \ disk for the virtual machine. If you are creating a Virtual Machine by using\
    \ a VM Image, this parameter is not used.\n\nnetwork_config:\n   Encapsulates\
    \ the metadata required to create the virtual network configuration for a virtual\
    \ machine. If you do not include a network configuration set you will not be able\
    \ to access the VM through VIPs over the internet. If your virtual machine belongs\
    \ to a virtual network you can not specify which subnet address space it resides\
    \ under.\n\navailability_set_name:\n   Specifies the name of an availability set\
    \ to which to add the virtual machine. This value controls the virtual machine\
    \ allocation in the Windows Azure environment. Virtual machines specified in the\
    \ same availability set are allocated to different nodes to maximize availability.\n\
    \ndata_virtual_hard_disks:\n   Contains the parameters Windows Azure uses to create\
    \ a data disk for a virtual machine.\n\nrole_size:\n   The size of the virtual\
    \ machine to allocate. The default value is Small. Possible values are: ExtraSmall,\
    \ Small, Medium, Large, ExtraLarge. The specified value must be compatible with\
    \ the disk selected in the OSVirtualHardDisk values.\n\nrole_type:\n   The type\
    \ of the role for the virtual machine. The only supported value is PersistentVMRole.\n\
    \nresource_extension_references:\n   Optional. Contains a collection of resource\
    \ extensions that are to be installed on the Virtual Machine. This element is\
    \ used if provision_guest_agent is set to True.\n\nprovision_guest_agent:\n  \
    \ Optional. Indicates whether the VM Agent is installed on the Virtual Machine.\
    \ To run a resource extension in a Virtual Machine, this service must be installed.\n\
    \nvm_image_name:\n   Optional. Specifies the name of the VM Image that is to be\
    \ used to create the Virtual Machine. If this is specified, the system_config\
    \ and network_config parameters are not used.\n\nmedia_location:\n   Optional.\
    \ Required if the Virtual Machine is being created from a published VM Image.\
    \ Specifies the location of the VHD file that is created when VMImageName specifies\
    \ a published VM Image."
  syntax:
    content: add_role(self, service_name, deployment_name, role_name, system_config,
      os_virtual_hard_disk, network_config=None, availability_set_name=None, data_virtual_hard_disks=None,
      role_size=None, role_type="PersistentVMRole", resource_extension_references=None,
      provision_guest_agent=None, vm_image_name=None, media_location=None)
    parameters:
    - defaultValue: PersistentVMRole
      id: self
    - defaultValue: None
      id: service_name
    - defaultValue: None
      id: deployment_name
    - defaultValue: None
      id: role_name
    - defaultValue: None
      id: system_config
    - id: os_virtual_hard_disk
    - id: network_config
    - id: availability_set_name
    - id: data_virtual_hard_disks
    - id: role_size
    - id: role_type
    - defaultValue: None
      id: resource_extension_references
    - defaultValue: None
      id: provision_guest_agent
    - defaultValue: None
      id: vm_image_name
    - defaultValue: None
      id: media_location
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_role
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_service_certificate
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: add_service_certificate
  source:
    id: add_service_certificate
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 925
  summary: "Adds a certificate to a hosted service.\nservice_name:\n   Name of the\
    \ hosted service.\n\ndata:\n   The base-64 encoded form of the pfx/cer file.\n\
    \ncertificate_format:\n   The service certificate format.\n\npassword:\n   The\
    \ certificate password. Default to None when using cer format."
  syntax:
    content: add_service_certificate(self, service_name, data, certificate_format,
      password=None)
    parameters:
    - id: self
    - id: service_name
    - defaultValue: None
      id: data
    - id: certificate_format
    - id: password
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_service_certificate
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.associate_reserved_ip_address
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: associate_reserved_ip_address
  source:
    id: associate_reserved_ip_address
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1222
  summary: "Associate an existing reservedIP to a deployment.\nname:\n   Required.\
    \ Name of the reserved IP address.\n\nservice_name:\n   Required. Name of the\
    \ hosted service.\n\ndeployment_name:\n   Required. Name of the deployment.\n\n\
    virtual_ip_name:\n   Optional. Name of the VirtualIP in case of multi Vip tenant.\
    \ If this value is not specified default virtualIP is used for this operation."
  syntax:
    content: associate_reserved_ip_address(self, name, service_name, deployment_name,
      virtual_ip_name=None)
    parameters:
    - id: self
    - id: name
    - defaultValue: None
      id: service_name
    - id: deployment_name
    - id: virtual_ip_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.associate_reserved_ip_address
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_role
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: capture_role
  source:
    id: capture_role
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1625
  summary: "The Capture Role operation captures a virtual machine image to your image\
    \ gallery. From the captured image, you can create additional customized virtual\
    \ machines.\nservice_name:\n   The name of the service.\n\ndeployment_name:\n\
    \   The name of the deployment.\n\nrole_name:\n   The name of the role.\n\npost_capture_action:\n\
    \   Specifies the action after capture operation completes. Possible values are:\
    \ Delete, Reprovision.\n\ntarget_image_name:\n   Specifies the image name of the\
    \ captured virtual machine.\n\ntarget_image_label:\n   Specifies the friendly\
    \ name of the captured virtual machine.\n\nprovisioning_configuration:\n   Use\
    \ an instance of WindowsConfigurationSet or LinuxConfigurationSet."
  syntax:
    content: capture_role(self, service_name, deployment_name, role_name, post_capture_action,
      target_image_name, target_image_label, provisioning_configuration=None)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_name
    - id: post_capture_action
    - defaultValue: None
      id: target_image_name
    - id: target_image_label
    - id: provisioning_configuration
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_role
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_vm_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: capture_vm_image
  source:
    id: capture_vm_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1972
  summary: "Creates a copy of the operating system virtual hard disk (VHD) and all\
    \ of the data VHDs that are associated with the Virtual Machine, saves the VHD\
    \ copies in the same storage location as the original VHDs, and registers the\
    \ copies as a VM Image in the image repository that is associated with the specified\
    \ subscription.\nservice_name:\n   The name of the service.\n\ndeployment_name:\n\
    \   The name of the deployment.\n\nrole_name:\n   The name of the role.\n\noptions:\n\
    \   An instance of CaptureRoleAsVMImage class.\n\noptions.os_state:\n   Required.\
    \ Specifies the state of the operating system in the image. Possible values are:\
    \ Generalized, Specialized A Virtual Machine that is fully configured and running\
    \ contains a Specialized operating system. A Virtual Machine on which the Sysprep\
    \ command has been run with the generalize option contains a Generalized operating\
    \ system. If you capture an image from a generalized Virtual Machine, the machine\
    \ is deleted after the image is captured. It is recommended that all Virtual Machines\
    \ are shut down before capturing an image.\n\noptions.vm_image_name:\n   Required.\
    \ Specifies the name of the VM Image.\n\noptions.vm_image_label:\n   Required.\
    \ Specifies the label of the VM Image.\n\noptions.description:\n   Optional. Specifies\
    \ the description of the VM Image.\n\noptions.language:\n   Optional. Specifies\
    \ the language of the VM Image.\n\noptions.image_family:\n   Optional. Specifies\
    \ a value that can be used to group VM Images.\n\noptions.recommended_vm_size:\n\
    \   Optional. Specifies the size to use for the Virtual Machine that is created\
    \ from the VM Image."
  syntax:
    content: capture_vm_image(self, service_name, deployment_name, role_name, options)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_name
    - id: options
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_vm_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.change_deployment_configuration
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: change_deployment_configuration
  source:
    id: change_deployment_configuration
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 592
  summary: "Initiates a change to the deployment configuration.\nservice_name:\n \
    \  Name of the hosted service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nconfiguration:\n   The base-64 encoded service configuration file for the deployment.\n\
    \ntreat_warnings_as_error:\n   Indicates whether to treat package validation warnings\
    \ as errors. If set to true, the Created Deployment operation fails if there are\
    \ validation warnings on the service package.\n\nmode:\n   If set to Manual, WalkUpgradeDomain\
    \ must be called to apply the update. If set to Auto, the Windows Azure platform\
    \ will automatically apply the update To each upgrade domain for the service.\
    \ Possible values are: Auto, Manual\n\nextended_properties:\n   Dictionary containing\
    \ name/value pairs of storage account properties. You can have a maximum of 50\
    \ extended property name/value pairs. The maximum length of the Name element is\
    \ 64 characters, only alphanumeric characters and underscores are valid in the\
    \ Name, and the name must start with a letter. The value has a maximum length\
    \ of 255 characters."
  syntax:
    content: change_deployment_configuration(self, service_name, deployment_name,
      configuration, treat_warnings_as_error=False, mode="Auto", extended_properties=None)
    parameters:
    - defaultValue: None
      id: self
    - defaultValue: Auto
      id: service_name
    - defaultValue: 'False'
      id: deployment_name
    - id: configuration
    - id: treat_warnings_as_error
    - id: mode
    - id: extended_properties
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.change_deployment_configuration
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_hosted_service_name_availability
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: check_hosted_service_name_availability
  source:
    id: check_hosted_service_name_availability
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 874
  summary: "Checks to see if the specified hosted service name is available, or if\
    \ it has already been taken.\nservice_name:\n   Name of the hosted service."
  syntax:
    content: check_hosted_service_name_availability(self, service_name)
    parameters:
    - id: self
    - id: service_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_hosted_service_name_availability
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_storage_account_name_availability
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: check_storage_account_name_availability
  source:
    id: check_storage_account_name_availability
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 293
  summary: "Checks to see if the specified storage account name is available, or if\
    \ it has already been taken.\nservice_name:\n   Name of the storage service account."
  syntax:
    content: check_storage_account_name_availability(self, service_name)
    parameters:
    - id: self
    - id: service_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_storage_account_name_availability
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_affinity_group
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: create_affinity_group
  source:
    id: create_affinity_group
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1064
  summary: "Creates a new affinity group for the specified subscription.\nname:\n\
    \   A name for the affinity group that is unique to the subscription.\n\nlabel:\n\
    \   A name for the affinity group. The name can be up to 100 characters in length.\n\
    \nlocation:\n   The data center location where the affinity group will be created.\
    \ To list available locations, use the list_location function.\n\ndescription:\n\
    \   A description for the affinity group. The description can be up to 1024 characters\
    \ in length."
  syntax:
    content: create_affinity_group(self, name, label, location, description=None)
    parameters:
    - id: self
    - id: name
    - defaultValue: None
      id: label
    - id: location
    - id: description
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_affinity_group
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_deployment
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: create_deployment
  source:
    id: create_deployment
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 483
  summary: "Uploads a new service package and creates a new deployment on staging\
    \ or production.\nservice_name:\n   Name of the hosted service.\n\ndeployment_slot:\n\
    \   The environment to which the hosted service is deployed. Valid values are:\
    \ staging, production\n\nname:\n   The name for the deployment. The deployment\
    \ name must be unique among other deployments for the hosted service.\n\npackage_url:\n\
    \   A URL that refers to the location of the service package in the Blob service.\
    \ The service package can be located either in a storage account beneath the same\
    \ subscription or a Shared Access Signature (SAS) URI from any storage account.\n\
    \nlabel:\n   A name for the hosted service. The name can be up to 100 characters\
    \ in length. It is recommended that the label be unique within the subscription.\
    \ The name can be used to identify the hosted service for your tracking purposes.\n\
    \nconfiguration:\n   The base-64 encoded service configuration file for the deployment.\n\
    \nstart_deployment:\n   Indicates whether to start the deployment immediately\
    \ after it is created. If false, the service model is still deployed to the virtual\
    \ machines but the code is not run immediately. Instead, the service is Suspended\
    \ until you call Update Deployment Status and set the status to Running, at which\
    \ time the service will be started. A deployed service still incurs charges, even\
    \ if it is suspended.\n\ntreat_warnings_as_error:\n   Indicates whether to treat\
    \ package validation warnings as errors. If set to true, the Created Deployment\
    \ operation fails if there are validation warnings on the service package.\n\n\
    extended_properties:\n   Dictionary containing name/value pairs of storage account\
    \ properties. You can have a maximum of 50 extended property name/value pairs.\
    \ The maximum length of the Name element is 64 characters, only alphanumeric characters\
    \ and underscores are valid in the Name, and the name must start with a letter.\
    \ The value has a maximum length of 255 characters."
  syntax:
    content: create_deployment(self, service_name, deployment_slot, name, package_url,
      label, configuration, start_deployment=False, treat_warnings_as_error=False,
      extended_properties=None)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_slot
    - defaultValue: None
      id: name
    - defaultValue: 'False'
      id: package_url
    - defaultValue: 'False'
      id: label
    - id: configuration
    - id: start_deployment
    - id: treat_warnings_as_error
    - id: extended_properties
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_deployment
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_hosted_service
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: create_hosted_service
  source:
    id: create_hosted_service
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 343
  summary: "Creates a new hosted service in Windows Azure.\nservice_name:\n   A name\
    \ for the hosted service that is unique within Windows Azure. This name is the\
    \ DNS prefix name and can be used to access the hosted service.\n\nlabel:\n  \
    \ A name for the hosted service. The name can be up to 100 characters in length.\
    \ The name can be used to identify the storage account for your tracking purposes.\n\
    \ndescription:\n   A description for the hosted service. The description can be\
    \ up to 1024 characters in length.\n\nlocation:\n   The location where the hosted\
    \ service will be created. You can specify either a location or affinity_group,\
    \ but not both.\n\naffinity_group:\n   The name of an existing affinity group\
    \ associated with this subscription. This name is a GUID and can be retrieved\
    \ by examining the name element of the response body returned by list_affinity_groups.\
    \ You can specify either a location or affinity_group, but not both.\n\nextended_properties:\n\
    \   Dictionary containing name/value pairs of storage account properties. You\
    \ can have a maximum of 50 extended property name/value pairs. The maximum length\
    \ of the Name element is 64 characters, only alphanumeric characters and underscores\
    \ are valid in the Name, and the name must start with a letter. The value has\
    \ a maximum length of 255 characters."
  syntax:
    content: create_hosted_service(self, service_name, label, description=None, location=None,
      affinity_group=None, extended_properties=None)
    parameters:
    - defaultValue: None
      id: self
    - defaultValue: None
      id: service_name
    - id: label
    - id: description
    - id: location
    - defaultValue: None
      id: affinity_group
    - defaultValue: None
      id: extended_properties
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_hosted_service
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_reserved_ip_address
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: create_reserved_ip_address
  source:
    id: create_reserved_ip_address
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1189
  summary: "Reserves an IPv4 address for the specified subscription.\nname:\n   Required.\
    \ Specifies the name for the reserved IP address.\n\nlabel:\n   Optional. Specifies\
    \ a label for the reserved IP address. The label can be up to 100 characters long\
    \ and can be used for your tracking purposes.\n\nlocation:\n   Required. Specifies\
    \ the location of the reserved IP address. This should be the same location that\
    \ is assigned to the cloud service containing the deployment that will use the\
    \ reserved IP address. To see the available locations, you can use list_locations."
  syntax:
    content: create_reserved_ip_address(self, name, label=None, location=None)
    parameters:
    - defaultValue: None
      id: self
    - id: name
    - id: label
    - defaultValue: None
      id: location
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_reserved_ip_address
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_storage_account
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: create_storage_account
  source:
    id: create_storage_account
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 172
  summary: "Creates a new storage account in Windows Azure.\nservice_name:\n   A name\
    \ for the storage account that is unique within Windows Azure. Storage account\
    \ names must be between 3 and 24 characters in length and use numbers and lower-case\
    \ letters only.\n\ndescription:\n   A description for the storage account. The\
    \ description may be up to 1024 characters in length.\n\nlabel:\n   A name for\
    \ the storage account. The name may be up to 100 characters in length. The name\
    \ can be used to identify the storage account for your tracking purposes.\n\n\
    affinity_group:\n   The name of an existing affinity group in the specified subscription.\
    \ You can specify either a location or affinity_group, but not both.\n\nlocation:\n\
    \   The location where the storage account is created. You can specify either\
    \ a location or affinity_group, but not both.\n\ngeo_replication_enabled:\n  \
    \ Deprecated. Replaced by the account_type parameter.\n\nextended_properties:\n\
    \   Dictionary containing name/value pairs of storage account properties. You\
    \ can have a maximum of 50 extended property name/value pairs. The maximum length\
    \ of the Name element is 64 characters, only alphanumeric characters and underscores\
    \ are valid in the Name, and the name must start with a letter. The value has\
    \ a maximum length of 255 characters.\n\naccount_type:\n   Specifies whether the\
    \ account supports locally-redundant storage, geo-redundant storage, zone-redundant\
    \ storage, or read access geo-redundant storage. Possible values are:\n\n   <SYSTEM\
    \ MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_storage_account:35:\
    \ (ERROR/3) Unexpected indentation.>\n\n      Standard_LRS, Standard_ZRS, Standard_GRS,\
    \ Standard_RAGRS"
  syntax:
    content: create_storage_account(self, service_name, description, label, affinity_group=None,
      location=None, geo_replication_enabled=None, extended_properties=None, account_type="Standard_GRS")
    parameters:
    - defaultValue: None
      id: self
    - defaultValue: None
      id: service_name
    - defaultValue: None
      id: description
    - id: label
    - id: affinity_group
    - id: location
    - id: geo_replication_enabled
    - defaultValue: Standard_GRS
      id: extended_properties
    - defaultValue: None
      id: account_type
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_storage_account
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_virtual_machine_deployment
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: create_virtual_machine_deployment
  source:
    id: create_virtual_machine_deployment
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1322
  summary: "Provisions a virtual machine based on the supplied configuration.\nservice_name:\n\
    \   Name of the hosted service.\n\ndeployment_name:\n   The name for the deployment.\
    \ The deployment name must be unique among other deployments for the hosted service.\n\
    \ndeployment_slot:\n   The environment to which the hosted service is deployed.\
    \ Valid values are: staging, production\n\nlabel:\n   Specifies an identifier\
    \ for the deployment. The label can be up to 100 characters long. The label can\
    \ be used for tracking purposes.\n\nrole_name:\n   The name of the role.\n\nsystem_config:\n\
    \   Contains the metadata required to provision a virtual machine from a Windows\
    \ or Linux OS image.  Use an instance of WindowsConfigurationSet or LinuxConfigurationSet.\n\
    \nos_virtual_hard_disk:\n   Contains the parameters Windows Azure uses to create\
    \ the operating system disk for the virtual machine. If you are creating a Virtual\
    \ Machine by using a VM Image, this parameter is not used.\n\nnetwork_config:\n\
    \   Encapsulates the metadata required to create the virtual network configuration\
    \ for a virtual machine. If you do not include a network configuration set you\
    \ will not be able to access the VM through VIPs over the internet. If your virtual\
    \ machine belongs to a virtual network you can not specify which subnet address\
    \ space it resides under. Use an instance of ConfigurationSet.\n\navailability_set_name:\n\
    \   Specifies the name of an availability set to which to add the virtual machine.\
    \ This value controls the virtual machine allocation in the Windows Azure environment.\
    \ Virtual machines specified in the same availability set are allocated to different\
    \ nodes to maximize availability.\n\ndata_virtual_hard_disks:\n   Contains the\
    \ parameters Windows Azure uses to create a data disk for a virtual machine.\n\
    \nrole_size:\n   The size of the virtual machine to allocate. The default value\
    \ is Small. Possible values are: ExtraSmall,Small,Medium,Large, ExtraLarge,A5,A6,A7,A8,A9,Basic_A0,Basic_A1,Basic_A2,Basic_A3,\
    \ Basic_A4,Standard_D1,Standard_D2,Standard_D3,Standard_D4, Standard_D11,Standard_D12,Standard_D13,Standard_D14,Standard_G1,\
    \ Standard_G2,Sandard_G3,Standard_G4,Standard_G5. The specified value must be\
    \ compatible with the disk selected in the OSVirtualHardDisk values.\n\nrole_type:\n\
    \   The type of the role for the virtual machine. The only supported value is\
    \ PersistentVMRole.\n\nvirtual_network_name:\n   Specifies the name of an existing\
    \ virtual network to which the deployment will belong.\n\nresource_extension_references:\n\
    \   Optional. Contains a collection of resource extensions that are to be installed\
    \ on the Virtual Machine. This element is used if provision_guest_agent is set\
    \ to True. Use an iterable of instances of ResourceExtensionReference.\n\nprovision_guest_agent:\n\
    \   Optional. Indicates whether the VM Agent is installed on the Virtual Machine.\
    \ To run a resource extension in a Virtual Machine, this service must be installed.\n\
    \nvm_image_name:\n   Optional. Specifies the name of the VM Image that is to be\
    \ used to create the Virtual Machine. If this is specified, the system_config\
    \ and network_config parameters are not used.\n\nmedia_location:\n   Optional.\
    \ Required if the Virtual Machine is being created from a published VM Image.\
    \ Specifies the location of the VHD file that is created when VMImageName specifies\
    \ a published VM Image.\n\ndns_servers:\n   Optional. List of DNS servers (use\
    \ DnsServer class) to associate with the Virtual Machine.\n\nreserved_ip_name:\n\
    \   Optional. Specifies the name of a reserved IP address that is to be assigned\
    \ to the deployment. You must run create_reserved_ip_address before you can assign\
    \ the address to the deployment using this element."
  syntax:
    content: create_virtual_machine_deployment(self, service_name, deployment_name,
      deployment_slot, label, role_name, system_config, os_virtual_hard_disk, network_config=None,
      availability_set_name=None, data_virtual_hard_disks=None, role_size=None, role_type="PersistentVMRole",
      virtual_network_name=None, resource_extension_references=None, provision_guest_agent=None,
      vm_image_name=None, media_location=None, dns_servers=None, reserved_ip_name=None)
    parameters:
    - defaultValue: None
      id: self
    - defaultValue: None
      id: service_name
    - defaultValue: PersistentVMRole
      id: deployment_name
    - defaultValue: None
      id: deployment_slot
    - defaultValue: None
      id: label
    - defaultValue: None
      id: role_name
    - defaultValue: None
      id: system_config
    - id: os_virtual_hard_disk
    - id: network_config
    - id: availability_set_name
    - id: data_virtual_hard_disks
    - id: role_size
    - id: role_type
    - id: virtual_network_name
    - id: resource_extension_references
    - defaultValue: None
      id: provision_guest_agent
    - defaultValue: None
      id: vm_image_name
    - defaultValue: None
      id: media_location
    - defaultValue: None
      id: dns_servers
    - defaultValue: None
      id: reserved_ip_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_virtual_machine_deployment
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: create_vm_image
  source:
    id: create_vm_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2024
  summary: "Creates a VM Image in the image repository that is associated with the\
    \ specified subscription using a specified set of virtual hard disks.\nvm_image:\n\
    \   An instance of VMImage class.\n<SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\\
    azure_servicemanagement_legacy-0.20.6-py3.5.egg\\azure\\servicemanagement\\servicemanagementservice.py:docstring\
    \ of azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image:6:\
    \ (WARNING/2) Definition list ends without a blank line; unexpected unindent.>\n\
    vm_image.name: Required. Specifies the name of the image. vm_image.label: Required.\
    \ Specifies an identifier for the image. vm_image.description: Optional. Specifies\
    \ the description of the image. vm_image.os_disk_configuration:\n<SYSTEM MESSAGE:\
    \ c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image:10:\
    \ (ERROR/3) Unexpected indentation.>\nRequired. Specifies configuration information\
    \ for the operating system disk that is associated with the image.\n<SYSTEM MESSAGE:\
    \ c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image:12:\
    \ (WARNING/2) Block quote ends without a blank line; unexpected unindent.>\nvm_image.os_disk_configuration.host_caching:\n\
    \   Optional. Specifies the caching behavior of the operating system disk. Possible\
    \ values are: None, ReadOnly, ReadWrite\n\nvm_image.os_disk_configuration.os_state:\n\
    \   Required. Specifies the state of the operating system in the image. Possible\
    \ values are: Generalized, Specialized A Virtual Machine that is fully configured\
    \ and running contains a Specialized operating system. A Virtual Machine on which\
    \ the Sysprep command has been run with the generalize option contains a Generalized\
    \ operating system.\n\nvm_image.os_disk_configuration.os:\n   Required. Specifies\
    \ the operating system type of the image.\n\nvm_image.os_disk_configuration.media_link:\n\
    \   Required. Specifies the location of the blob in Windows Azure storage. The\
    \ blob location belongs to a storage account in the subscription specified by\
    \ the <subscription-id> value in the operation call.\n\nvm_image.data_disk_configurations:\n\
    \   Optional. Specifies configuration information for the data disks that are\
    \ associated with the image. A VM Image might not have data disks associated with\
    \ it.\n\nvm_image.data_disk_configurations[].host_caching:\n   Optional. Specifies\
    \ the caching behavior of the data disk. Possible values are: None, ReadOnly,\
    \ ReadWrite\n\nvm_image.data_disk_configurations[].lun:\n   Optional if the lun\
    \ for the disk is 0. Specifies the Logical Unit Number (LUN) for the data disk.\n\
    \nvm_image.data_disk_configurations[].media_link:\n   Required. Specifies the\
    \ location of the blob in Windows Azure storage. The blob location belongs to\
    \ a storage account in the subscription specified by the <subscription-id> value\
    \ in the operation call.\n\nvm_image.data_disk_configurations[].logical_size_in_gb:\n\
    \   Required. Specifies the size, in GB, of the data disk.\n<SYSTEM MESSAGE: c:\\\
    python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image:46:\
    \ (WARNING/2) Definition list ends without a blank line; unexpected unindent.>\n\
    vm_image.language: Optional. Specifies the language of the image. vm_image.image_family:\n\
    <SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image:48:\
    \ (ERROR/3) Unexpected indentation.>\nOptional. Specifies a value that can be\
    \ used to group VM Images.\n<SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\\
    azure_servicemanagement_legacy-0.20.6-py3.5.egg\\azure\\servicemanagement\\servicemanagementservice.py:docstring\
    \ of azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image:49:\
    \ (WARNING/2) Block quote ends without a blank line; unexpected unindent.>\nvm_image.recommended_vm_size:\n\
    \   Optional. Specifies the size to use for the Virtual Machine that is created\
    \ from the VM Image.\n\nvm_image.eula:\n   Optional. Specifies the End User License\
    \ Agreement that is associated with the image. The value for this element is a\
    \ string, but it is recommended that the value be a URL that points to a EULA.\n\
    \nvm_image.icon_uri:\n   Optional. Specifies the URI to the icon that is displayed\
    \ for the image in the Management Portal.\n\nvm_image.small_icon_uri:\n   Optional.\
    \ Specifies the URI to the small icon that is displayed for the image in the Management\
    \ Portal.\n\nvm_image.privacy_uri:\n   Optional. Specifies the URI that points\
    \ to a document that contains the privacy policy related to the image.\n\nvm_image.published_date:\n\
    \   Optional. Specifies the date when the image was added to the image repository.\n\
    \nvm_image.show_in_gui:\n   Optional. Indicates whether the VM Images should be\
    \ listed in the portal."
  syntax:
    content: create_vm_image(self, vm_image)
    parameters:
    - id: self
    - id: vm_image
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_affinity_group
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_affinity_group
  source:
    id: delete_affinity_group
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1112
  summary: "Deletes an affinity group in the specified subscription.\naffinity_group_name:\n\
    \   The name of the affinity group."
  syntax:
    content: delete_affinity_group(self, affinity_group_name)
    parameters:
    - id: self
    - id: affinity_group_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_affinity_group
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_data_disk
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_data_disk
  source:
    id: delete_data_disk
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2508
  summary: "Removes the specified data disk from a virtual machine.\nservice_name:\n\
    \   The name of the service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nrole_name:\n   The name of the role.\n\nlun:\n   The Logical Unit Number (LUN)\
    \ for the disk.\n\ndelete_vhd:\n   Deletes the underlying vhd blob in Azure storage."
  syntax:
    content: delete_data_disk(self, service_name, deployment_name, role_name, lun,
      delete_vhd=False)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - defaultValue: 'False'
      id: role_name
    - id: lun
    - id: delete_vhd
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_data_disk
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_deployment
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_deployment
  source:
    id: delete_deployment
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 551
  summary: "Deletes the specified deployment.\nservice_name:\n   Name of the hosted\
    \ service.\n\ndeployment_name:\n   The name of the deployment."
  syntax:
    content: delete_deployment(self, service_name, deployment_name, delete_vhd=False)
    parameters:
    - id: self
    - defaultValue: 'False'
      id: service_name
    - id: deployment_name
    - id: delete_vhd
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_deployment
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_disk
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_disk
  source:
    id: delete_disk
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2606
  summary: "Deletes the specified data or operating system disk from your image repository.\n\
    disk_name:\n   The name of the disk to delete.\n\ndelete_vhd:\n   Deletes the\
    \ underlying vhd blob in Azure storage."
  syntax:
    content: delete_disk(self, disk_name, delete_vhd=False)
    parameters:
    - defaultValue: 'False'
      id: self
    - id: disk_name
    - id: delete_vhd
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_disk
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_dns_server
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_dns_server
  source:
    id: delete_dns_server
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1837
  summary: "Deletes a DNS server from a deployment.\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\ndns_server_name:\n\
    \   Name of the DNS server that you want to delete."
  syntax:
    content: delete_dns_server(self, service_name, deployment_name, dns_server_name)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: dns_server_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_dns_server
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_hosted_service
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_hosted_service
  source:
    id: delete_hosted_service
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 428
  summary: "Deletes the specified hosted service from Windows Azure.\nservice_name:\n\
    \   Name of the hosted service.\n\ncomplete:\n   True if all OS/data disks and\
    \ the source blobs for the disks should also be deleted from storage."
  syntax:
    content: delete_hosted_service(self, service_name, complete=False)
    parameters:
    - defaultValue: 'False'
      id: self
    - id: service_name
    - id: complete
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_hosted_service
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_management_certificate
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_management_certificate
  source:
    id: delete_management_certificate
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1025
  summary: "The Delete Management Certificate operation deletes a certificate from\
    \ the list of management certificates. Management certificates, which are also\
    \ known as subscription certificates, authenticate clients attempting to connect\
    \ to resources associated with your Windows Azure subscription.\nthumbprint:\n\
    \   The thumb print that uniquely identifies the management certificate."
  syntax:
    content: delete_management_certificate(self, thumbprint)
    parameters:
    - id: self
    - id: thumbprint
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_management_certificate
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_os_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_os_image
  source:
    id: delete_os_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2342
  summary: "Deletes the specified OS image from your image repository.\nimage_name:\n\
    \   The name of the image.\n\ndelete_vhd:\n   Deletes the underlying vhd blob\
    \ in Azure storage."
  syntax:
    content: delete_os_image(self, image_name, delete_vhd=False)
    parameters:
    - defaultValue: 'False'
      id: self
    - id: image_name
    - id: delete_vhd
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_os_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_reserved_ip_address
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_reserved_ip_address
  source:
    id: delete_reserved_ip_address
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1211
  summary: "Deletes a reserved IP address from the specified subscription.\nname:\n\
    \   Required. Name of the reserved IP address."
  syntax:
    content: delete_reserved_ip_address(self, name)
    parameters:
    - id: self
    - id: name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_reserved_ip_address
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_role
  source:
    id: delete_role
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1599
  summary: "Deletes the specified virtual machine.\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role.\n\ncomplete:\n   True if all OS/data disks and the source\
    \ blobs for the disks should also be deleted from storage."
  syntax:
    content: delete_role(self, service_name, deployment_name, role_name, complete=False)
    parameters:
    - id: self
    - id: service_name
    - defaultValue: 'False'
      id: deployment_name
    - id: role_name
    - id: complete
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role_instances
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_role_instances
  source:
    id: delete_role_instances
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 850
  summary: "Reinstalls the operating system on instances of web roles or worker roles\
    \ and initializes the storage resources that are used by them. If you do not want\
    \ to initialize storage resources, you can use reimage_role_instance.\nservice_name:\n\
    \   Name of the hosted service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nrole_instance_names:\n   List of role instance names."
  syntax:
    content: delete_role_instances(self, service_name, deployment_name, role_instance_names)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_instance_names
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role_instances
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_service_certificate
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_service_certificate
  source:
    id: delete_service_certificate
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 951
  summary: "Deletes a service certificate from the certificate store of a hosted service.\n\
    service_name:\n   Name of the hosted service.\n\nthumbalgorithm:\n   The algorithm\
    \ for the certificate's thumbprint.\n\nthumbprint:\n   The hexadecimal representation\
    \ of the thumbprint."
  syntax:
    content: delete_service_certificate(self, service_name, thumbalgorithm, thumbprint)
    parameters:
    - id: self
    - id: service_name
    - id: thumbalgorithm
    - id: thumbprint
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_service_certificate
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_storage_account
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_storage_account
  source:
    id: delete_storage_account
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 281
  summary: "Deletes the specified storage account from Windows Azure.\nservice_name:\n\
    \   Name of the storage service account."
  syntax:
    content: delete_storage_account(self, service_name)
    parameters:
    - id: self
    - id: service_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_storage_account
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_vm_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: delete_vm_image
  source:
    id: delete_vm_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2111
  summary: "Deletes the specified VM Image from the image repository that is associated\
    \ with the specified subscription.\nvm_image_name:\n   The name of the image.\n\
    \ndelete_vhd:\n   Deletes the underlying vhd blob in Azure storage."
  syntax:
    content: delete_vm_image(self, vm_image_name, delete_vhd=False)
    parameters:
    - defaultValue: 'False'
      id: self
    - id: vm_image_name
    - id: delete_vhd
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_vm_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.disassociate_reserved_ip_address
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: disassociate_reserved_ip_address
  source:
    id: disassociate_reserved_ip_address
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1254
  summary: "Disassociate an existing reservedIP from the given deployment.\nname:\n\
    \   Required. Name of the reserved IP address.\n\nservice_name:\n   Required.\
    \ Name of the hosted service.\n\ndeployment_name:\n   Required. Name of the deployment.\n\
    \nvirtual_ip_name:\n   Optional. Name of the VirtualIP in case of multi Vip tenant.\
    \ If this value is not specified default virtualIP is used for this operation."
  syntax:
    content: disassociate_reserved_ip_address(self, name, service_name, deployment_name,
      virtual_ip_name=None)
    parameters:
    - id: self
    - id: name
    - defaultValue: None
      id: service_name
    - id: deployment_name
    - id: virtual_ip_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.disassociate_reserved_ip_address
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_affinity_group_properties
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_affinity_group_properties
  source:
    id: get_affinity_group_properties
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1050
  summary: "Returns the system properties associated with the specified affinity group.\n\
    affinity_group_name:\n   The name of the affinity group."
  syntax:
    content: get_affinity_group_properties(self, affinity_group_name)
    parameters:
    - id: self
    - id: affinity_group_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_affinity_group_properties
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_data_disk
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_data_disk
  source:
    id: get_data_disk
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2358
  summary: "Retrieves the specified data disk from a virtual machine.\nservice_name:\n\
    \   The name of the service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nrole_name:\n   The name of the role.\n\nlun:\n   The Logical Unit Number (LUN)\
    \ for the disk."
  syntax:
    content: get_data_disk(self, service_name, deployment_name, role_name, lun)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_name
    - id: lun
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_data_disk
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_name
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_deployment_by_name
  source:
    id: get_deployment_by_name
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 466
  summary: "Returns configuration information, status, and system properties for a\
    \ deployment.\nservice_name:\n   Name of the hosted service.\n\ndeployment_name:\n\
    \   The name of the deployment."
  syntax:
    content: get_deployment_by_name(self, service_name, deployment_name)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_name
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_slot
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_deployment_by_slot
  source:
    id: get_deployment_by_slot
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 448
  summary: "Returns configuration information, status, and system properties for a\
    \ deployment.\nservice_name:\n   Name of the hosted service.\n\ndeployment_slot:\n\
    \   The environment to which the hosted service is deployed. Valid values are:\
    \ staging, production"
  syntax:
    content: get_deployment_by_slot(self, service_name, deployment_slot)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_slot
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_slot
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_disk
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_disk
  source:
    id: get_disk
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2540
  summary: Retrieves a disk from your image repository.
  syntax:
    content: get_disk(self, disk_name)
    parameters:
    - id: self
    - id: disk_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_disk
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_hosted_service_properties
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_hosted_service_properties
  source:
    id: get_hosted_service_properties
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 321
  summary: "Retrieves system properties for the specified hosted service. These properties\
    \ include the service name and service type; the name of the affinity group to\
    \ which the service belongs, or its location if it is not part of an affinity\
    \ group; and optionally, information on the service's deployments.\nservice_name:\n\
    \   Name of the hosted service.\n\nembed_detail:\n   When True, the management\
    \ service returns properties for all deployments of the service, as well as for\
    \ the service itself."
  syntax:
    content: get_hosted_service_properties(self, service_name, embed_detail=False)
    parameters:
    - defaultValue: 'False'
      id: self
    - id: service_name
    - id: embed_detail
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_hosted_service_properties
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_management_certificate
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_management_certificate
  source:
    id: get_management_certificate
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 985
  summary: "The Get Management Certificate operation retrieves information about the\
    \ management certificate with the specified thumbprint. Management certificates,\
    \ which are also known as subscription certificates, authenticate clients attempting\
    \ to connect to resources associated with your Windows Azure subscription.\nthumbprint:\n\
    \   The thumbprint value of the certificate."
  syntax:
    content: get_management_certificate(self, thumbprint)
    parameters:
    - id: self
    - id: thumbprint
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_management_certificate
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_os_image
  source:
    id: get_os_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2213
  summary: Retrieves an OS image from the image repository.
  syntax:
    content: get_os_image(self, image_name)
    parameters:
    - id: self
    - id: image_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image_details
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_os_image_details
  source:
    id: get_os_image_details
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2220
  summary: Retrieves an OS image from the image repository, including replication
    progress.
  syntax:
    content: get_os_image_details(self, image_name)
    parameters:
    - id: self
    - id: image_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image_details
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_reserved_ip_address
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_reserved_ip_address
  source:
    id: get_reserved_ip_address
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1286
  summary: "Retrieves information about the specified reserved IP address.\nname:\n\
    \   Required. Name of the reserved IP address."
  syntax:
    content: get_reserved_ip_address(self, name)
    parameters:
    - id: self
    - id: name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_reserved_ip_address
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_role
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_role
  source:
    id: get_role
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1304
  summary: "Retrieves the specified virtual machine.\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role."
  syntax:
    content: get_role(self, service_name, deployment_name, role_name)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_role
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_service_certificate
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_service_certificate
  source:
    id: get_service_certificate
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 904
  summary: "Returns the public data for the specified X.509 certificate associated\
    \ with a hosted service.\nservice_name:\n   Name of the hosted service.\n\nthumbalgorithm:\n\
    \   The algorithm for the certificate's thumbprint.\n\nthumbprint:\n   The hexadecimal\
    \ representation of the thumbprint."
  syntax:
    content: get_service_certificate(self, service_name, thumbalgorithm, thumbprint)
    parameters:
    - id: self
    - id: service_name
    - id: thumbalgorithm
    - id: thumbprint
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_service_certificate
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_keys
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_storage_account_keys
  source:
    id: get_storage_account_keys
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 139
  summary: "Returns the primary and secondary access keys for the specified storage\
    \ account.\nservice_name:\n   Name of the storage service account."
  syntax:
    content: get_storage_account_keys(self, service_name)
    parameters:
    - id: self
    - id: service_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_keys
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_properties
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_storage_account_properties
  source:
    id: get_storage_account_properties
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 128
  summary: "Returns system properties for the specified storage account.\nservice_name:\n\
    \   Name of the storage service account."
  syntax:
    content: get_storage_account_properties(self, service_name)
    parameters:
    - id: self
    - id: service_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_properties
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_subscription
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: get_subscription
  source:
    id: get_subscription
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1154
  summary: Returns account and resource allocation information on the specified subscription.
  syntax:
    content: get_subscription(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_subscription
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_affinity_groups
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_affinity_groups
  source:
    id: list_affinity_groups
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1042
  summary: Lists the affinity groups associated with the specified subscription.
  syntax:
    content: list_affinity_groups(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_affinity_groups
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_disks
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_disks
  source:
    id: list_disks
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2533
  summary: Retrieves a list of the disks in your image repository.
  syntax:
    content: list_disks(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_disks
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_hosted_services
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_hosted_services
  source:
    id: list_hosted_services
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 309
  summary: 'Lists the hosted services available under the current subscription.

    Note that you will receive a list of HostedService instances, without all details
    inside. For instance, deployments will be None. If you want deployments information
    for a specific host service, you have to call get_hosted_service_properties with
    embed_detail=True.'
  syntax:
    content: list_hosted_services(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_hosted_services
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_locations
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_locations
  source:
    id: list_locations
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1125
  summary: Lists all of the data center locations that are valid for your subscription.
  syntax:
    content: list_locations(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_locations
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_management_certificates
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_management_certificates
  source:
    id: list_management_certificates
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 974
  summary: The List Management Certificates operation lists and returns basic information
    about all of the management certificates associated with the specified subscription.
    Management certificates, which are also known as subscription certificates, authenticate
    clients attempting to connect to resources associated with your Windows Azure
    subscription.
  syntax:
    content: list_management_certificates(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_management_certificates
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_system_families
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_operating_system_families
  source:
    id: list_operating_system_families
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1144
  summary: Lists the guest operating system families available in Windows Azure, and
    also lists the operating system versions available for each family.
  syntax:
    content: list_operating_system_families(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_system_families
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_systems
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_operating_systems
  source:
    id: list_operating_systems
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1135
  summary: Lists the versions of the guest operating system that are currently available
    in Windows Azure.
  syntax:
    content: list_operating_systems(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_systems
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_os_images
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_os_images
  source:
    id: list_os_images
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2206
  summary: Retrieves a list of the OS images from the image repository.
  syntax:
    content: list_os_images(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_os_images
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_reserved_ip_addresses
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_reserved_ip_addresses
  source:
    id: list_reserved_ip_addresses
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1296
  summary: Lists the IP addresses that have been reserved for the specified subscription.
  syntax:
    content: list_reserved_ip_addresses(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_reserved_ip_addresses
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extension_versions
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_resource_extension_versions
  source:
    id: list_resource_extension_versions
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1865
  summary: "Lists the versions of a resource extension that are available to add to\
    \ a Virtual Machine.\npublisher_name:\n   Name of the resource extension publisher.\n\
    \nextension_name:\n   Name of the resource extension."
  syntax:
    content: list_resource_extension_versions(self, publisher_name, extension_name)
    parameters:
    - id: self
    - id: publisher_name
    - id: extension_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extension_versions
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extensions
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_resource_extensions
  source:
    id: list_resource_extensions
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1857
  summary: Lists the resource extensions that are available to add to a Virtual Machine.
  syntax:
    content: list_resource_extensions(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extensions
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_role_sizes
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_role_sizes
  source:
    id: list_role_sizes
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 102
  summary: Lists the role sizes that are available under the specified subscription.
  syntax:
    content: list_role_sizes(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_role_sizes
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_service_certificates
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_service_certificates
  source:
    id: list_service_certificates
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 890
  summary: "Lists all of the service certificates associated with the specified hosted\
    \ service.\nservice_name:\n   Name of the hosted service."
  syntax:
    content: list_service_certificates(self, service_name)
    parameters:
    - id: self
    - id: service_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_service_certificates
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_storage_accounts
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_storage_accounts
  source:
    id: list_storage_accounts
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 121
  summary: Lists the storage accounts available under the current subscription.
  syntax:
    content: list_storage_accounts(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_storage_accounts
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscription_operations
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_subscription_operations
  source:
    id: list_subscription_operations
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1163
  summary: 'List subscription operations.

    start_time: Required. An ISO8601 date. end_time: Required. An ISO8601 date. object_id_filter:
    Optional. Returns subscription operations only for the specified object type and
    object ID operation_result_filter: Optional. Returns subscription operations only
    for the specified result status, either Succeeded, Failed, or InProgress. continuation_token:
    Optional. More information at: [https://msdn.microsoft.com/en-us/library/azure/gg715318.aspx](https://msdn.microsoft.com/en-us/library/azure/gg715318.aspx)'
  syntax:
    content: list_subscription_operations(self, start_time=None, end_time=None, object_id_filter=None,
      operation_result_filter=None, continuation_token=None)
    parameters:
    - id: self
    - defaultValue: None
      id: start_time
    - defaultValue: None
      id: end_time
    - defaultValue: None
      id: object_id_filter
    - defaultValue: None
      id: operation_result_filter
    - defaultValue: None
      id: continuation_token
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscription_operations
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscriptions
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_subscriptions
  source:
    id: list_subscriptions
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 110
  summary: 'Returns a list of subscriptions that you can access.

    You must make sure that the request that is made to the management service is
    secure using an Active Directory access token.'
  syntax:
    content: list_subscriptions(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscriptions
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_virtual_network_sites
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_virtual_network_sites
  source:
    id: list_virtual_network_sites
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2623
  summary: Retrieves a list of the virtual networks.
  syntax:
    content: list_virtual_network_sites(self)
    parameters:
    - id: self
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_virtual_network_sites
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_vm_images
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: list_vm_images
  source:
    id: list_vm_images
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2127
  summary: Retrieves a list of the VM Images from the image repository that is associated
    with the specified subscription.
  syntax:
    content: list_vm_images(self, location=None, publisher=None, category=None)
    parameters:
    - id: self
    - defaultValue: None
      id: location
    - defaultValue: None
      id: publisher
    - defaultValue: None
      id: category
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_vm_images
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reboot_role_instance
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: reboot_role_instance
  source:
    id: reboot_role_instance
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 778
  summary: "Requests a reboot of a role instance that is running in a deployment.\n\
    service_name:\n   Name of the hosted service.\n\ndeployment_name:\n   The name\
    \ of the deployment.\n\nrole_instance_name:\n   The name of the role instance."
  syntax:
    content: reboot_role_instance(self, service_name, deployment_name, role_instance_name)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_instance_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reboot_role_instance
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rebuild_role_instance
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: rebuild_role_instance
  source:
    id: rebuild_role_instance
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 824
  summary: "Reinstalls the operating system on instances of web roles or worker roles\
    \ and initializes the storage resources that are used by them. If you do not want\
    \ to initialize storage resources, you can use reimage_role_instance.\nservice_name:\n\
    \   Name of the hosted service.\n\ndeployment_name:\n   The name of the deployment.\n\
    \nrole_instance_name:\n   The name of the role instance."
  syntax:
    content: rebuild_role_instance(self, service_name, deployment_name, role_instance_name)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_instance_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rebuild_role_instance
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.regenerate_storage_account_keys
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: regenerate_storage_account_keys
  source:
    id: regenerate_storage_account_keys
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 152
  summary: "Regenerates the primary or secondary access key for the specified storage\
    \ account.\nservice_name:\n   Name of the storage service account.\n\nkey_type:\n\
    \   Specifies which key to regenerate. Valid values are: Primary, Secondary"
  syntax:
    content: regenerate_storage_account_keys(self, service_name, key_type)
    parameters:
    - id: self
    - id: service_name
    - id: key_type
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.regenerate_storage_account_keys
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reimage_role_instance
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: reimage_role_instance
  source:
    id: reimage_role_instance
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 801
  summary: "Requests a reimage of a role instance that is running in a deployment.\n\
    service_name:\n   Name of the hosted service.\n\ndeployment_name:\n   The name\
    \ of the deployment.\n\nrole_instance_name:\n   The name of the role instance."
  syntax:
    content: reimage_role_instance(self, service_name, deployment_name, role_instance_name)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_instance_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reimage_role_instance
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.replicate_vm_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: replicate_vm_image
  source:
    id: replicate_vm_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1880
  summary: "Replicate a VM image to multiple target locations. This operation is only\
    \ for publishers. You have to be registered as image publisher with Microsoft\
    \ Azure to be able to call this.\nvm_image_name:\n   Specifies the name of the\
    \ VM Image that is to be used for replication\n\nregions:\n   Specified a list\
    \ of regions to replicate the image to Note: The regions in the request body are\
    \ not additive. If a VM Image has already been replicated to Regions A, B, and\
    \ C, and a request is made to replicate to Regions A and D, the VM Image will\
    \ remain in Region A, will be replicated in Region D, and will be unreplicated\
    \ from Regions B and C\n\noffer:\n   Specifies the publisher defined name of the\
    \ offer. The allowed characters are uppercase or lowercase letters, digit, hypen(-),\
    \ period (.).The maximum allowed length is 64 characters.\n\nsku:\n   Specifies\
    \ the publisher defined name of the Sku. The allowed characters are uppercase\
    \ or lowercase letters, digit, hypen(-), period (.). The maximum allowed length\
    \ is 64 characters.\n\nversion:\n   Specifies the publisher defined version of\
    \ the image. The allowed characters are digit and period. Format: <MajorVersion>.<MinorVersion>.<Patch>\
    \ Example: '1.0.0' or '1.1.0' The 3 version number to follow standard of most\
    \ of the RPs. See [http://semver.org](http://semver.org)"
  syntax:
    content: replicate_vm_image(self, vm_image_name, regions, offer, sku, version)
    parameters:
    - id: self
    - id: vm_image_name
    - id: regions
    - id: offer
    - id: sku
    - id: version
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.replicate_vm_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.restart_role
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: restart_role
  source:
    id: restart_role
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1704
  summary: "Restarts the specified virtual machine.\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role."
  syntax:
    content: restart_role(self, service_name, deployment_name, role_name)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.restart_role
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rollback_update_or_upgrade
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: rollback_update_or_upgrade
  source:
    id: rollback_update_or_upgrade
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 745
  summary: "Cancels an in progress configuration change (update) or upgrade and returns\
    \ the deployment to its state before the upgrade or configuration change was started.\n\
    service_name:\n   Name of the hosted service.\n\ndeployment_name:\n   The name\
    \ of the deployment.\n\nmode:\n   Specifies whether the rollback should proceed\
    \ automatically.\n      auto - The rollback proceeds without further user input.\
    \ manual - You must call the Walk Upgrade Domain operation to\n\n      <SYSTEM\
    \ MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.rollback_update_or_upgrade:13:\
    \ (ERROR/3) Unexpected indentation.>\n\n         apply the rollback to each upgrade\
    \ domain.\n\nforce:\n   Specifies whether the rollback should proceed even when\
    \ it will cause local data to be lost from some role instances. True if the rollback\
    \ should proceed; otherwise false if the rollback should fail."
  syntax:
    content: rollback_update_or_upgrade(self, service_name, deployment_name, mode,
      force)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: mode
    - id: force
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rollback_update_or_upgrade
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.share_vm_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: share_vm_image
  source:
    id: share_vm_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1950
  summary: "Share an already replicated OS image. This operation is only for publishers.\
    \ You have to be registered as image publisher with Windows Azure to be able to\
    \ call this.\nvm_image_name:\n   The name of the virtual machine image to share\n\
    \npermission:\n   The sharing permission: public, msdn, or private"
  syntax:
    content: share_vm_image(self, vm_image_name, permission)
    parameters:
    - id: self
    - id: vm_image_name
    - id: permission
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.share_vm_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_role
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: shutdown_role
  source:
    id: shutdown_role
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1725
  summary: "Shuts down the specified virtual machine.\nservice_name:\n   The name\
    \ of the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role.\n\npost_shutdown_action:\n   Specifies how the Virtual\
    \ Machine should be shut down. Values are:\n      Stopped\n         Shuts down\
    \ the Virtual Machine but retains the compute resources. You will continue to\
    \ be billed for the resources that the stopped machine uses.\n\n      StoppedDeallocated\n\
    \         Shuts down the Virtual Machine and releases the compute resources. You\
    \ are not billed for the compute resources that this Virtual Machine uses. If\
    \ a static Virtual Network IP address is assigned to the Virtual Machine, it is\
    \ reserved."
  syntax:
    content: shutdown_role(self, service_name, deployment_name, role_name, post_shutdown_action="Stopped")
    parameters:
    - id: self
    - id: service_name
    - defaultValue: Stopped
      id: deployment_name
    - id: role_name
    - id: post_shutdown_action
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_role
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_roles
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: shutdown_roles
  source:
    id: shutdown_roles
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1758
  summary: "Shuts down the specified virtual machines.\nservice_name:\n   The name\
    \ of the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_names:\n\
    \   The names of the roles, as an enumerable of strings.\n\npost_shutdown_action:\n\
    \   Specifies how the Virtual Machine should be shut down. Values are:\n     \
    \ Stopped\n         Shuts down the Virtual Machine but retains the compute resources.\
    \ You will continue to be billed for the resources that the stopped machine uses.\n\
    \n      StoppedDeallocated\n         Shuts down the Virtual Machine and releases\
    \ the compute resources. You are not billed for the compute resources that this\
    \ Virtual Machine uses. If a static Virtual Network IP address is assigned to\
    \ the Virtual Machine, it is reserved."
  syntax:
    content: shutdown_roles(self, service_name, deployment_name, role_names, post_shutdown_action="Stopped")
    parameters:
    - id: self
    - id: service_name
    - defaultValue: Stopped
      id: deployment_name
    - id: role_names
    - id: post_shutdown_action
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_roles
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_role
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: start_role
  source:
    id: start_role
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1665
  summary: "Starts the specified virtual machine.\nservice_name:\n   The name of the\
    \ service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role."
  syntax:
    content: start_role(self, service_name, deployment_name, role_name)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_role
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_roles
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: start_roles
  source:
    id: start_roles
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1685
  summary: "Starts the specified virtual machines.\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_names:\n\
    \   The names of the roles, as an enumerable of strings."
  syntax:
    content: start_roles(self, service_name, deployment_name, role_names)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: role_names
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_roles
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.swap_deployment
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: swap_deployment
  source:
    id: swap_deployment
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 569
  summary: "Initiates a virtual IP swap between the staging and production deployment\
    \ environments for a service. If the service is currently running in the staging\
    \ environment, it will be swapped to the production environment. If it is running\
    \ in the production environment, it will be swapped to staging.\nservice_name:\n\
    \   Name of the hosted service.\n\nproduction:\n   The name of the production\
    \ deployment.\n\nsource_deployment:\n   The name of the source deployment."
  syntax:
    content: swap_deployment(self, service_name, production, source_deployment)
    parameters:
    - id: self
    - id: service_name
    - id: production
    - id: source_deployment
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.swap_deployment
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.unreplicate_vm_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: unreplicate_vm_image
  source:
    id: unreplicate_vm_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1929
  summary: "Unreplicate a VM image from all regions This operation is only for publishers.\
    \ You have to be registered as image publisher with Microsoft Azure to be able\
    \ to call this\nvm_image_name:\n   Specifies the name of the VM Image that is\
    \ to be used for unreplication. The VM Image Name should be the user VM Image,\
    \ not the published name of the VM Image."
  syntax:
    content: unreplicate_vm_image(self, vm_image_name)
    parameters:
    - id: self
    - id: vm_image_name
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.unreplicate_vm_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_affinity_group
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_affinity_group
  source:
    id: update_affinity_group
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1090
  summary: "Updates the label and/or the description for an affinity group for the\
    \ specified subscription.\naffinity_group_name:\n   The name of the affinity group.\n\
    \nlabel:\n   A name for the affinity group. The name can be up to 100 characters\
    \ in length.\n\ndescription:\n   A description for the affinity group. The description\
    \ can be up to 1024 characters in length."
  syntax:
    content: update_affinity_group(self, affinity_group_name, label, description=None)
    parameters:
    - id: self
    - defaultValue: None
      id: affinity_group_name
    - id: label
    - id: description
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_affinity_group
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_data_disk
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_data_disk
  source:
    id: update_data_disk
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2442
  summary: "Updates the specified data disk attached to the specified virtual machine.\n\
    service_name:\n   The name of the service.\n\ndeployment_name:\n   The name of\
    \ the deployment.\n\nrole_name:\n   The name of the role.\n\nlun:\n   Specifies\
    \ the Logical Unit Number (LUN) for the disk. The LUN specifies the slot in which\
    \ the data drive appears when mounted for usage by the virtual machine. Valid\
    \ LUN values are 0 through 15.\n\nhost_caching:\n   Specifies the platform caching\
    \ behavior of data disk blob for read/write efficiency. The default vault is ReadOnly.\
    \ Possible values are: None, ReadOnly, ReadWrite\n\nmedia_link:\n   Specifies\
    \ the location of the blob in Windows Azure blob store where the media for the\
    \ disk is located. The blob location must belong to the storage account in the\
    \ subscription specified by the <subscription-id> value in the operation call.\
    \ Example: [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nupdated_lun:\n   Specifies the Logical Unit Number (LUN) for the disk. The LUN\
    \ specifies the slot in which the data drive appears when mounted for usage by\
    \ the virtual machine. Valid LUN values are 0 through 15.\n\ndisk_label:\n   Specifies\
    \ the description of the data disk. When you attach a disk, either by directly\
    \ referencing a media using the MediaLink element or specifying the target disk\
    \ size, you can use the DiskLabel element to customize the name property of the\
    \ target data disk.\n\ndisk_name:\n   Specifies the name of the disk. Windows\
    \ Azure uses the specified disk to create the data disk for the machine and populates\
    \ this field with the disk name.\n\nlogical_disk_size_in_gb:\n   Specifies the\
    \ size, in GB, of an empty disk to be attached to the role. The disk can be created\
    \ as part of disk attach or create VM role call by specifying the value for this\
    \ property. Windows Azure creates the empty disk based on size preference and\
    \ attaches the newly created disk to the Role."
  syntax:
    content: update_data_disk(self, service_name, deployment_name, role_name, lun,
      host_caching=None, media_link=None, updated_lun=None, disk_label=None, disk_name=None,
      logical_disk_size_in_gb=None)
    parameters:
    - defaultValue: None
      id: self
    - defaultValue: None
      id: service_name
    - defaultValue: None
      id: deployment_name
    - defaultValue: None
      id: role_name
    - id: lun
    - id: host_caching
    - id: media_link
    - id: updated_lun
    - id: disk_label
    - defaultValue: None
      id: disk_name
    - defaultValue: None
      id: logical_disk_size_in_gb
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_data_disk
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_deployment_status
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_deployment_status
  source:
    id: update_deployment_status
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 635
  summary: "Initiates a change in deployment status.\nservice_name:\n   Name of the\
    \ hosted service.\n\ndeployment_name:\n   The name of the deployment.\n\nstatus:\n\
    \   The change to initiate to the deployment status. Possible values include:\n\
    \n   <SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_deployment_status:10:\
    \ (ERROR/3) Unexpected indentation.>\n\n      Running, Suspended"
  syntax:
    content: update_deployment_status(self, service_name, deployment_name, status)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: status
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_deployment_status
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_disk
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_disk
  source:
    id: update_disk
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2579
  summary: "Updates an existing disk in your image repository.\ndisk_name:\n   The\
    \ name of the disk to update.\n\nhas_operating_system:\n   Deprecated.\n\nlabel:\n\
    \   Specifies the description of the disk.\n\nmedia_link:\n   Deprecated.\n\n\
    name:\n   Deprecated.\n\nos:\n   Deprecated."
  syntax:
    content: update_disk(self, disk_name, has_operating_system=None, label=None, media_link=None,
      name=None, os=None)
    parameters:
    - defaultValue: None
      id: self
    - id: disk_name
    - id: has_operating_system
    - defaultValue: None
      id: label
    - defaultValue: None
      id: media_link
    - defaultValue: None
      id: name
    - defaultValue: None
      id: os
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_disk
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_dns_server
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_dns_server
  source:
    id: update_dns_server
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1813
  summary: "Updates the ip address of a DNS server.\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\ndns_server_name:\n\
    \   Specifies the name of the DNS server.\n\naddress:\n   Specifies the IP address\
    \ of the DNS server."
  syntax:
    content: update_dns_server(self, service_name, deployment_name, dns_server_name,
      address)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: dns_server_name
    - id: address
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_dns_server
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_hosted_service
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_hosted_service
  source:
    id: update_hosted_service
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 395
  summary: "Updates the label and/or the description for a hosted service in Windows\
    \ Azure.\nservice_name:\n   Name of the hosted service.\n\nlabel:\n   A name for\
    \ the hosted service. The name may be up to 100 characters in length. You must\
    \ specify a value for either Label or Description, or for both. It is recommended\
    \ that the label be unique within the subscription. The name can be used identify\
    \ the hosted service for your tracking purposes.\n\ndescription:\n   A description\
    \ for the hosted service. The description may be up to 1024 characters in length.\
    \ You must specify a value for either Label or Description, or for both.\n\nextended_properties:\n\
    \   Dictionary containing name/value pairs of storage account properties. You\
    \ can have a maximum of 50 extended property name/value pairs. The maximum length\
    \ of the Name element is 64 characters, only alphanumeric characters and underscores\
    \ are valid in the Name, and the name must start with a letter. The value has\
    \ a maximum length of 255 characters."
  syntax:
    content: update_hosted_service(self, service_name, label=None, description=None,
      extended_properties=None)
    parameters:
    - defaultValue: None
      id: self
    - id: service_name
    - id: label
    - defaultValue: None
      id: description
    - defaultValue: None
      id: extended_properties
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_hosted_service
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_os_image
  source:
    id: update_os_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2257
  summary: "Updates an OS image that in your image repository.\nimage_name:\n   The\
    \ name of the image to update.\n\nlabel:\n   Specifies the friendly name of the\
    \ image to be updated. You cannot use this operation to update images provided\
    \ by the Windows Azure platform.\n\nmedia_link:\n   Specifies the location of\
    \ the blob in Windows Azure blob store where the media for the image is located.\
    \ The blob location must belong to a storage account in the subscription specified\
    \ by the <subscription-id> value in the operation call. Example: [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nname:\n   Specifies a name for the OS image that Windows Azure uses to identify\
    \ the image when creating one or more VM Roles.\n\nos:\n   The operating system\
    \ type of the OS image. Possible values are: Linux, Windows"
  syntax:
    content: update_os_image(self, image_name, label, media_link, name, os)
    parameters:
    - id: self
    - id: image_name
    - id: label
    - id: media_link
    - id: name
    - id: os
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_os_image_from_image_reference
  source:
    id: update_os_image_from_image_reference
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2290
  summary: "Updates metadata elements from a given OS image reference.\nimage_name:\n\
    \   The name of the image to update.\n\nos_image:\n   An instance of OSImage class.\n\
    <SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference:7:\
    \ (WARNING/2) Definition list ends without a blank line; unexpected unindent.>\n\
    os_image.label: Optional. Specifies an identifier for the image. os_image.description:\
    \ Optional. Specifies the description of the image. os_image.language: Optional.\
    \ Specifies the language of the image. os_image.image_family:\n<SYSTEM MESSAGE:\
    \ c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference:11:\
    \ (ERROR/3) Unexpected indentation.>\nOptional. Specifies a value that can be\
    \ used to group VM Images.\n<SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\\
    azure_servicemanagement_legacy-0.20.6-py3.5.egg\\azure\\servicemanagement\\servicemanagementservice.py:docstring\
    \ of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference:12:\
    \ (WARNING/2) Block quote ends without a blank line; unexpected unindent.>\nos_image.recommended_vm_size:\n\
    \   Optional. Specifies the size to use for the Virtual Machine that is created\
    \ from the VM Image.\n\nos_image.eula:\n   Optional. Specifies the End User License\
    \ Agreement that is associated with the image. The value for this element is a\
    \ string, but it is recommended that the value be a URL that points to a EULA.\n\
    \nos_image.icon_uri:\n   Optional. Specifies the URI to the icon that is displayed\
    \ for the image in the Management Portal.\n\nos_image.small_icon_uri:\n   Optional.\
    \ Specifies the URI to the small icon that is displayed for the image in the Management\
    \ Portal.\n\nos_image.privacy_uri:\n   Optional. Specifies the URI that points\
    \ to a document that contains the privacy policy related to the image.\n\nos_image.published_date:\n\
    \   Optional. Specifies the date when the image was added to the image repository.\n\
    \nos.image.media_link:\n   Required: Specifies the location of the blob in Windows\
    \ Azure blob store where the media for the image is located. The blob location\
    \ must belong to a storage account in the subscription specified by the <subscription-id>\
    \ value in the operation call. Example: [http://example.blob.core.windows.net/disks/mydisk.vhd](http://example.blob.core.windows.net/disks/mydisk.vhd)\n\
    \nos_image.name:\n   Specifies a name for the OS image that Windows Azure uses\
    \ to identify the image when creating one or more VM Roles.\n\nos_image.os:\n\
    \   The operating system type of the OS image. Possible values are: Linux, Windows"
  syntax:
    content: update_os_image_from_image_reference(self, image_name, os_image)
    parameters:
    - id: self
    - id: image_name
    - id: os_image
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_role
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_role
  source:
    id: update_role
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 1531
  summary: "Updates the specified virtual machine.\nservice_name:\n   The name of\
    \ the service.\n\ndeployment_name:\n   The name of the deployment.\n\nrole_name:\n\
    \   The name of the role.\n\nos_virtual_hard_disk:\n   Contains the parameters\
    \ Windows Azure uses to create the operating system disk for the virtual machine.\n\
    \nnetwork_config:\n   Encapsulates the metadata required to create the virtual\
    \ network configuration for a virtual machine. If you do not include a network\
    \ configuration set you will not be able to access the VM through VIPs over the\
    \ internet. If your virtual machine belongs to a virtual network you can not specify\
    \ which subnet address space it resides under.\n\navailability_set_name:\n   Specifies\
    \ the name of an availability set to which to add the virtual machine. This value\
    \ controls the virtual machine allocation in the Windows Azure environment. Virtual\
    \ machines specified in the same availability set are allocated to different nodes\
    \ to maximize availability.\n\ndata_virtual_hard_disks:\n   Contains the parameters\
    \ Windows Azure uses to create a data disk for a virtual machine.\n\nrole_size:\n\
    \   The size of the virtual machine to allocate. The default value is Small. Possible\
    \ values are: ExtraSmall, Small, Medium, Large, ExtraLarge. The specified value\
    \ must be compatible with the disk selected in the OSVirtualHardDisk values.\n\
    \nrole_type:\n   The type of the role for the virtual machine. The only supported\
    \ value is PersistentVMRole.\n\nresource_extension_references:\n   Optional. Contains\
    \ a collection of resource extensions that are to be installed on the Virtual\
    \ Machine. This element is used if provision_guest_agent is set to True.\n\nprovision_guest_agent:\n\
    \   Optional. Indicates whether the VM Agent is installed on the Virtual Machine.\
    \ To run a resource extension in a Virtual Machine, this service must be installed."
  syntax:
    content: update_role(self, service_name, deployment_name, role_name, os_virtual_hard_disk=None,
      network_config=None, availability_set_name=None, data_virtual_hard_disks=None,
      role_size=None, role_type="PersistentVMRole", resource_extension_references=None,
      provision_guest_agent=None)
    parameters:
    - defaultValue: None
      id: self
    - defaultValue: None
      id: service_name
    - defaultValue: None
      id: deployment_name
    - id: role_name
    - id: os_virtual_hard_disk
    - id: network_config
    - id: availability_set_name
    - defaultValue: None
      id: data_virtual_hard_disks
    - defaultValue: None
      id: role_size
    - defaultValue: PersistentVMRole
      id: role_type
    - defaultValue: None
      id: resource_extension_references
    - defaultValue: None
      id: provision_guest_agent
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_role
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_storage_account
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_storage_account
  source:
    id: update_storage_account
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 237
  summary: "Updates the label, the description, and enables or disables the geo-replication\
    \ status for a storage account in Windows Azure.\nservice_name:\n   Name of the\
    \ storage service account.\n\ndescription:\n   A description for the storage account.\
    \ The description may be up to 1024 characters in length.\n\nlabel:\n   A name\
    \ for the storage account. The name may be up to 100 characters in length. The\
    \ name can be used to identify the storage account for your tracking purposes.\n\
    \ngeo_replication_enabled:\n   Deprecated. Replaced by the account_type parameter.\n\
    \nextended_properties:\n   Dictionary containing name/value pairs of storage account\
    \ properties. You can have a maximum of 50 extended property name/value pairs.\
    \ The maximum length of the Name element is 64 characters, only alphanumeric characters\
    \ and underscores are valid in the Name, and the name must start with a letter.\
    \ The value has a maximum length of 255 characters.\n\naccount_type:\n   Specifies\
    \ whether the account supports locally-redundant storage, geo-redundant storage,\
    \ zone-redundant storage, or read access geo-redundant storage. Possible values\
    \ are:\n\n   <SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_storage_account:27:\
    \ (ERROR/3) Unexpected indentation.>\n\n      Standard_LRS, Standard_ZRS, Standard_GRS,\
    \ Standard_RAGRS"
  syntax:
    content: update_storage_account(self, service_name, description=None, label=None,
      geo_replication_enabled=None, extended_properties=None, account_type="Standard_GRS")
    parameters:
    - defaultValue: None
      id: self
    - id: service_name
    - id: description
    - defaultValue: Standard_GRS
      id: label
    - defaultValue: None
      id: geo_replication_enabled
    - defaultValue: None
      id: extended_properties
    - defaultValue: None
      id: account_type
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_storage_account
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: update_vm_image
  source:
    id: update_vm_image
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 2144
  summary: "Updates a VM Image in the image repository that is associated with the\
    \ specified subscription.\nvm_image_name:\n   Name of image to update.\n\nvm_image:\n\
    \   An instance of VMImage class.\n<SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\\
    azure_servicemanagement_legacy-0.20.6-py3.5.egg\\azure\\servicemanagement\\servicemanagementservice.py:docstring\
    \ of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image:8:\
    \ (WARNING/2) Definition list ends without a blank line; unexpected unindent.>\n\
    vm_image.label: Optional. Specifies an identifier for the image. vm_image.os_disk_configuration:\n\
    <SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image:10:\
    \ (ERROR/3) Unexpected indentation.>\nRequired. Specifies configuration information\
    \ for the operating system disk that is associated with the image.\n<SYSTEM MESSAGE:\
    \ c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image:12:\
    \ (WARNING/2) Block quote ends without a blank line; unexpected unindent.>\nvm_image.os_disk_configuration.host_caching:\n\
    \   Optional. Specifies the caching behavior of the operating system disk. Possible\
    \ values are: None, ReadOnly, ReadWrite\n\nvm_image.data_disk_configurations:\n\
    \   Optional. Specifies configuration information for the data disks that are\
    \ associated with the image. A VM Image might not have data disks associated with\
    \ it.\n\nvm_image.data_disk_configurations[].name:\n   Required. Specifies the\
    \ name of the data disk.\n\nvm_image.data_disk_configurations[].host_caching:\n\
    \   Optional. Specifies the caching behavior of the data disk. Possible values\
    \ are: None, ReadOnly, ReadWrite\n\nvm_image.data_disk_configurations[].lun:\n\
    \   Optional if the lun for the disk is 0. Specifies the Logical Unit Number (LUN)\
    \ for the data disk.\n<SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image:27:\
    \ (WARNING/2) Definition list ends without a blank line; unexpected unindent.>\n\
    vm_image.description: Optional. Specifies the description of the image. vm_image.language:\
    \ Optional. Specifies the language of the image. vm_image.image_family:\n<SYSTEM\
    \ MESSAGE: c:\\python35\\lib\\site-packages\\azure_servicemanagement_legacy-0.20.6-py3.5.egg\\\
    azure\\servicemanagement\\servicemanagementservice.py:docstring of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image:30:\
    \ (ERROR/3) Unexpected indentation.>\nOptional. Specifies a value that can be\
    \ used to group VM Images.\n<SYSTEM MESSAGE: c:\\python35\\lib\\site-packages\\\
    azure_servicemanagement_legacy-0.20.6-py3.5.egg\\azure\\servicemanagement\\servicemanagementservice.py:docstring\
    \ of azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image:31:\
    \ (WARNING/2) Block quote ends without a blank line; unexpected unindent.>\nvm_image.recommended_vm_size:\n\
    \   Optional. Specifies the size to use for the Virtual Machine that is created\
    \ from the VM Image.\n\nvm_image.eula:\n   Optional. Specifies the End User License\
    \ Agreement that is associated with the image. The value for this element is a\
    \ string, but it is recommended that the value be a URL that points to a EULA.\n\
    \nvm_image.icon_uri:\n   Optional. Specifies the URI to the icon that is displayed\
    \ for the image in the Management Portal.\n\nvm_image.small_icon_uri:\n   Optional.\
    \ Specifies the URI to the small icon that is displayed for the image in the Management\
    \ Portal.\n\nvm_image.privacy_uri:\n   Optional. Specifies the URI that points\
    \ to a document that contains the privacy policy related to the image.\n\nvm_image.published_date:\n\
    \   Optional. Specifies the date when the image was added to the image repository.\n\
    \nvm_image.show_in_gui:\n   Optional. Indicates whether the VM Images should be\
    \ listed in the portal."
  syntax:
    content: update_vm_image(self, vm_image_name, vm_image)
    parameters:
    - id: self
    - id: vm_image_name
    - id: vm_image
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.upgrade_deployment
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: upgrade_deployment
  source:
    id: upgrade_deployment
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 658
  summary: "Initiates an upgrade.\nservice_name:\n   Name of the hosted service.\n\
    \ndeployment_name:\n   The name of the deployment.\n\nmode:\n   If set to Manual,\
    \ WalkUpgradeDomain must be called to apply the update. If set to Auto, the Windows\
    \ Azure platform will automatically apply the update To each upgrade domain for\
    \ the service. Possible values are: Auto, Manual\n\npackage_url:\n   A URL that\
    \ refers to the location of the service package in the Blob service. The service\
    \ package can be located either in a storage account beneath the same subscription\
    \ or a Shared Access Signature (SAS) URI from any storage account.\n\nconfiguration:\n\
    \   The base-64 encoded service configuration file for the deployment.\n\nlabel:\n\
    \   A name for the hosted service. The name can be up to 100 characters in length.\
    \ It is recommended that the label be unique within the subscription. The name\
    \ can be used to identify the hosted service for your tracking purposes.\n\nforce:\n\
    \   Specifies whether the rollback should proceed even when it will cause local\
    \ data to be lost from some role instances. True if the rollback should proceed;\
    \ otherwise false if the rollback should fail.\n\nrole_to_upgrade:\n   The name\
    \ of the specific role to upgrade.\n\nextended_properties:\n   Dictionary containing\
    \ name/value pairs of storage account properties. You can have a maximum of 50\
    \ extended property name/value pairs. The maximum length of the Name element is\
    \ 64 characters, only alphanumeric characters and underscores are valid in the\
    \ Name, and the name must start with a letter. The value has a maximum length\
    \ of 255 characters."
  syntax:
    content: upgrade_deployment(self, service_name, deployment_name, mode, package_url,
      configuration, label, force, role_to_upgrade=None, extended_properties=None)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: mode
    - id: package_url
    - defaultValue: None
      id: configuration
    - defaultValue: None
      id: label
    - id: force
    - id: role_to_upgrade
    - id: extended_properties
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.upgrade_deployment
- _type: method
  class: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.walk_upgrade_domain
  langs:
  - python
  module: azure.servicemanagement.servicemanagementservice
  name: walk_upgrade_domain
  source:
    id: walk_upgrade_domain
    path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
    remote:
      branch: master
      path: \azure_servicemanagement_legacy-0.20.6-py3.5.egg\azure\servicemanagement\servicemanagementservice.py
      repo: https://github.com/swatDong/azure-sdk-for-python
    startLine: 720
  summary: "Specifies the next upgrade domain to be walked during manual in-place\
    \ upgrade or configuration change.\nservice_name:\n   Name of the hosted service.\n\
    \ndeployment_name:\n   The name of the deployment.\n\nupgrade_domain:\n   An integer\
    \ value that identifies the upgrade domain to walk. Upgrade domains are identified\
    \ with a zero-based index: the first upgrade domain has an ID of 0, the second\
    \ has an ID of 1, and so on."
  syntax:
    content: walk_upgrade_domain(self, service_name, deployment_name, upgrade_domain)
    parameters:
    - id: self
    - id: service_name
    - id: deployment_name
    - id: upgrade_domain
  type: Method
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.walk_upgrade_domain
references:
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_data_disk
  isExternal: false
  name: add_data_disk
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_data_disk
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_disk
  isExternal: false
  name: add_disk
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_disk
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_dns_server
  isExternal: false
  name: add_dns_server
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_dns_server
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_management_certificate
  isExternal: false
  name: add_management_certificate
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_management_certificate
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_os_image
  isExternal: false
  name: add_os_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_os_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_role
  isExternal: false
  name: add_role
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_role
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_service_certificate
  isExternal: false
  name: add_service_certificate
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.add_service_certificate
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.associate_reserved_ip_address
  isExternal: false
  name: associate_reserved_ip_address
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.associate_reserved_ip_address
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_role
  isExternal: false
  name: capture_role
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_role
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_vm_image
  isExternal: false
  name: capture_vm_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.capture_vm_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.change_deployment_configuration
  isExternal: false
  name: change_deployment_configuration
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.change_deployment_configuration
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_hosted_service_name_availability
  isExternal: false
  name: check_hosted_service_name_availability
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_hosted_service_name_availability
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_storage_account_name_availability
  isExternal: false
  name: check_storage_account_name_availability
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.check_storage_account_name_availability
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_affinity_group
  isExternal: false
  name: create_affinity_group
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_affinity_group
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_deployment
  isExternal: false
  name: create_deployment
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_deployment
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_hosted_service
  isExternal: false
  name: create_hosted_service
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_hosted_service
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_reserved_ip_address
  isExternal: false
  name: create_reserved_ip_address
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_reserved_ip_address
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_storage_account
  isExternal: false
  name: create_storage_account
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_storage_account
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_virtual_machine_deployment
  isExternal: false
  name: create_virtual_machine_deployment
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_virtual_machine_deployment
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image
  isExternal: false
  name: create_vm_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.create_vm_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_affinity_group
  isExternal: false
  name: delete_affinity_group
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_affinity_group
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_data_disk
  isExternal: false
  name: delete_data_disk
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_data_disk
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_deployment
  isExternal: false
  name: delete_deployment
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_deployment
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_disk
  isExternal: false
  name: delete_disk
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_disk
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_dns_server
  isExternal: false
  name: delete_dns_server
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_dns_server
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_hosted_service
  isExternal: false
  name: delete_hosted_service
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_hosted_service
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_management_certificate
  isExternal: false
  name: delete_management_certificate
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_management_certificate
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_os_image
  isExternal: false
  name: delete_os_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_os_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_reserved_ip_address
  isExternal: false
  name: delete_reserved_ip_address
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_reserved_ip_address
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role
  isExternal: false
  name: delete_role
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role_instances
  isExternal: false
  name: delete_role_instances
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_role_instances
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_service_certificate
  isExternal: false
  name: delete_service_certificate
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_service_certificate
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_storage_account
  isExternal: false
  name: delete_storage_account
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_storage_account
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_vm_image
  isExternal: false
  name: delete_vm_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.delete_vm_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.disassociate_reserved_ip_address
  isExternal: false
  name: disassociate_reserved_ip_address
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.disassociate_reserved_ip_address
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_affinity_group_properties
  isExternal: false
  name: get_affinity_group_properties
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_affinity_group_properties
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_data_disk
  isExternal: false
  name: get_data_disk
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_data_disk
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_name
  isExternal: false
  name: get_deployment_by_name
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_name
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_slot
  isExternal: false
  name: get_deployment_by_slot
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_deployment_by_slot
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_disk
  isExternal: false
  name: get_disk
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_disk
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_hosted_service_properties
  isExternal: false
  name: get_hosted_service_properties
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_hosted_service_properties
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_management_certificate
  isExternal: false
  name: get_management_certificate
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_management_certificate
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image
  isExternal: false
  name: get_os_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image_details
  isExternal: false
  name: get_os_image_details
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_os_image_details
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_reserved_ip_address
  isExternal: false
  name: get_reserved_ip_address
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_reserved_ip_address
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_role
  isExternal: false
  name: get_role
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_role
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_service_certificate
  isExternal: false
  name: get_service_certificate
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_service_certificate
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_keys
  isExternal: false
  name: get_storage_account_keys
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_keys
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_properties
  isExternal: false
  name: get_storage_account_properties
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_storage_account_properties
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_subscription
  isExternal: false
  name: get_subscription
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.get_subscription
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_affinity_groups
  isExternal: false
  name: list_affinity_groups
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_affinity_groups
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_disks
  isExternal: false
  name: list_disks
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_disks
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_hosted_services
  isExternal: false
  name: list_hosted_services
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_hosted_services
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_locations
  isExternal: false
  name: list_locations
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_locations
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_management_certificates
  isExternal: false
  name: list_management_certificates
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_management_certificates
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_system_families
  isExternal: false
  name: list_operating_system_families
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_system_families
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_systems
  isExternal: false
  name: list_operating_systems
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_operating_systems
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_os_images
  isExternal: false
  name: list_os_images
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_os_images
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_reserved_ip_addresses
  isExternal: false
  name: list_reserved_ip_addresses
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_reserved_ip_addresses
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extension_versions
  isExternal: false
  name: list_resource_extension_versions
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extension_versions
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extensions
  isExternal: false
  name: list_resource_extensions
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_resource_extensions
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_role_sizes
  isExternal: false
  name: list_role_sizes
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_role_sizes
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_service_certificates
  isExternal: false
  name: list_service_certificates
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_service_certificates
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_storage_accounts
  isExternal: false
  name: list_storage_accounts
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_storage_accounts
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscription_operations
  isExternal: false
  name: list_subscription_operations
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscription_operations
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscriptions
  isExternal: false
  name: list_subscriptions
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_subscriptions
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_virtual_network_sites
  isExternal: false
  name: list_virtual_network_sites
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_virtual_network_sites
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_vm_images
  isExternal: false
  name: list_vm_images
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.list_vm_images
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reboot_role_instance
  isExternal: false
  name: reboot_role_instance
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reboot_role_instance
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rebuild_role_instance
  isExternal: false
  name: rebuild_role_instance
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rebuild_role_instance
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.regenerate_storage_account_keys
  isExternal: false
  name: regenerate_storage_account_keys
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.regenerate_storage_account_keys
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reimage_role_instance
  isExternal: false
  name: reimage_role_instance
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.reimage_role_instance
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.replicate_vm_image
  isExternal: false
  name: replicate_vm_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.replicate_vm_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.restart_role
  isExternal: false
  name: restart_role
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.restart_role
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rollback_update_or_upgrade
  isExternal: false
  name: rollback_update_or_upgrade
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.rollback_update_or_upgrade
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.share_vm_image
  isExternal: false
  name: share_vm_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.share_vm_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_role
  isExternal: false
  name: shutdown_role
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_role
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_roles
  isExternal: false
  name: shutdown_roles
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.shutdown_roles
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_role
  isExternal: false
  name: start_role
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_role
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_roles
  isExternal: false
  name: start_roles
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.start_roles
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.swap_deployment
  isExternal: false
  name: swap_deployment
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.swap_deployment
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.unreplicate_vm_image
  isExternal: false
  name: unreplicate_vm_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.unreplicate_vm_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_affinity_group
  isExternal: false
  name: update_affinity_group
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_affinity_group
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_data_disk
  isExternal: false
  name: update_data_disk
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_data_disk
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_deployment_status
  isExternal: false
  name: update_deployment_status
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_deployment_status
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_disk
  isExternal: false
  name: update_disk
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_disk
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_dns_server
  isExternal: false
  name: update_dns_server
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_dns_server
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_hosted_service
  isExternal: false
  name: update_hosted_service
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_hosted_service
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image
  isExternal: false
  name: update_os_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference
  isExternal: false
  name: update_os_image_from_image_reference
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_os_image_from_image_reference
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_role
  isExternal: false
  name: update_role
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_role
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_storage_account
  isExternal: false
  name: update_storage_account
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_storage_account
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image
  isExternal: false
  name: update_vm_image
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.update_vm_image
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.upgrade_deployment
  isExternal: false
  name: upgrade_deployment
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.upgrade_deployment
- fullName: azure.servicemanagement.servicemanagementservice.ServiceManagementService.walk_upgrade_domain
  isExternal: false
  name: walk_upgrade_domain
  parent: azure.servicemanagement.servicemanagementservice.ServiceManagementService
  uid: azure.servicemanagement.servicemanagementservice.ServiceManagementService.walk_upgrade_domain
